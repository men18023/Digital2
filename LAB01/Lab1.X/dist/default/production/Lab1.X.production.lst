

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 20 11:51:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370                           
   371                           	psect	idataBANK0
   372  0133                     __pidataBANK0:
   373                           
   374                           ;initializer for _tabla
   375  0133  343F               	retlw	63
   376  0134  3406               	retlw	6
   377  0135  345B               	retlw	91
   378  0136  344F               	retlw	79
   379  0137  3466               	retlw	102
   380  0138  346D               	retlw	109
   381  0139  347D               	retlw	125
   382  013A  3407               	retlw	7
   383  013B  347F               	retlw	127
   384  013C  346F               	retlw	111
   385  013D  3477               	retlw	119
   386  013E  347C               	retlw	124
   387  013F  3439               	retlw	57
   388  0140  345E               	retlw	94
   389  0141  3479               	retlw	121
   390  0142  3471               	retlw	113
   391                           
   392                           	psect	nvCOMMON
   393  007A                     __pnvCOMMON:
   394  007A                     _nib2:
   395  007A                     	ds	1
   396  007B                     _nib1:
   397  007B                     	ds	1
   398  001E                     _ADRESH	set	30
   399  0009                     _PORTE	set	9
   400  0006                     _PORTB	set	6
   401  0005                     _PORTA	set	5
   402  001F                     _ADCON0bits	set	31
   403  000C                     _PIR1bits	set	12
   404  0001                     _TMR0	set	1
   405  0008                     _PORTD	set	8
   406  0009                     _PORTEbits	set	9
   407  000B                     _INTCONbits	set	11
   408  0007                     _PORTC	set	7
   409  0006                     _PORTBbits	set	6
   410  005A                     _T0IF	set	90
   411  0058                     _RBIF	set	88
   412  009F                     _ADCON1bits	set	159
   413  008C                     _PIE1bits	set	140
   414  0096                     _IOCBbits	set	150
   415  0095                     _WPUB	set	149
   416  0081                     _OPTION_REGbits	set	129
   417  008F                     _OSCCONbits	set	143
   418  0086                     _TRISBbits	set	134
   419  0089                     _TRISE	set	137
   420  0088                     _TRISD	set	136
   421  0087                     _TRISC	set	135
   422  0085                     _TRISAbits	set	133
   423  0189                     _ANSELH	set	393
   424  0188                     _ANSEL	set	392
   425                           
   426                           	psect	cinit
   427  0011                     start_initialization:	
   428                           ; #config settings
   429                           
   430  0011                     __initialization:
   431                           
   432                           ; Initialize objects allocated to BANK0
   433  0011  1383               	bcf	3,7	;select IRP bank0
   434  0012  3030               	movlw	low (__pdataBANK0+16)
   435  0013  00FD               	movwf	btemp+-1
   436  0014  3001               	movlw	high __pidataBANK0
   437  0015  00FE               	movwf	btemp
   438  0016  3033               	movlw	low __pidataBANK0
   439  0017  00FF               	movwf	btemp+1
   440  0018  3020               	movlw	low __pdataBANK0
   441  0019  0084               	movwf	4
   442  001A  120A  118A  2124  120A  118A  	fcall	init_ram0
   443                           
   444                           ; Clear objects allocated to COMMON
   445  001F  01F6               	clrf	__pbssCOMMON& (0+127)
   446  0020  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   447  0021  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   448  0022  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   449  0023                     end_of_initialization:	
   450                           ;End of C runtime variable initialization code
   451                           
   452  0023                     __end_of__initialization:
   453  0023  0183               	clrf	3
   454  0024  120A  118A  28D5   	ljmp	_main	;jump to C main() function
   455                           
   456                           	psect	bssCOMMON
   457  0076                     __pbssCOMMON:
   458  0076                     _multi:
   459  0076                     	ds	2
   460  0078                     _trad:
   461  0078                     	ds	1
   462  0079                     _contador:
   463  0079                     	ds	1
   464                           
   465                           	psect	dataBANK0
   466  0020                     __pdataBANK0:
   467  0020                     _tabla:
   468  0020                     	ds	16
   469                           
   470                           	psect	inittext
   471  0120                     init_fetch0:	
   472                           ;	Called with low address in FSR and high address in W
   473                           
   474  0120  087E               	movf	btemp,w
   475  0121  008A               	movwf	10
   476  0122  087F               	movf	btemp+1,w
   477  0123  0082               	movwf	2
   478  0124                     init_ram0:	
   479                           ;Called with:
   480                           ;	high address of idata address in btemp 
   481                           ;	low address of idata address in btemp+1 
   482                           ;	low address of data in FSR
   483                           ;	high address + 1 of data in btemp-1
   484                           
   485  0124  120A  118A  2120  120A  118A  	fcall	init_fetch0
   486  0129  0080               	movwf	0
   487  012A  0A84               	incf	4,f
   488  012B  0804               	movf	4,w
   489  012C  067D               	xorwf	btemp+-1,w
   490  012D  1903               	btfsc	3,2
   491  012E  3400               	retlw	0
   492  012F  0AFF               	incf	btemp+1,f
   493  0130  1903               	btfsc	3,2
   494  0131  0AFE               	incf	btemp,f
   495  0132  2924               	goto	init_ram0
   496                           
   497                           	psect	cstackCOMMON
   498  0070                     __pcstackCOMMON:
   499  0070                     ?_display:
   500  0070                     ??_display:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_valor_ADC:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_setup:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_swap_nib:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_conADC:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_isr:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_main:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?i1_valor_ADC:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??i1_valor_ADC:	
   525                           ; 1 bytes @ 0x0
   526                           
   527                           
   528                           ; 1 bytes @ 0x0
   529  0070                     	ds	1
   530  0071                     display@hex:
   531                           
   532                           ; 1 bytes @ 0x1
   533  0071                     	ds	1
   534  0072                     ??_isr:
   535                           
   536                           ; 1 bytes @ 0x2
   537  0072                     	ds	4
   538                           
   539                           	psect	cstackBANK0
   540  0030                     __pcstackBANK0:
   541  0030                     ??_valor_ADC:
   542  0030                     ??_setup:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0030                     ??_swap_nib:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0030                     ??_conADC:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 1 bytes @ 0x0
   553  0030                     	ds	4
   554  0034                     swap_nib@num:
   555                           
   556                           ; 1 bytes @ 0x4
   557  0034                     	ds	1
   558  0035                     swap_nib@n:
   559                           
   560                           ; 1 bytes @ 0x5
   561  0035                     	ds	1
   562  0036                     ??_main:
   563                           
   564                           ; 1 bytes @ 0x6
   565  0036                     	ds	1
   566                           
   567                           	psect	maintext
   568  00D5                     __pmaintext:	
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 89 in file "main1.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B00/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       1       0       0       0
   591 ;;      Totals:         0       1       0       0       0
   592 ;;Total ram usage:        1 bytes
   593 ;; Hardware stack levels required when called:    4
   594 ;; This function calls:
   595 ;;		_setup
   596 ;;		_swap_nib
   597 ;;		_valor_ADC
   598 ;; This function is called by:
   599 ;;		Startup code after reset
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _main
   605  00D5                     _main:
   606  00D5                     l991:	
   607                           ;incstack = 0
   608                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   609                           
   610                           
   611                           ;main1.c: 91:     setup();
   612  00D5  120A  118A  209C  120A  118A  	fcall	_setup
   613  00DA                     l993:
   614                           
   615                           ;main1.c: 93:     {;main1.c: 94:         ADCON0bits.GO = 1;
   616  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   617  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   618  00DC  149F               	bsf	31,1	;volatile
   619  00DD                     l995:
   620                           
   621                           ;main1.c: 95:         nib1 = contador & 0x0F;
   622  00DD  0879               	movf	_contador,w
   623  00DE  390F               	andlw	15
   624  00DF  00B6               	movwf	??_main
   625  00E0  0836               	movf	??_main,w
   626  00E1  00FB               	movwf	_nib1
   627  00E2                     l997:
   628                           
   629                           ;main1.c: 96:         nib2 = swap_nib(contador)& 0x0F;
   630  00E2  0879               	movf	_contador,w
   631  00E3  120A  118A  2101  120A  118A  	fcall	_swap_nib
   632  00E8  390F               	andlw	15
   633  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   634  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   635  00EB  00B6               	movwf	??_main
   636  00EC  0836               	movf	??_main,w
   637  00ED  00FA               	movwf	_nib2
   638  00EE                     l999:
   639                           
   640                           ;main1.c: 97:         if (PORTC < valor_ADC())
   641  00EE  120A  118A  215B  120A  118A  	fcall	_valor_ADC
   642  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   643  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   644  00F5  0207               	subwf	7,w	;volatile
   645  00F6  1803               	skipnc
   646  00F7  28F9               	goto	u171
   647  00F8  28FA               	goto	u170
   648  00F9                     u171:
   649  00F9  28FC               	goto	l90
   650  00FA                     u170:
   651  00FA                     l1001:
   652                           
   653                           ;main1.c: 98:         {;main1.c: 99:             PORTBbits.RB7 = 1;
   654  00FA  1786               	bsf	6,7	;volatile
   655                           
   656                           ;main1.c: 100:         }
   657  00FB  28DA               	goto	l993
   658  00FC                     l90:	
   659                           ;main1.c: 101:         else
   660                           
   661                           
   662                           ;main1.c: 102:             PORTBbits.RB7 = 0;
   663  00FC  1386               	bcf	6,7	;volatile
   664  00FD  28DA               	goto	l993
   665  00FE  120A  118A  280E   	ljmp	start
   666  0101                     __end_of_main:
   667                           
   668                           	psect	text1
   669  015B                     __ptext1:	
   670 ;; *************** function _valor_ADC *****************
   671 ;; Defined at:
   672 ;;		line 7 in file "ADC.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    2
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _valor_ADC
   702  015B                     _valor_ADC:
   703  015B                     l909:	
   704                           ;incstack = 0
   705                           ; Regs used in _valor_ADC: [wreg]
   706                           
   707                           
   708                           ;ADC.c: 9:     return ADRESH;
   709  015B  1283               	bcf	3,5	;RP0=0, select bank0
   710  015C  1303               	bcf	3,6	;RP1=0, select bank0
   711  015D  081E               	movf	30,w	;volatile
   712  015E                     l109:
   713  015E  0008               	return
   714  015F                     __end_of_valor_ADC:
   715                           
   716                           	psect	text2
   717  0101                     __ptext2:	
   718 ;; *************** function _swap_nib *****************
   719 ;; Defined at:
   720 ;;		line 153 in file "main1.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  n               1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  n               1    5[BANK0 ] unsigned char 
   725 ;;  num             1    4[BANK0 ] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      unsigned char 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       0       0       0       0
   736 ;;      Locals:         0       2       0       0       0
   737 ;;      Temps:          0       4       0       0       0
   738 ;;      Totals:         0       6       0       0       0
   739 ;;Total ram usage:        6 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    2
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _swap_nib
   751  0101                     _swap_nib:
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _swap_nib: [wreg+status,2+status,0]
   755                           ;swap_nib@n stored from wreg
   756  0101  1283               	bcf	3,5	;RP0=0, select bank0
   757  0102  1303               	bcf	3,6	;RP1=0, select bank0
   758  0103  00B5               	movwf	swap_nib@n
   759  0104                     l985:
   760                           
   761                           ;main1.c: 153: unsigned char swap_nib ( unsigned char n);main1.c: 154: {;main1.c: 155:  
      +                             unsigned char num;;main1.c: 156:     num = (((n & 0x0F ) << 4) | ((n & 0xF0 ) >> 4));
   762  0104  0835               	movf	swap_nib@n,w
   763  0105  00B0               	movwf	??_swap_nib
   764  0106  3004               	movlw	4
   765  0107                     u155:
   766  0107  1003               	clrc
   767  0108  0CB0               	rrf	??_swap_nib,f
   768  0109  3EFF               	addlw	-1
   769  010A  1D03               	skipz
   770  010B  2907               	goto	u155
   771  010C  300F               	movlw	15
   772  010D  0530               	andwf	??_swap_nib,w
   773  010E  00B1               	movwf	??_swap_nib+1
   774  010F  0835               	movf	swap_nib@n,w
   775  0110  390F               	andlw	15
   776  0111  00B2               	movwf	??_swap_nib+2
   777  0112  3003               	movlw	3
   778  0113                     u165:
   779  0113  1003               	clrc
   780  0114  0DB2               	rlf	??_swap_nib+2,f
   781  0115  3EFF               	addlw	-1
   782  0116  1D03               	skipz
   783  0117  2913               	goto	u165
   784  0118  1003               	clrc
   785  0119  0D32               	rlf	??_swap_nib+2,w
   786  011A  0431               	iorwf	??_swap_nib+1,w
   787  011B  00B3               	movwf	??_swap_nib+3
   788  011C  0833               	movf	??_swap_nib+3,w
   789  011D  00B4               	movwf	swap_nib@num
   790  011E                     l987:
   791                           
   792                           ;main1.c: 157:     return num;
   793  011E  0834               	movf	swap_nib@num,w
   794  011F                     l100:
   795  011F  0008               	return
   796  0120                     __end_of_swap_nib:
   797                           
   798                           	psect	text3
   799  009C                     __ptext3:	
   800 ;; *************** function _setup *****************
   801 ;; Defined at:
   802 ;;		line 106 in file "main1.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    3
   823 ;; This function calls:
   824 ;;		_conADC
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _setup
   832  009C                     _setup:
   833  009C                     l913:	
   834                           ;incstack = 0
   835                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   836                           
   837                           
   838                           ;main1.c: 108:     ANSEL = 0b00000001;
   839  009C  3001               	movlw	1
   840  009D  1683               	bsf	3,5	;RP0=1, select bank3
   841  009E  1703               	bsf	3,6	;RP1=1, select bank3
   842  009F  0088               	movwf	8	;volatile
   843  00A0                     l915:
   844                           
   845                           ;main1.c: 109:     ANSELH = 0X00;
   846  00A0  0189               	clrf	9	;volatile
   847  00A1                     l917:
   848                           
   849                           ;main1.c: 111:     TRISAbits.TRISA0 = 1;
   850  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   851  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   852  00A3  1405               	bsf	5,0	;volatile
   853  00A4                     l919:
   854                           
   855                           ;main1.c: 112:     TRISC = 0X00;
   856  00A4  0187               	clrf	7	;volatile
   857  00A5                     l921:
   858                           
   859                           ;main1.c: 113:     TRISD = 0X00;
   860  00A5  0188               	clrf	8	;volatile
   861  00A6                     l923:
   862                           
   863                           ;main1.c: 114:     TRISE = 0X00;
   864  00A6  0189               	clrf	9	;volatile
   865  00A7                     l925:
   866                           
   867                           ;main1.c: 115:     TRISBbits.TRISB0 = 1;
   868  00A7  1406               	bsf	6,0	;volatile
   869  00A8                     l927:
   870                           
   871                           ;main1.c: 116:     TRISBbits.TRISB1 = 1;
   872  00A8  1486               	bsf	6,1	;volatile
   873  00A9                     l929:
   874                           
   875                           ;main1.c: 117:     TRISBbits.TRISB7 = 0;
   876  00A9  1386               	bcf	6,7	;volatile
   877  00AA                     l931:
   878                           
   879                           ;main1.c: 119:     PORTA = 0X00;
   880  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   881  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   882  00AC  0185               	clrf	5	;volatile
   883  00AD                     l933:
   884                           
   885                           ;main1.c: 120:     PORTC = 0X00;
   886  00AD  0187               	clrf	7	;volatile
   887  00AE                     l935:
   888                           
   889                           ;main1.c: 121:     PORTD = 0X00;
   890  00AE  0188               	clrf	8	;volatile
   891  00AF                     l937:
   892                           
   893                           ;main1.c: 122:     PORTB = 0X00;
   894  00AF  0186               	clrf	6	;volatile
   895  00B0                     l939:
   896                           
   897                           ;main1.c: 123:     PORTE = 0X00;
   898  00B0  0189               	clrf	9	;volatile
   899  00B1                     l941:
   900                           
   901                           ;main1.c: 125:     OSCCONbits.IRCF2 = 0;
   902  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   903  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   904  00B3  130F               	bcf	15,6	;volatile
   905  00B4                     l943:
   906                           
   907                           ;main1.c: 126:     OSCCONbits.IRCF1 = 1;
   908  00B4  168F               	bsf	15,5	;volatile
   909  00B5                     l945:
   910                           
   911                           ;main1.c: 127:     OSCCONbits.IRCF0 = 1;
   912  00B5  160F               	bsf	15,4	;volatile
   913  00B6                     l947:
   914                           
   915                           ;main1.c: 128:     OSCCONbits.SCS = 1;
   916  00B6  140F               	bsf	15,0	;volatile
   917  00B7                     l949:
   918                           
   919                           ;main1.c: 130:     OPTION_REGbits.T0CS = 0;
   920  00B7  1281               	bcf	1,5	;volatile
   921  00B8                     l951:
   922                           
   923                           ;main1.c: 131:     OPTION_REGbits.PSA = 0;
   924  00B8  1181               	bcf	1,3	;volatile
   925  00B9                     l953:
   926                           
   927                           ;main1.c: 132:     OPTION_REGbits.PS2 = 0;
   928  00B9  1101               	bcf	1,2	;volatile
   929  00BA                     l955:
   930                           
   931                           ;main1.c: 133:     OPTION_REGbits.PS1 = 0;
   932  00BA  1081               	bcf	1,1	;volatile
   933  00BB                     l957:
   934                           
   935                           ;main1.c: 134:     OPTION_REGbits.PS0 = 0;
   936  00BB  1001               	bcf	1,0	;volatile
   937  00BC                     l959:
   938                           
   939                           ;main1.c: 136:     OPTION_REGbits.nRBPU = 0;
   940  00BC  1381               	bcf	1,7	;volatile
   941  00BD                     l961:
   942                           
   943                           ;main1.c: 137:     WPUB = 0b00000011;
   944  00BD  3003               	movlw	3
   945  00BE  0095               	movwf	21	;volatile
   946  00BF                     l963:
   947                           
   948                           ;main1.c: 138:     IOCBbits.IOCB0 = 1;
   949  00BF  1416               	bsf	22,0	;volatile
   950  00C0                     l965:
   951                           
   952                           ;main1.c: 139:     IOCBbits.IOCB1 = 1;
   953  00C0  1496               	bsf	22,1	;volatile
   954  00C1                     l967:
   955                           
   956                           ;main1.c: 141:     conADC();
   957  00C1  120A  118A  2143  120A  118A  	fcall	_conADC
   958  00C6                     l969:
   959                           
   960                           ;main1.c: 143:     PIE1bits.ADIE = 1;
   961  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   962  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   963  00C8  170C               	bsf	12,6	;volatile
   964  00C9                     l971:
   965                           
   966                           ;main1.c: 144:     PIR1bits.ADIF = 0;
   967  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   968  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   969  00CB  130C               	bcf	12,6	;volatile
   970  00CC                     l973:
   971                           
   972                           ;main1.c: 145:     INTCONbits.GIE = 1;
   973  00CC  178B               	bsf	11,7	;volatile
   974  00CD                     l975:
   975                           
   976                           ;main1.c: 146:     INTCONbits.PEIE = 1;
   977  00CD  170B               	bsf	11,6	;volatile
   978  00CE                     l977:
   979                           
   980                           ;main1.c: 148:     IOCBbits.IOCB0 = 1;
   981  00CE  1683               	bsf	3,5	;RP0=1, select bank1
   982  00CF  1303               	bcf	3,6	;RP1=0, select bank1
   983  00D0  1416               	bsf	22,0	;volatile
   984  00D1                     l979:
   985                           
   986                           ;main1.c: 149:     IOCBbits.IOCB1 = 1;
   987  00D1  1496               	bsf	22,1	;volatile
   988  00D2                     l981:
   989                           
   990                           ;main1.c: 150:     INTCONbits.RBIE = 1;
   991  00D2  158B               	bsf	11,3	;volatile
   992  00D3                     l983:
   993                           
   994                           ;main1.c: 151:     INTCONbits.RBIF = 0;
   995  00D3  100B               	bcf	11,0	;volatile
   996  00D4                     l97:
   997  00D4  0008               	return
   998  00D5                     __end_of_setup:
   999                           
  1000                           	psect	text4
  1001  0143                     __ptext4:	
  1002 ;; *************** function _conADC *****************
  1003 ;; Defined at:
  1004 ;;		line 11 in file "ADC.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    2
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_setup
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _conADC
  1034  0143                     _conADC:
  1035  0143                     l895:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _conADC: [wreg+status,2+status,0]
  1038                           
  1039                           
  1040                           ;ADC.c: 13:     ADCON0bits.CHS = 0;
  1041  0143  30C3               	movlw	-61
  1042  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0146  059F               	andwf	31,f	;volatile
  1045  0147                     l897:
  1046                           
  1047                           ;ADC.c: 14:     ADCON0bits.ADCS1 = 1;
  1048  0147  179F               	bsf	31,7	;volatile
  1049  0148                     l899:
  1050                           
  1051                           ;ADC.c: 15:     ADCON0bits.ADCS0 = 1;
  1052  0148  171F               	bsf	31,6	;volatile
  1053  0149                     l901:
  1054                           
  1055                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  1056  0149  141F               	bsf	31,0	;volatile
  1057  014A                     l903:
  1058                           
  1059                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  1060  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1061  014B  1303               	bcf	3,6	;RP1=0, select bank1
  1062  014C  139F               	bcf	31,7	;volatile
  1063  014D                     l905:
  1064                           
  1065                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  1066  014D  121F               	bcf	31,4	;volatile
  1067  014E                     l907:
  1068                           
  1069                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  1070  014E  129F               	bcf	31,5	;volatile
  1071  014F                     l112:
  1072  014F  0008               	return
  1073  0150                     __end_of_conADC:
  1074                           
  1075                           	psect	text5
  1076  0027                     __ptext5:	
  1077 ;; *************** function _isr *****************
  1078 ;; Defined at:
  1079 ;;		line 43 in file "main1.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          4       0       0       0       0
  1096 ;;      Totals:         4       0       0       0       0
  1097 ;;Total ram usage:        4 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    1
  1100 ;; This function calls:
  1101 ;;		_display
  1102 ;;		i1_valor_ADC
  1103 ;; This function is called by:
  1104 ;;		Interrupt level 1
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _isr
  1110  0027                     _isr:
  1111  0027                     i1l817:
  1112                           
  1113                           ;main1.c: 45:     if (RBIF == 1){
  1114  0027  1C0B               	btfss	11,0	;volatile
  1115  0028  282A               	goto	u3_21
  1116  0029  282B               	goto	u3_20
  1117  002A                     u3_21:
  1118  002A  283C               	goto	i1l829
  1119  002B                     u3_20:
  1120  002B                     i1l819:
  1121                           
  1122                           ;main1.c: 46:         if (PORTBbits.RB0 == 0)
  1123  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1124  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1125  002D  1806               	btfsc	6,0	;volatile
  1126  002E  2830               	goto	u4_21
  1127  002F  2831               	goto	u4_20
  1128  0030                     u4_21:
  1129  0030  2835               	goto	i1l823
  1130  0031                     u4_20:
  1131  0031                     i1l821:
  1132                           
  1133                           ;main1.c: 47:         {;main1.c: 48:             PORTC++;
  1134  0031  3001               	movlw	1
  1135  0032  00F2               	movwf	??_isr
  1136  0033  0872               	movf	??_isr,w
  1137  0034  0787               	addwf	7,f	;volatile
  1138  0035                     i1l823:
  1139                           
  1140                           ;main1.c: 50:         if (PORTBbits.RB1 == 0)
  1141  0035  1886               	btfsc	6,1	;volatile
  1142  0036  2838               	goto	u5_21
  1143  0037  2839               	goto	u5_20
  1144  0038                     u5_21:
  1145  0038  283B               	goto	i1l827
  1146  0039                     u5_20:
  1147  0039                     i1l825:
  1148                           
  1149                           ;main1.c: 51:         {;main1.c: 52:             PORTC-- ;
  1150  0039  3001               	movlw	1
  1151  003A  0287               	subwf	7,f	;volatile
  1152  003B                     i1l827:
  1153                           
  1154                           ;main1.c: 54:         INTCONbits.RBIF = 0;
  1155  003B  100B               	bcf	11,0	;volatile
  1156  003C                     i1l829:
  1157                           
  1158                           ;main1.c: 57:     if (T0IF == 1) {
  1159  003C  1D0B               	btfss	11,2	;volatile
  1160  003D  283F               	goto	u6_21
  1161  003E  2840               	goto	u6_20
  1162  003F                     u6_21:
  1163  003F  2874               	goto	i1l855
  1164  0040                     u6_20:
  1165  0040                     i1l831:
  1166                           
  1167                           ;main1.c: 58:         if (multi == 0)
  1168  0040  0876               	movf	_multi,w
  1169  0041  0477               	iorwf	_multi+1,w
  1170  0042  1D03               	btfss	3,2
  1171  0043  2845               	goto	u7_21
  1172  0044  2846               	goto	u7_20
  1173  0045                     u7_21:
  1174  0045  2859               	goto	i1l841
  1175  0046                     u7_20:
  1176  0046                     i1l833:
  1177                           
  1178                           ;main1.c: 59:         {;main1.c: 60:             PORTEbits.RE1 = 0;
  1179  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0048  1089               	bcf	9,1	;volatile
  1182                           
  1183                           ;main1.c: 61:             PORTEbits.RE0 = 1;
  1184  0049  1409               	bsf	9,0	;volatile
  1185  004A                     i1l835:
  1186                           
  1187                           ;main1.c: 62:             PORTD = 0;
  1188  004A  0188               	clrf	8	;volatile
  1189  004B                     i1l837:
  1190                           
  1191                           ;main1.c: 63:             PORTD = display(nib2);
  1192  004B  087A               	movf	_nib2,w
  1193  004C  120A  118A  2150  120A  118A  	fcall	_display
  1194  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0053  0088               	movwf	8	;volatile
  1197  0054                     i1l839:
  1198                           
  1199                           ;main1.c: 64:             multi = 1;
  1200  0054  3001               	movlw	1
  1201  0055  00F6               	movwf	_multi
  1202  0056  3000               	movlw	0
  1203  0057  00F7               	movwf	_multi+1
  1204                           
  1205                           ;main1.c: 65:         }
  1206  0058  286F               	goto	i1l851
  1207  0059                     i1l841:
  1208  0059  0376               	decf	_multi,w
  1209  005A  0477               	iorwf	_multi+1,w
  1210  005B  1D03               	btfss	3,2
  1211  005C  285E               	goto	u8_21
  1212  005D  285F               	goto	u8_20
  1213  005E                     u8_21:
  1214  005E  286F               	goto	i1l851
  1215  005F                     u8_20:
  1216  005F                     i1l843:
  1217                           
  1218                           ;main1.c: 68:         {;main1.c: 69:             PORTEbits.RE0 = 0;
  1219  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0061  1009               	bcf	9,0	;volatile
  1222                           
  1223                           ;main1.c: 70:             PORTEbits.RE1 = 1;
  1224  0062  1489               	bsf	9,1	;volatile
  1225  0063                     i1l845:
  1226                           
  1227                           ;main1.c: 71:             PORTD = 0;
  1228  0063  0188               	clrf	8	;volatile
  1229  0064                     i1l847:
  1230                           
  1231                           ;main1.c: 72:             PORTD = display(nib1);
  1232  0064  087B               	movf	_nib1,w
  1233  0065  120A  118A  2150  120A  118A  	fcall	_display
  1234  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1235  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1236  006C  0088               	movwf	8	;volatile
  1237  006D                     i1l849:
  1238                           
  1239                           ;main1.c: 73:             multi = 0;
  1240  006D  01F6               	clrf	_multi
  1241  006E  01F7               	clrf	_multi+1
  1242  006F                     i1l851:
  1243                           
  1244                           ;main1.c: 75:         INTCONbits.T0IF = 0;
  1245  006F  110B               	bcf	11,2	;volatile
  1246  0070                     i1l853:
  1247                           
  1248                           ;main1.c: 76:         TMR0 = 10;
  1249  0070  300A               	movlw	10
  1250  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0073  0081               	movwf	1	;volatile
  1253  0074                     i1l855:
  1254                           
  1255                           ;main1.c: 79:     if (PIR1bits.ADIF == 1){
  1256  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0076  1F0C               	btfss	12,6	;volatile
  1259  0077  2879               	goto	u9_21
  1260  0078  287A               	goto	u9_20
  1261  0079                     u9_21:
  1262  0079  2893               	goto	i1l84
  1263  007A                     u9_20:
  1264  007A                     i1l857:
  1265                           
  1266                           ;main1.c: 80:         if (ADCON0bits.CHS == 0)
  1267  007A  0C1F               	rrf	31,w	;volatile
  1268  007B  00F2               	movwf	??_isr
  1269  007C  0C72               	rrf	??_isr,w
  1270  007D  390F               	andlw	15
  1271  007E  3A00               	xorlw	0
  1272  007F  1D03               	skipz
  1273  0080  2882               	goto	u10_21
  1274  0081  2883               	goto	u10_20
  1275  0082                     u10_21:
  1276  0082  288B               	goto	i1l861
  1277  0083                     u10_20:
  1278  0083                     i1l859:
  1279                           
  1280                           ;main1.c: 81:         {;main1.c: 82:             contador = valor_ADC();
  1281  0083  120A  118A  215F  120A  118A  	fcall	i1_valor_ADC
  1282  0088  00F2               	movwf	??_isr
  1283  0089  0872               	movf	??_isr,w
  1284  008A  00F9               	movwf	_contador
  1285  008B                     i1l861:
  1286                           
  1287                           ;main1.c: 84:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1288  008B  3010               	movlw	16
  1289  008C  00F2               	movwf	??_isr
  1290  008D                     u18_27:
  1291  008D  0BF2               	decfsz	??_isr,f
  1292  008E  288D               	goto	u18_27
  1293  008F  0000               	nop
  1294  0090                     i1l863:
  1295                           
  1296                           ;main1.c: 85:         PIR1bits.ADIF = 0;
  1297  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0092  130C               	bcf	12,6	;volatile
  1300  0093                     i1l84:
  1301  0093  0875               	movf	??_isr+3,w
  1302  0094  008A               	movwf	10
  1303  0095  0874               	movf	??_isr+2,w
  1304  0096  0084               	movwf	4
  1305  0097  0E73               	swapf	??_isr+1,w
  1306  0098  0083               	movwf	3
  1307  0099  0EFE               	swapf	btemp,f
  1308  009A  0E7E               	swapf	btemp,w
  1309  009B  0009               	retfie
  1310  009C                     __end_of_isr:
  1311                           
  1312                           	psect	intentry
  1313  0004                     __pintentry:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1316                           
  1317  0004                     interrupt_function:
  1318  007E                     saved_w	set	btemp
  1319  0004  00FE               	movwf	btemp
  1320  0005  0E03               	swapf	3,w
  1321  0006  00F3               	movwf	??_isr+1
  1322  0007  0804               	movf	4,w
  1323  0008  00F4               	movwf	??_isr+2
  1324  0009  080A               	movf	10,w
  1325  000A  00F5               	movwf	??_isr+3
  1326  000B  120A  118A  2827   	ljmp	_isr
  1327                           
  1328                           	psect	text6
  1329  015F                     __ptext6:	
  1330 ;; *************** function i1_valor_ADC *****************
  1331 ;; Defined at:
  1332 ;;		line 7 in file "ADC.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0
  1349 ;;      Totals:         0       0       0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_isr
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function i1_valor_ADC
  1361  015F                     i1_valor_ADC:
  1362  015F                     i1l813:	
  1363                           ;incstack = 0
  1364                           ; Regs used in i1_valor_ADC: [wreg]
  1365                           
  1366                           
  1367                           ;ADC.c: 9:     return ADRESH;
  1368  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0161  081E               	movf	30,w	;volatile
  1371  0162                     i1l109:
  1372  0162  0008               	return
  1373  0163                     __end_ofi1_valor_ADC:
  1374                           
  1375                           	psect	text7
  1376  0150                     __ptext7:	
  1377 ;; *************** function _display *****************
  1378 ;; Defined at:
  1379 ;;		line 11 in file "7seg.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  hex             1    wreg     unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  hex             1    1[COMMON] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      unsigned char 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         1       0       0       0       0
  1395 ;;      Temps:          1       0       0       0       0
  1396 ;;      Totals:         2       0       0       0       0
  1397 ;;Total ram usage:        2 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_isr
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _display
  1408  0150                     _display:
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1412                           ;display@hex stored from wreg
  1413  0150  00F1               	movwf	display@hex
  1414  0151                     i1l725:
  1415  0151  0871               	movf	display@hex,w
  1416  0152  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1417  0153  0084               	movwf	4
  1418  0154  1383               	bcf	3,7	;select IRP bank0
  1419  0155  0800               	movf	0,w
  1420  0156  00F0               	movwf	??_display
  1421  0157  0870               	movf	??_display,w
  1422  0158  00F8               	movwf	_trad
  1423  0159                     i1l727:
  1424  0159  0878               	movf	_trad,w
  1425  015A                     i1l119:
  1426  015A  0008               	return
  1427  015B                     __end_of_display:
  1428  007E                     btemp	set	126	;btemp
  1429  007E                     wtemp0	set	126
  1430                           
  1431                           	psect	config
  1432                           
  1433                           ;Config register CONFIG1 @ 0x2007
  1434                           ;	Oscillator Selection bits
  1435                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1436                           ;	Watchdog Timer Enable bit
  1437                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1438                           ;	Power-up Timer Enable bit
  1439                           ;	PWRTE = ON, PWRT enabled
  1440                           ;	RE3/MCLR pin function select bit
  1441                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1442                           ;	Code Protection bit
  1443                           ;	CP = OFF, Program memory code protection is disabled
  1444                           ;	Data Code Protection bit
  1445                           ;	CPD = OFF, Data memory code protection is disabled
  1446                           ;	Brown Out Reset Selection bits
  1447                           ;	BOREN = OFF, BOR disabled
  1448                           ;	Internal External Switchover bit
  1449                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1450                           ;	Fail-Safe Clock Monitor Enabled bit
  1451                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1452                           ;	Low Voltage Programming Enable bit
  1453                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1454                           ;	In-Circuit Debugger Mode bit
  1455                           ;	DEBUG = 0x1, unprogrammed default
  1456  2007                     	org	8199
  1457  2007  20C4               	dw	8388
  1458                           
  1459                           ;Config register CONFIG2 @ 0x2008
  1460                           ;	Brown-out Reset Selection bit
  1461                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1462                           ;	Flash Program Memory Self Write Enable bits
  1463                           ;	WRT = OFF, Write protection off
  1464  2008                     	org	8200
  1465  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      7      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_display

Critical Paths under _main in BANK0

    _main->_swap_nib

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      96
                                              6 BANK0      1     1      0
                              _setup
                           _swap_nib
                          _valor_ADC
 ---------------------------------------------------------------------------------
 (1) _valor_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _swap_nib                                             6     6      0      96
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                             _conADC
 ---------------------------------------------------------------------------------
 (2) _conADC                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      15
                                              2 COMMON     4     4      0
                            _display
                        i1_valor_ADC
 ---------------------------------------------------------------------------------
 (4) i1_valor_ADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display                                              2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _conADC
   _swap_nib
   _valor_ADC

 _isr (ROOT)
   _display
   i1_valor_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 20 11:51:24 2021

                      pc 0002                       l90 00FC                       l97 00D4  
                     fsr 0004                      l100 011F                      l112 014F  
                    l109 015E                      l901 0149                      l903 014A  
                    l905 014D                      l921 00A5                      l913 009C  
                    l907 014E                      l931 00AA                      l923 00A6  
                    l915 00A0                      l941 00B1                      l933 00AD  
                    l925 00A7                      l917 00A1                      l909 015B  
                    l951 00B8                      l943 00B4                      l935 00AE  
                    l927 00A8                      l919 00A4                      l961 00BD  
                    l953 00B9                      l945 00B5                      l937 00AF  
                    l929 00A9                      l971 00C9                      l963 00BF  
                    l955 00BA                      l947 00B6                      l939 00B0  
                    l981 00D2                      l973 00CC                      l965 00C0  
                    l957 00BB                      l949 00B7                      l895 0143  
                    l983 00D3                      l975 00CD                      l967 00C1  
                    l959 00BC                      l991 00D5                      l897 0147  
                    l977 00CE                      l969 00C6                      l985 0104  
                    l993 00DA                      l899 0148                      l979 00D1  
                    l987 011E                      l995 00DD                      l997 00E2  
                    l999 00EE                      u170 00FA                      u155 0107  
                    u171 00F9                      u165 0113                      _isr 0027  
                    fsr0 0004                      indf 0000                     l1001 00FA  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   i1l84 0093                     _TMR0 0001                     _WPUB 0095  
                   u3_20 002B                     u3_21 002A                     u4_20 0031  
                   u4_21 0030                     u5_20 0039                     u5_21 0038  
                   u6_20 0040                     u6_21 003F                     u7_20 0046  
                   u7_21 0045                     u8_20 005F                     u8_21 005E  
                   u9_20 007A                     u9_21 0079                     _nib1 007B  
                   _nib2 007A                     _main 00D5                     _trad 0078  
                   btemp 007E                     start 000E                    ??_isr 0072  
                  ?_main 0070                    _ANSEL 0188                    i1l109 0162  
                  i1l119 015A                    i1l725 0151                    i1l813 015F  
                  i1l821 0031                    i1l727 0159                    i1l831 0040  
                  i1l823 0035                    i1l833 0046                    i1l841 0059  
                  i1l825 0039                    i1l817 0027                    i1l843 005F  
                  i1l851 006F                    i1l835 004A                    i1l827 003B  
                  i1l819 002B                    i1l861 008B                    i1l853 0070  
                  i1l845 0063                    i1l837 004B                    i1l829 003C  
                  i1l863 0090                    i1l847 0064                    i1l839 0054  
                  i1l855 0074                    i1l857 007A                    i1l849 006D  
                  i1l859 0083                    u10_20 0083                    u10_21 0082  
                  u18_27 008D                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_display 015B                    _tabla 0020                    _multi 0076  
                  _setup 009C                    pclath 000A              i1_valor_ADC 015F  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0101                   ??_main 0036                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _conADC 0143  
              ??_display 0070                   saved_w 007E         __end_of_swap_nib 0120  
__end_of__initialization 0023           __pcstackCOMMON 0070             __pidataBANK0 0133  
          __end_of_setup 00D5           _OPTION_REGbits 0081                  ??_setup 0030  
             __pnvCOMMON 007A               __pmaintext 00D5                  ?_conADC 0070  
             __pintentry 0004       __size_of_valor_ADC 0004             ?i1_valor_ADC 0070  
        __size_of_conADC 000D                ?_swap_nib 0070                  __ptext1 015B  
                __ptext2 0101                  __ptext3 009C                  __ptext4 0143  
                __ptext5 0027                  __ptext6 015F                  __ptext7 0150  
                _display 0150             __size_of_isr 0075     end_of_initialization 0023  
      __end_of_valor_ADC 015F               ??_swap_nib 0030                _PORTBbits 0006  
              _PORTEbits 0009                _TRISAbits 0085                _TRISBbits 0086  
             display@hex 0071           __end_of_conADC 0150      start_initialization 0011  
            __end_of_isr 009C     __size_ofi1_valor_ADC 0004                 ??_conADC 0030  
             init_fetch0 0120              __pdataBANK0 0020              swap_nib@num 0034  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0030  
      __size_of_swap_nib 001F                 ?_display 0070           __size_of_setup 0039  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C                _valor_ADC 015B               _ADCON0bits 001F  
             _ADCON1bits 009F               ?_valor_ADC 0070         __size_of_display 000B  
               _contador 0079            __size_of_main 002C                 _swap_nib 0101  
             _INTCONbits 000B                 init_ram0 0124                swap_nib@n 0035  
               intlevel1 0000            ??i1_valor_ADC 0070               _OSCCONbits 008F  
            ??_valor_ADC 0030      __end_ofi1_valor_ADC 0163  
