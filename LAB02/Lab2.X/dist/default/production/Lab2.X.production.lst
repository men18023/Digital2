

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 12:18:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text3_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.31
    59                           ; Generated 13/10/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  1000                     __pstrings:
   486  1000                     stringtab:
   487  1000                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  1000  1BFF               	btfsc	btemp+1,7
   491  1001  280A               	ljmp	stringcode
   492  1002  1383               	bcf	3,7
   493  1003  187F               	btfsc	btemp+1,0
   494  1004  1783               	bsf	3,7
   495  1005  0800               	movf	0,w
   496  1006  0A84               	incf	4,f
   497  1007  1903               	skipnz
   498  1008  0AFF               	incf	btemp+1,f
   499  1009  0008               	return
   500  100A                     stringcode:
   501  100A                     stringdir:
   502  100A  3010               	movlw	high stringdir
   503  100B  008A               	movwf	10
   504  100C  0804               	movf	4,w
   505  100D  0A84               	incf	4,f
   506  100E  0782               	addwf	2,f
   507  100F                     __stringbase:
   508  100F  3400               	retlw	0
   509  1010                     __end_of__stringtab:
   510  1010                     __powers_:
   511  1010  3400               	retlw	0
   512  1011  3480               	retlw	128
   513  1012  343F               	retlw	63
   514  1013  3400               	retlw	0
   515  1014  3420               	retlw	32
   516  1015  3441               	retlw	65
   517  1016  3400               	retlw	0
   518  1017  34C8               	retlw	200
   519  1018  3442               	retlw	66
   520  1019  3400               	retlw	0
   521  101A  347A               	retlw	122
   522  101B  3444               	retlw	68
   523  101C  3440               	retlw	64
   524  101D  341C               	retlw	28
   525  101E  3446               	retlw	70
   526  101F  3450               	retlw	80
   527  1020  34C3               	retlw	195
   528  1021  3447               	retlw	71
   529  1022  3424               	retlw	36
   530  1023  3474               	retlw	116
   531  1024  3449               	retlw	73
   532  1025  3497               	retlw	151
   533  1026  3418               	retlw	24
   534  1027  344B               	retlw	75
   535  1028  34BC               	retlw	188
   536  1029  34BE               	retlw	190
   537  102A  344C               	retlw	76
   538  102B  346B               	retlw	107
   539  102C  346E               	retlw	110
   540  102D  344E               	retlw	78
   541  102E  3403               	retlw	3
   542  102F  3415               	retlw	21
   543  1030  3450               	retlw	80
   544  1031  3479               	retlw	121
   545  1032  34AD               	retlw	173
   546  1033  3460               	retlw	96
   547  1034  34F3               	retlw	243
   548  1035  3449               	retlw	73
   549  1036  3471               	retlw	113
   550  1037                     __end_of__powers_:
   551  1037                     __npowers_:
   552  1037  3400               	retlw	0
   553  1038  3480               	retlw	128
   554  1039  343F               	retlw	63
   555  103A  34CD               	retlw	205
   556  103B  34CC               	retlw	204
   557  103C  343D               	retlw	61
   558  103D  34D7               	retlw	215
   559  103E  3423               	retlw	35
   560  103F  343C               	retlw	60
   561  1040  3412               	retlw	18
   562  1041  3483               	retlw	131
   563  1042  343A               	retlw	58
   564  1043  34B7               	retlw	183
   565  1044  34D1               	retlw	209
   566  1045  3438               	retlw	56
   567  1046  34C6               	retlw	198
   568  1047  3427               	retlw	39
   569  1048  3437               	retlw	55
   570  1049  3438               	retlw	56
   571  104A  3486               	retlw	134
   572  104B  3435               	retlw	53
   573  104C  34C0               	retlw	192
   574  104D  34D6               	retlw	214
   575  104E  3433               	retlw	51
   576  104F  34CC               	retlw	204
   577  1050  342B               	retlw	43
   578  1051  3432               	retlw	50
   579  1052  3470               	retlw	112
   580  1053  3489               	retlw	137
   581  1054  3430               	retlw	48
   582  1055  34E7               	retlw	231
   583  1056  34DB               	retlw	219
   584  1057  342E               	retlw	46
   585  1058  34E5               	retlw	229
   586  1059  343C               	retlw	60
   587  105A  341E               	retlw	30
   588  105B  3442               	retlw	66
   589  105C  34A2               	retlw	162
   590  105D  340D               	retlw	13
   591  105E                     __end_of__npowers_:
   592  105E                     _dpowers:
   593  105E  3401               	retlw	1
   594  105F  3400               	retlw	0
   595  1060  3400               	retlw	0
   596  1061  3400               	retlw	0
   597  1062  340A               	retlw	10
   598  1063  3400               	retlw	0
   599  1064  3400               	retlw	0
   600  1065  3400               	retlw	0
   601  1066  3464               	retlw	100
   602  1067  3400               	retlw	0
   603  1068  3400               	retlw	0
   604  1069  3400               	retlw	0
   605  106A  34E8               	retlw	232
   606  106B  3403               	retlw	3
   607  106C  3400               	retlw	0
   608  106D  3400               	retlw	0
   609  106E  3410               	retlw	16
   610  106F  3427               	retlw	39
   611  1070  3400               	retlw	0
   612  1071  3400               	retlw	0
   613  1072  34A0               	retlw	160
   614  1073  3486               	retlw	134
   615  1074  3401               	retlw	1
   616  1075  3400               	retlw	0
   617  1076  3440               	retlw	64
   618  1077  3442               	retlw	66
   619  1078  340F               	retlw	15
   620  1079  3400               	retlw	0
   621  107A  3480               	retlw	128
   622  107B  3496               	retlw	150
   623  107C  3498               	retlw	152
   624  107D  3400               	retlw	0
   625  107E  3400               	retlw	0
   626  107F  34E1               	retlw	225
   627  1080  34F5               	retlw	245
   628  1081  3405               	retlw	5
   629  1082  3400               	retlw	0
   630  1083  34CA               	retlw	202
   631  1084  349A               	retlw	154
   632  1085  343B               	retlw	59
   633  1086                     __end_of_dpowers:
   634  0018                     _RCSTAbits	set	24
   635  001E                     _ADRESH	set	30
   636  001F                     _ADCON0bits	set	31
   637  0019                     _TXREG	set	25
   638  000C                     _PIR1bits	set	12
   639  000B                     _INTCONbits	set	11
   640  0007                     _PORTC	set	7
   641  0009                     _PORTE	set	9
   642  0008                     _PORTD	set	8
   643  001A                     _RCREG	set	26
   644  0049                     _RE1	set	73
   645  0048                     _RE0	set	72
   646  0047                     _RD7	set	71
   647  0046                     _RD6	set	70
   648  0045                     _RD5	set	69
   649  0044                     _RD4	set	68
   650  0043                     _RD3	set	67
   651  0042                     _RD2	set	66
   652  0041                     _RD1	set	65
   653  0040                     _RD0	set	64
   654  0065                     _RCIF	set	101
   655  0099                     _SPBRG	set	153
   656  0086                     _TRISBbits	set	134
   657  0089                     _TRISEbits	set	137
   658  0085                     _TRISAbits	set	133
   659  009F                     _ADCON1	set	159
   660  0098                     _TXSTAbits	set	152
   661  008C                     _PIE1bits	set	140
   662  0089                     _TRISE	set	137
   663  0088                     _TRISD	set	136
   664  0085                     _TRISA	set	133
   665  04C1                     _TRMT	set	1217
   666  0189                     _ANSELHbits	set	393
   667  0188                     _ANSELbits	set	392
   668  0189                     _ANSELH	set	393
   669  0188                     _ANSEL	set	392
   670  1086                     STR_2:
   671  1086  3425               	retlw	37	;'%'
   672  1087  3432               	retlw	50	;'2'
   673  1088  342E               	retlw	46	;'.'
   674  1089  3431               	retlw	49	;'1'
   675  108A  3466               	retlw	102	;'f'
   676  108B  3420               	retlw	32	;' '
   677  108C  3420               	retlw	32	;' '
   678  108D  3425               	retlw	37	;'%'
   679  108E  3432               	retlw	50	;'2'
   680  108F  342E               	retlw	46	;'.'
   681  1090  3431               	retlw	49	;'1'
   682  1091  3466               	retlw	102	;'f'
   683  1092  3420               	retlw	32	;' '
   684  1093  3420               	retlw	32	;' '
   685  1094  3425               	retlw	37	;'%'
   686  1095  3464               	retlw	100	;'d'
   687  1096  3400               	retlw	0
   688  1097                     STR_1:
   689  1097  3456               	retlw	86	;'V'
   690  1098  3431               	retlw	49	;'1'
   691  1099  3420               	retlw	32	;' '
   692  109A  3420               	retlw	32	;' '
   693  109B  3420               	retlw	32	;' '
   694  109C  3456               	retlw	86	;'V'
   695  109D  3432               	retlw	50	;'2'
   696  109E  3420               	retlw	32	;' '
   697  109F  3420               	retlw	32	;' '
   698  10A0  3420               	retlw	32	;' '
   699  10A1  3443               	retlw	67	;'C'
   700  10A2  344F               	retlw	79	;'O'
   701  10A3  344E               	retlw	78	;'N'
   702  10A4  3454               	retlw	84	;'T'
   703  10A5  3400               	retlw	0
   704                           
   705                           	psect	cinit
   706  000F                     start_initialization:	
   707                           ; #config settings
   708                           
   709  000F                     __initialization:
   710                           
   711                           ; Clear objects allocated to COMMON
   712  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   713  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   714  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   715                           
   716                           ; Clear objects allocated to BANK0
   717  0012  1283               	bcf	3,5	;RP0=0, select bank0
   718  0013  1303               	bcf	3,6	;RP1=0, select bank0
   719  0014  01EE               	clrf	__pbssBANK0& (0+127)
   720  0015  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   721                           
   722                           ; Clear objects allocated to BANK1
   723  0016  1383               	bcf	3,7	;select IRP bank0
   724  0017  30BF               	movlw	low __pbssBANK1
   725  0018  0084               	movwf	4
   726  0019  30D9               	movlw	low (__pbssBANK1+26)
   727  001A  160A  158A  2571  120A  118A  	fcall	clear_ram0
   728  001F                     end_of_initialization:	
   729                           ;End of C runtime variable initialization code
   730                           
   731  001F                     __end_of__initialization:
   732  001F  0183               	clrf	3
   733  0020  120A  118A  2E68   	ljmp	_main	;jump to C main() function
   734                           
   735                           	psect	bssCOMMON
   736  0078                     __pbssCOMMON:
   737  0078                     _entregado:
   738  0078                     	ds	1
   739  0079                     _readUSART:
   740  0079                     	ds	1
   741  007A                     _contador:
   742  007A                     	ds	1
   743                           
   744                           	psect	bssBANK0
   745  006E                     __pbssBANK0:
   746  006E                     _ADC1:
   747  006E                     	ds	1
   748  006F                     _ADC0:
   749  006F                     	ds	1
   750                           
   751                           	psect	bssBANK1
   752  00BF                     __pbssBANK1:
   753  00BF                     _V2:
   754  00BF                     	ds	3
   755  00C2                     _V1:
   756  00C2                     	ds	3
   757  00C5                     _BUFFER:
   758  00C5                     	ds	20
   759                           
   760                           	psect	clrtext
   761  1D71                     clear_ram0:	
   762                           ;	Called with FSR containing the base address, and
   763                           ;	W with the last address+1
   764                           
   765  1D71  0064               	clrwdt	;clear the watchdog before getting into this loop
   766  1D72                     clrloop0:
   767  1D72  0180               	clrf	0	;clear RAM location pointed to by FSR
   768  1D73  0A84               	incf	4,f	;increment pointer
   769  1D74  0604               	xorwf	4,w	;XOR with final address
   770  1D75  1903               	btfsc	3,2	;have we reached the end yet?
   771  1D76  3400               	retlw	0	;all done for this memory range, return
   772  1D77  0604               	xorwf	4,w	;XOR again to restore value
   773  1D78  2D72               	goto	clrloop0	;do the next byte
   774                           
   775                           	psect	cstackBANK1
   776  00A0                     __pcstackBANK1:
   777  00A0                     ??_sprintf:
   778                           
   779                           ; 1 bytes @ 0x0
   780  00A0                     	ds	6
   781  00A6                     _sprintf$1185:
   782                           
   783                           ; 3 bytes @ 0x6
   784  00A6                     	ds	3
   785  00A9                     sprintf@ap:
   786                           
   787                           ; 1 bytes @ 0x9
   788  00A9                     	ds	1
   789  00AA                     sprintf@flag:
   790                           
   791                           ; 2 bytes @ 0xA
   792  00AA                     	ds	2
   793  00AC                     sprintf@width:
   794                           
   795                           ; 2 bytes @ 0xC
   796  00AC                     	ds	2
   797  00AE                     sprintf@tmpval:
   798                           
   799                           ; 4 bytes @ 0xE
   800  00AE                     	ds	4
   801  00B2                     sprintf@val:
   802                           
   803                           ; 4 bytes @ 0x12
   804  00B2                     	ds	4
   805  00B6                     sprintf@eexp:
   806                           
   807                           ; 2 bytes @ 0x16
   808  00B6                     	ds	2
   809  00B8                     sprintf@fval:
   810                           
   811                           ; 3 bytes @ 0x18
   812  00B8                     	ds	3
   813  00BB                     sprintf@sp:
   814                           
   815                           ; 1 bytes @ 0x1B
   816  00BB                     	ds	1
   817  00BC                     sprintf@prec:
   818                           
   819                           ; 2 bytes @ 0x1C
   820  00BC                     	ds	2
   821  00BE                     sprintf@c:
   822                           
   823                           ; 1 bytes @ 0x1E
   824  00BE                     	ds	1
   825                           
   826                           	psect	cstackCOMMON
   827  0070                     __pcstackCOMMON:
   828  0070                     ?_isdigit:
   829  0070                     ?_Read_USART:	
   830                           ; 1 bit 
   831                           
   832  0070                     ??_Read_USART:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_setup:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?__baudios:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_config_tx:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_config_rc:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_configLCD:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_clear_LCD:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_configADC:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_Write_USART_String:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_Write_USART:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_ISR:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ??_ISR:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_main:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_pin:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_CMDs:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_write_char:	
   878                           ; 1 bytes @ 0x0
   879                           
   880                           
   881                           ; 1 bytes @ 0x0
   882  0070                     	ds	3
   883  0073                     ??_setup:
   884  0073                     ??__baudios:	
   885                           ; 1 bytes @ 0x3
   886                           
   887  0073                     ??_config_tx:	
   888                           ; 1 bytes @ 0x3
   889                           
   890  0073                     ??_config_rc:	
   891                           ; 1 bytes @ 0x3
   892                           
   893  0073                     ??_configADC:	
   894                           ; 1 bytes @ 0x3
   895                           
   896  0073                     ??_Write_USART:	
   897                           ; 1 bytes @ 0x3
   898                           
   899  0073                     ??_isdigit:	
   900                           ; 1 bytes @ 0x3
   901                           
   902  0073                     ??__tdiv_to_l_:	
   903                           ; 1 bytes @ 0x3
   904                           
   905  0073                     ??_pin:	
   906                           ; 1 bytes @ 0x3
   907                           
   908  0073                     ??___lldiv:	
   909                           ; 1 bytes @ 0x3
   910                           
   911  0073                     ??___ftge:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0073                     ?___wmul:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     ?___awmod:	
   918                           ; 2 bytes @ 0x3
   919                           
   920  0073                     ?___lwmod:	
   921                           ; 2 bytes @ 0x3
   922                           
   923  0073                     ?___ftpack:	
   924                           ; 2 bytes @ 0x3
   925                           
   926  0073                     ?___ftneg:	
   927                           ; 3 bytes @ 0x3
   928                           
   929  0073                     pin@a:	
   930                           ; 3 bytes @ 0x3
   931                           
   932  0073                     Write_USART@a:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0073                     _isdigit$986:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0073                     ___wmul@multiplier:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0073                     ___awmod@divisor:	
   942                           ; 2 bytes @ 0x3
   943                           
   944  0073                     ___lwmod@divisor:	
   945                           ; 2 bytes @ 0x3
   946                           
   947  0073                     ___ftpack@arg:	
   948                           ; 2 bytes @ 0x3
   949                           
   950  0073                     ___ftneg@f1:	
   951                           ; 3 bytes @ 0x3
   952                           
   953                           
   954                           ; 3 bytes @ 0x3
   955  0073                     	ds	1
   956  0074                     ??_Write_USART_String:
   957  0074                     ??_CMDs:	
   958                           ; 1 bytes @ 0x4
   959                           
   960  0074                     ??_write_char:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0074                     ??___llmod:	
   964                           ; 1 bytes @ 0x4
   965                           
   966  0074                     isdigit@c:	
   967                           ; 1 bytes @ 0x4
   968                           
   969                           
   970                           ; 1 bytes @ 0x4
   971  0074                     	ds	1
   972  0075                     write_char@a:
   973  0075                     configADC@ch:	
   974                           ; 1 bytes @ 0x5
   975                           
   976  0075                     Write_USART_String@a:	
   977                           ; 1 bytes @ 0x5
   978                           
   979  0075                     ___llmod@counter:	
   980                           ; 1 bytes @ 0x5
   981                           
   982  0075                     ___wmul@multiplicand:	
   983                           ; 1 bytes @ 0x5
   984                           
   985  0075                     ___awmod@dividend:	
   986                           ; 2 bytes @ 0x5
   987                           
   988  0075                     ___lwmod@dividend:	
   989                           ; 2 bytes @ 0x5
   990                           
   991                           
   992                           ; 2 bytes @ 0x5
   993  0075                     	ds	1
   994  0076                     ?_write_string:
   995  0076                     ??___ftneg:	
   996                           ; 1 bytes @ 0x6
   997                           
   998  0076                     CMDs@a:	
   999                           ; 1 bytes @ 0x6
  1000                           
  1001  0076                     Write_USART_String@i:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004  0076                     ___ftpack@exp:	
  1005                           ; 1 bytes @ 0x6
  1006                           
  1007  0076                     write_string@a:	
  1008                           ; 1 bytes @ 0x6
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x6
  1012  0076                     	ds	1
  1013  0077                     ??_clear_LCD:
  1014  0077                     ?_cursor:	
  1015                           ; 1 bytes @ 0x7
  1016                           
  1017  0077                     ??___wmul:	
  1018                           ; 1 bytes @ 0x7
  1019                           
  1020  0077                     ??___awmod:	
  1021                           ; 1 bytes @ 0x7
  1022                           
  1023  0077                     ??___lwmod:	
  1024                           ; 1 bytes @ 0x7
  1025                           
  1026  0077                     cursor@b:	
  1027                           ; 1 bytes @ 0x7
  1028                           
  1029  0077                     ___ftpack@sign:	
  1030                           ; 1 bytes @ 0x7
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x7
  1034  0077                     	ds	1
  1035  0078                     ??___ftsub:
  1036                           
  1037                           	psect	cstackBANK0
  1038  0020                     __pcstackBANK0:	
  1039                           ; 1 bytes @ 0x8
  1040                           
  1041  0020                     ?___ftge:
  1042  0020                     ??_configLCD:	
  1043                           ; 1 bit 
  1044                           
  1045  0020                     ??_cursor:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     ??_write_string:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0020                     ??___ftpack:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0020                     ?__tdiv_to_l_:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057  0020                     ?__div_to_l_:	
  1058                           ; 4 bytes @ 0x0
  1059                           
  1060  0020                     ?___lldiv:	
  1061                           ; 4 bytes @ 0x0
  1062                           
  1063  0020                     ___awmod@counter:	
  1064                           ; 4 bytes @ 0x0
  1065                           
  1066  0020                     ___lwmod@counter:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0020                     ___wmul@product:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0020                     __div_to_l_@f1:	
  1073                           ; 2 bytes @ 0x0
  1074                           
  1075  0020                     __tdiv_to_l_@f1:	
  1076                           ; 3 bytes @ 0x0
  1077                           
  1078  0020                     ___ftge@ff1:	
  1079                           ; 3 bytes @ 0x0
  1080                           
  1081  0020                     ___lldiv@divisor:	
  1082                           ; 3 bytes @ 0x0
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0x0
  1086  0020                     	ds	1
  1087  0021                     ?___lwdiv:
  1088  0021                     cursor@a:	
  1089                           ; 2 bytes @ 0x1
  1090                           
  1091  0021                     ___awmod@sign:	
  1092                           ; 1 bytes @ 0x1
  1093                           
  1094  0021                     ___lwdiv@divisor:	
  1095                           ; 1 bytes @ 0x1
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x1
  1099  0021                     	ds	1
  1100  0022                     ?___awdiv:
  1101  0022                     cursor@x:	
  1102                           ; 2 bytes @ 0x2
  1103                           
  1104  0022                     ___awdiv@divisor:	
  1105                           ; 1 bytes @ 0x2
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x2
  1109  0022                     	ds	1
  1110  0023                     ?___awtoft:
  1111  0023                     ?___lltoft:	
  1112                           ; 3 bytes @ 0x3
  1113                           
  1114  0023                     write_string@i:	
  1115                           ; 3 bytes @ 0x3
  1116                           
  1117  0023                     ___awtoft@c:	
  1118                           ; 2 bytes @ 0x3
  1119                           
  1120  0023                     ___lwdiv@dividend:	
  1121                           ; 2 bytes @ 0x3
  1122                           
  1123  0023                     __div_to_l_@f2:	
  1124                           ; 2 bytes @ 0x3
  1125                           
  1126  0023                     __tdiv_to_l_@f2:	
  1127                           ; 3 bytes @ 0x3
  1128                           
  1129  0023                     ___ftge@ff2:	
  1130                           ; 3 bytes @ 0x3
  1131                           
  1132  0023                     ___lltoft@c:	
  1133                           ; 3 bytes @ 0x3
  1134                           
  1135                           
  1136                           ; 4 bytes @ 0x3
  1137  0023                     	ds	1
  1138  0024                     ___awdiv@dividend:
  1139  0024                     ___lldiv@dividend:	
  1140                           ; 2 bytes @ 0x4
  1141                           
  1142                           
  1143                           ; 4 bytes @ 0x4
  1144  0024                     	ds	1
  1145  0025                     ??___lwdiv:
  1146                           
  1147                           ; 1 bytes @ 0x5
  1148  0025                     	ds	1
  1149  0026                     ??__div_to_l_:
  1150  0026                     ??___awdiv:	
  1151                           ; 1 bytes @ 0x6
  1152                           
  1153  0026                     ??___awtoft:	
  1154                           ; 1 bytes @ 0x6
  1155                           
  1156  0026                     ___lwdiv@counter:	
  1157                           ; 1 bytes @ 0x6
  1158                           
  1159  0026                     __tdiv_to_l_@quot:	
  1160                           ; 1 bytes @ 0x6
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x6
  1164  0026                     	ds	1
  1165  0027                     ??___lltoft:
  1166  0027                     ___awdiv@counter:	
  1167                           ; 1 bytes @ 0x7
  1168                           
  1169  0027                     ___lwdiv@quotient:	
  1170                           ; 1 bytes @ 0x7
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x7
  1174  0027                     	ds	1
  1175  0028                     ___awdiv@sign:
  1176  0028                     ___awtoft@sign:	
  1177                           ; 1 bytes @ 0x8
  1178                           
  1179  0028                     ___lltoft@exp:	
  1180                           ; 1 bytes @ 0x8
  1181                           
  1182  0028                     ___lldiv@quotient:	
  1183                           ; 1 bytes @ 0x8
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x8
  1187  0028                     	ds	1
  1188  0029                     ___awdiv@quotient:
  1189                           
  1190                           ; 2 bytes @ 0x9
  1191  0029                     	ds	1
  1192  002A                     __tdiv_to_l_@cntr:
  1193                           
  1194                           ; 1 bytes @ 0xA
  1195  002A                     	ds	1
  1196  002B                     ?___bmul:
  1197  002B                     ___bmul@multiplicand:	
  1198                           ; 1 bytes @ 0xB
  1199                           
  1200  002B                     __tdiv_to_l_@exp1:	
  1201                           ; 1 bytes @ 0xB
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0xB
  1205  002B                     	ds	1
  1206  002C                     ??___bmul:
  1207  002C                     ___lldiv@counter:	
  1208                           ; 1 bytes @ 0xC
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0xC
  1212  002C                     	ds	1
  1213  002D                     ?___llmod:
  1214  002D                     ___bmul@product:	
  1215                           ; 4 bytes @ 0xD
  1216                           
  1217  002D                     ___llmod@divisor:	
  1218                           ; 1 bytes @ 0xD
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0xD
  1222  002D                     	ds	1
  1223  002E                     ___bmul@multiplier:
  1224  002E                     __div_to_l_@quot:	
  1225                           ; 1 bytes @ 0xE
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0xE
  1229  002E                     	ds	1
  1230  002F                     ?___ftmul:
  1231  002F                     ___ftmul@f1:	
  1232                           ; 3 bytes @ 0xF
  1233                           
  1234                           
  1235                           ; 3 bytes @ 0xF
  1236  002F                     	ds	2
  1237  0031                     ___llmod@dividend:
  1238                           
  1239                           ; 4 bytes @ 0x11
  1240  0031                     	ds	1
  1241  0032                     __div_to_l_@cntr:
  1242  0032                     ___ftmul@f2:	
  1243                           ; 1 bytes @ 0x12
  1244                           
  1245                           
  1246                           ; 3 bytes @ 0x12
  1247  0032                     	ds	1
  1248  0033                     __div_to_l_@exp1:
  1249                           
  1250                           ; 1 bytes @ 0x13
  1251  0033                     	ds	2
  1252  0035                     ??___ftmul:
  1253                           
  1254                           ; 1 bytes @ 0x15
  1255  0035                     	ds	4
  1256  0039                     ___ftmul@exp:
  1257                           
  1258                           ; 1 bytes @ 0x19
  1259  0039                     	ds	1
  1260  003A                     ___ftmul@f3_as_product:
  1261                           
  1262                           ; 3 bytes @ 0x1A
  1263  003A                     	ds	3
  1264  003D                     ___ftmul@cntr:
  1265                           
  1266                           ; 1 bytes @ 0x1D
  1267  003D                     	ds	1
  1268  003E                     ___ftmul@sign:
  1269                           
  1270                           ; 1 bytes @ 0x1E
  1271  003E                     	ds	1
  1272  003F                     ?_fround:
  1273  003F                     ?_scale:	
  1274                           ; 3 bytes @ 0x1F
  1275                           
  1276                           
  1277                           ; 3 bytes @ 0x1F
  1278  003F                     	ds	3
  1279  0042                     ??_fround:
  1280  0042                     ??_scale:	
  1281                           ; 1 bytes @ 0x22
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x22
  1285  0042                     	ds	2
  1286  0044                     _scale$1184:
  1287                           
  1288                           ; 3 bytes @ 0x24
  1289  0044                     	ds	3
  1290  0047                     scale@scl:
  1291                           
  1292                           ; 1 bytes @ 0x27
  1293  0047                     	ds	1
  1294  0048                     ?___fttol:
  1295  0048                     ___fttol@f1:	
  1296                           ; 4 bytes @ 0x28
  1297                           
  1298  0048                     _fround$1183:	
  1299                           ; 3 bytes @ 0x28
  1300                           
  1301                           
  1302                           ; 3 bytes @ 0x28
  1303  0048                     	ds	3
  1304  004B                     _fround$1182:
  1305                           
  1306                           ; 3 bytes @ 0x2B
  1307  004B                     	ds	1
  1308  004C                     ??___fttol:
  1309                           
  1310                           ; 1 bytes @ 0x2C
  1311  004C                     	ds	2
  1312  004E                     fround@prec:
  1313                           
  1314                           ; 1 bytes @ 0x2E
  1315  004E                     	ds	1
  1316  004F                     ?___ftadd:
  1317  004F                     ___ftadd@f1:	
  1318                           ; 3 bytes @ 0x2F
  1319                           
  1320                           
  1321                           ; 3 bytes @ 0x2F
  1322  004F                     	ds	1
  1323  0050                     ___fttol@sign1:
  1324                           
  1325                           ; 1 bytes @ 0x30
  1326  0050                     	ds	1
  1327  0051                     ___fttol@lval:
  1328                           
  1329                           ; 4 bytes @ 0x31
  1330  0051                     	ds	1
  1331  0052                     ___ftadd@f2:
  1332                           
  1333                           ; 3 bytes @ 0x32
  1334  0052                     	ds	3
  1335  0055                     ??___ftadd:
  1336  0055                     ___fttol@exp1:	
  1337                           ; 1 bytes @ 0x35
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x35
  1341  0055                     	ds	4
  1342  0059                     ___ftadd@sign:
  1343                           
  1344                           ; 1 bytes @ 0x39
  1345  0059                     	ds	1
  1346  005A                     ___ftadd@exp2:
  1347                           
  1348                           ; 1 bytes @ 0x3A
  1349  005A                     	ds	1
  1350  005B                     ___ftadd@exp1:
  1351                           
  1352                           ; 1 bytes @ 0x3B
  1353  005B                     	ds	1
  1354  005C                     ?___ftsub:
  1355  005C                     ___ftsub@f2:	
  1356                           ; 3 bytes @ 0x3C
  1357                           
  1358                           
  1359                           ; 3 bytes @ 0x3C
  1360  005C                     	ds	3
  1361  005F                     ___ftsub@f1:
  1362                           
  1363                           ; 3 bytes @ 0x3F
  1364  005F                     	ds	3
  1365  0062                     ?_sprintf:
  1366  0062                     sprintf@f:	
  1367                           ; 2 bytes @ 0x42
  1368                           
  1369                           
  1370                           ; 1 bytes @ 0x42
  1371  0062                     	ds	9
  1372  006B                     ??_main:
  1373                           
  1374                           ; 1 bytes @ 0x4B
  1375  006B                     	ds	3
  1376                           
  1377                           	psect	maintext
  1378  0668                     __pmaintext:	
  1379 ;;
  1380 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1381 ;;
  1382 ;; *************** function _main *****************
  1383 ;; Defined at:
  1384 ;;		line 76 in file "main.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : B00/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       3       0       0       0
  1401 ;;      Totals:         0       3       0       0       0
  1402 ;;Total ram usage:        3 bytes
  1403 ;; Hardware stack levels required when called:    6
  1404 ;; This function calls:
  1405 ;;		_Write_USART
  1406 ;;		_Write_USART_String
  1407 ;;		___awtoft
  1408 ;;		___ftmul
  1409 ;;		__baudios
  1410 ;;		_clear_LCD
  1411 ;;		_configADC
  1412 ;;		_configLCD
  1413 ;;		_config_rc
  1414 ;;		_config_tx
  1415 ;;		_cursor
  1416 ;;		_setup
  1417 ;;		_sprintf
  1418 ;;		_write_string
  1419 ;; This function is called by:
  1420 ;;		Startup code after reset
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _main
  1426  0668                     _main:
  1427  0668                     l4369:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1430                           
  1431                           
  1432                           ;main.c: 77:     setup();
  1433  0668  160A  158A  25B8  120A  118A  	fcall	_setup
  1434  066D                     l4371:
  1435                           
  1436                           ;main.c: 78:     _baudios();
  1437  066D  120A  158A  2002  120A  118A  	fcall	__baudios
  1438  0672                     l4373:
  1439                           
  1440                           ;main.c: 79:     config_tx();
  1441  0672  160A  158A  2579  120A  118A  	fcall	_config_tx
  1442  0677                     l4375:
  1443                           
  1444                           ;main.c: 80:     config_rc();
  1445  0677  160A  158A  2569  120A  118A  	fcall	_config_rc
  1446  067C                     l4377:
  1447                           
  1448                           ;main.c: 81:     configLCD();
  1449  067C  160A  118A  2249  120A  118A  	fcall	_configLCD
  1450  0681                     l4379:
  1451                           
  1452                           ;main.c: 82:     clear_LCD();
  1453  0681  160A  158A  2599  120A  118A  	fcall	_clear_LCD
  1454  0686                     l4381:
  1455                           
  1456                           ;main.c: 84:         clear_LCD();
  1457  0686  160A  158A  2599  120A  118A  	fcall	_clear_LCD
  1458  068B                     l4383:
  1459                           
  1460                           ;main.c: 85:         cursor(1,1);
  1461  068B  01F7               	clrf	cursor@b
  1462  068C  0AF7               	incf	cursor@b,f
  1463  068D  3001               	movlw	1
  1464  068E  160A  158A  2663  120A  118A  	fcall	_cursor
  1465  0693                     l4385:
  1466                           
  1467                           ;main.c: 86:         write_string("V1   V2   CONT");
  1468  0693  3088               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1469  0694  00F6               	movwf	write_string@a
  1470  0695  3080               	movlw	128
  1471  0696  00F7               	movwf	write_string@a+1
  1472  0697  160A  118A  20DC  120A  118A  	fcall	_write_string
  1473  069C                     l4387:
  1474                           
  1475                           ;main.c: 88:         ADC0 = configADC(0);
  1476  069C  3000               	movlw	0
  1477  069D  160A  118A  24B4  120A  118A  	fcall	_configADC
  1478  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1479  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1480  06A4  00EB               	movwf	??_main
  1481  06A5  086B               	movf	??_main,w
  1482  06A6  00EF               	movwf	_ADC0
  1483  06A7                     l4389:
  1484                           
  1485                           ;main.c: 89:         ADC1 = configADC(1);
  1486  06A7  3001               	movlw	1
  1487  06A8  160A  118A  24B4  120A  118A  	fcall	_configADC
  1488  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1489  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1490  06AF  00EB               	movwf	??_main
  1491  06B0  086B               	movf	??_main,w
  1492  06B1  00EE               	movwf	_ADC1
  1493  06B2                     l4391:
  1494                           
  1495                           ;main.c: 94:         V1 = ADC0*0.0196;
  1496  06B2  3090               	movlw	144
  1497  06B3  00AF               	movwf	___ftmul@f1
  1498  06B4  30A0               	movlw	160
  1499  06B5  00B0               	movwf	___ftmul@f1+1
  1500  06B6  303C               	movlw	60
  1501  06B7  00B1               	movwf	___ftmul@f1+2
  1502  06B8  086F               	movf	_ADC0,w
  1503  06B9  00EB               	movwf	??_main
  1504  06BA  01EC               	clrf	??_main+1
  1505  06BB  086B               	movf	??_main,w
  1506  06BC  00A3               	movwf	___awtoft@c
  1507  06BD  086C               	movf	??_main+1,w
  1508  06BE  00A4               	movwf	___awtoft@c+1
  1509  06BF  160A  158A  26B2  120A  118A  	fcall	___awtoft
  1510  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1511  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1512  06C6  0823               	movf	?___awtoft,w
  1513  06C7  00B2               	movwf	___ftmul@f2
  1514  06C8  0824               	movf	?___awtoft+1,w
  1515  06C9  00B3               	movwf	___ftmul@f2+1
  1516  06CA  0825               	movf	?___awtoft+2,w
  1517  06CB  00B4               	movwf	___ftmul@f2+2
  1518  06CC  160A  118A  23CF  120A  118A  	fcall	___ftmul
  1519  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1520  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1521  06D3  082F               	movf	?___ftmul,w
  1522  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  1523  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  1524  06D6  00C2               	movwf	_V1^(0+128)
  1525  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1526  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1527  06D9  0830               	movf	?___ftmul+1,w
  1528  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  1529  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  1530  06DC  00C3               	movwf	(_V1+1)^(0+128)
  1531  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1532  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1533  06DF  0831               	movf	?___ftmul+2,w
  1534  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  1535  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  1536  06E2  00C4               	movwf	(_V1+2)^(0+128)
  1537  06E3                     l4393:
  1538                           
  1539                           ;main.c: 95:         V2 = ADC1*0.0196;
  1540  06E3  3090               	movlw	144
  1541  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1542  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1543  06E6  00AF               	movwf	___ftmul@f1
  1544  06E7  30A0               	movlw	160
  1545  06E8  00B0               	movwf	___ftmul@f1+1
  1546  06E9  303C               	movlw	60
  1547  06EA  00B1               	movwf	___ftmul@f1+2
  1548  06EB  086E               	movf	_ADC1,w
  1549  06EC  00EB               	movwf	??_main
  1550  06ED  01EC               	clrf	??_main+1
  1551  06EE  086B               	movf	??_main,w
  1552  06EF  00A3               	movwf	___awtoft@c
  1553  06F0  086C               	movf	??_main+1,w
  1554  06F1  00A4               	movwf	___awtoft@c+1
  1555  06F2  160A  158A  26B2  120A  118A  	fcall	___awtoft
  1556  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1557  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1558  06F9  0823               	movf	?___awtoft,w
  1559  06FA  00B2               	movwf	___ftmul@f2
  1560  06FB  0824               	movf	?___awtoft+1,w
  1561  06FC  00B3               	movwf	___ftmul@f2+1
  1562  06FD  0825               	movf	?___awtoft+2,w
  1563  06FE  00B4               	movwf	___ftmul@f2+2
  1564  06FF  160A  118A  23CF  120A  118A  	fcall	___ftmul
  1565  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0705  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0706  082F               	movf	?___ftmul,w
  1568  0707  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0708  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0709  00BF               	movwf	_V2^(0+128)
  1571  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1572  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1573  070C  0830               	movf	?___ftmul+1,w
  1574  070D  1683               	bsf	3,5	;RP0=1, select bank1
  1575  070E  1303               	bcf	3,6	;RP1=0, select bank1
  1576  070F  00C0               	movwf	(_V2+1)^(0+128)
  1577  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0712  0831               	movf	?___ftmul+2,w
  1580  0713  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0714  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0715  00C1               	movwf	(_V2+2)^(0+128)
  1583  0716                     l4395:
  1584                           
  1585                           ;main.c: 97:         sprintf(BUFFER, "%2.1f  %2.1f  %d" , V1,V2, contador);
  1586  0716  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1587  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0719  00EB               	movwf	??_main
  1590  071A  086B               	movf	??_main,w
  1591  071B  00E2               	movwf	sprintf@f
  1592  071C  1683               	bsf	3,5	;RP0=1, select bank1
  1593  071D  1303               	bcf	3,6	;RP1=0, select bank1
  1594  071E  0842               	movf	_V1^(0+128),w
  1595  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0721  00E3               	movwf	?_sprintf+1
  1598  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1599  0723  1303               	bcf	3,6	;RP1=0, select bank1
  1600  0724  0843               	movf	(_V1+1)^(0+128),w
  1601  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0727  00E4               	movwf	?_sprintf+2
  1604  0728  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0729  1303               	bcf	3,6	;RP1=0, select bank1
  1606  072A  0844               	movf	(_V1+2)^(0+128),w
  1607  072B  1283               	bcf	3,5	;RP0=0, select bank0
  1608  072C  1303               	bcf	3,6	;RP1=0, select bank0
  1609  072D  00E5               	movwf	?_sprintf+3
  1610  072E  1683               	bsf	3,5	;RP0=1, select bank1
  1611  072F  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0730  083F               	movf	_V2^(0+128),w
  1613  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0733  00E6               	movwf	?_sprintf+4
  1616  0734  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0735  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0736  0840               	movf	(_V2+1)^(0+128),w
  1619  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0739  00E7               	movwf	?_sprintf+5
  1622  073A  1683               	bsf	3,5	;RP0=1, select bank1
  1623  073B  1303               	bcf	3,6	;RP1=0, select bank1
  1624  073C  0841               	movf	(_V2+2)^(0+128),w
  1625  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1626  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1627  073F  00E8               	movwf	?_sprintf+6
  1628  0740  087A               	movf	_contador,w
  1629  0741  00EC               	movwf	??_main+1
  1630  0742  01ED               	clrf	??_main+2
  1631  0743  086C               	movf	??_main+1,w
  1632  0744  00E9               	movwf	?_sprintf+7
  1633  0745  086D               	movf	??_main+2,w
  1634  0746  00EA               	movwf	?_sprintf+8
  1635  0747  30C5               	movlw	(low (_BUFFER| 0))& (0+255)
  1636  0748  120A  158A  2528  120A  118A  	fcall	_sprintf
  1637  074D                     l4397:
  1638                           
  1639                           ;main.c: 100:         cursor(2,1);
  1640  074D  01F7               	clrf	cursor@b
  1641  074E  0AF7               	incf	cursor@b,f
  1642  074F  3002               	movlw	2
  1643  0750  160A  158A  2663  120A  118A  	fcall	_cursor
  1644  0755                     l4399:
  1645                           
  1646                           ;main.c: 101:         write_string(BUFFER);
  1647  0755  30C5               	movlw	(low (_BUFFER| 0))& (0+255)
  1648  0756  00F6               	movwf	write_string@a
  1649  0757  3000               	movlw	0
  1650  0758  00F7               	movwf	write_string@a+1
  1651  0759  160A  118A  20DC  120A  118A  	fcall	_write_string
  1652  075E                     l4401:
  1653                           
  1654                           ;main.c: 107:         Write_USART_String(BUFFER);
  1655  075E  30C5               	movlw	(low (_BUFFER| 0))& (0+255)
  1656  075F  160A  158A  2600  120A  118A  	fcall	_Write_USART_String
  1657  0764                     l4403:
  1658                           
  1659                           ;main.c: 108:         Write_USART(13);
  1660  0764  300D               	movlw	13
  1661  0765  160A  158A  258D  120A  118A  	fcall	_Write_USART
  1662  076A                     l4405:
  1663                           
  1664                           ;main.c: 109:         Write_USART(10);
  1665  076A  300A               	movlw	10
  1666  076B  160A  158A  258D  120A  118A  	fcall	_Write_USART
  1667  0770                     l4407:
  1668                           
  1669                           ;main.c: 111:         if (RCIF == 1){
  1670  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0772  1E8C               	btfss	12,5	;volatile
  1673  0773  2F75               	goto	u6621
  1674  0774  2F76               	goto	u6620
  1675  0775                     u6621:
  1676  0775  2F90               	goto	l4417
  1677  0776                     u6620:
  1678  0776                     l4409:
  1679                           
  1680                           ;main.c: 112:             entregado = RCREG;
  1681  0776  081A               	movf	26,w	;volatile
  1682  0777  00EB               	movwf	??_main
  1683  0778  086B               	movf	??_main,w
  1684  0779  00F8               	movwf	_entregado
  1685  077A                     l4411:
  1686                           
  1687                           ;main.c: 113:             if(entregado == '+'){contador = contador +1;}
  1688  077A  302B               	movlw	43
  1689  077B  0678               	xorwf	_entregado,w
  1690  077C  1D03               	btfss	3,2
  1691  077D  2F7F               	goto	u6631
  1692  077E  2F80               	goto	u6630
  1693  077F                     u6631:
  1694  077F  2F85               	goto	l90
  1695  0780                     u6630:
  1696  0780                     l4413:
  1697  0780  087A               	movf	_contador,w
  1698  0781  3E01               	addlw	1
  1699  0782  00EB               	movwf	??_main
  1700  0783  086B               	movf	??_main,w
  1701  0784  00FA               	movwf	_contador
  1702  0785                     l90:
  1703                           
  1704                           ;main.c: 114:             if(entregado == '-'){contador = contador -1;}
  1705  0785  302D               	movlw	45
  1706  0786  0678               	xorwf	_entregado,w
  1707  0787  1D03               	btfss	3,2
  1708  0788  2F8A               	goto	u6641
  1709  0789  2F8B               	goto	u6640
  1710  078A                     u6641:
  1711  078A  2F90               	goto	l4417
  1712  078B                     u6640:
  1713  078B                     l4415:
  1714  078B  087A               	movf	_contador,w
  1715  078C  3EFF               	addlw	255
  1716  078D  00EB               	movwf	??_main
  1717  078E  086B               	movf	??_main,w
  1718  078F  00FA               	movwf	_contador
  1719  0790                     l4417:
  1720                           
  1721                           ;main.c: 116:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1722  0790  3003               	movlw	3
  1723  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0793  00ED               	movwf	??_main+2
  1726  0794  308A               	movlw	138
  1727  0795  00EC               	movwf	??_main+1
  1728  0796  3055               	movlw	85
  1729  0797  00EB               	movwf	??_main
  1730  0798                     u6657:
  1731  0798  0BEB               	decfsz	??_main,f
  1732  0799  2F98               	goto	u6657
  1733  079A  0BEC               	decfsz	??_main+1,f
  1734  079B  2F98               	goto	u6657
  1735  079C  0BED               	decfsz	??_main+2,f
  1736  079D  2F98               	goto	u6657
  1737  079E  2E86               	goto	l4381
  1738  079F  120A  118A  280C   	ljmp	start
  1739  07A2                     __end_of_main:
  1740                           
  1741                           	psect	text1
  1742  10DC                     __ptext1:	
  1743 ;; *************** function _write_string *****************
  1744 ;; Defined at:
  1745 ;;		line 99 in file "LCD.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  a               2    6[COMMON] PTR unsigned char 
  1748 ;;		 -> BUFFER(20), STR_1(15), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  i               2    3[BANK0 ] int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         2       0       0       0       0
  1761 ;;      Locals:         0       2       0       0       0
  1762 ;;      Temps:          0       3       0       0       0
  1763 ;;      Totals:         2       5       0       0       0
  1764 ;;Total ram usage:        7 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    4
  1767 ;; This function calls:
  1768 ;;		_write_char
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _write_string
  1776  10DC                     _write_string:
  1777  10DC                     l4057:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1780                           
  1781                           
  1782                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
  1783  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  1784  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  1785  10DE  01A3               	clrf	write_string@i
  1786  10DF  01A4               	clrf	write_string@i+1
  1787  10E0  2905               	goto	l4063
  1788  10E1                     l4059:
  1789                           
  1790                           ;LCD.c: 102:  write_char(a[i]);
  1791  10E1  0823               	movf	write_string@i,w
  1792  10E2  0776               	addwf	write_string@a,w
  1793  10E3  00A1               	movwf	??_write_string+1
  1794  10E4  0877               	movf	write_string@a+1,w
  1795  10E5  00A0               	movwf	??_write_string
  1796  10E6  1803               	skipnc
  1797  10E7  0AA0               	incf	??_write_string,f
  1798  10E8  1FA3               	btfss	write_string@i,7
  1799  10E9  28EB               	goto	u6040
  1800  10EA  03A0               	decf	??_write_string,f
  1801  10EB                     u6040:
  1802  10EB  1283               	bcf	3,5	;RP0=0, select bank0
  1803  10EC  1303               	bcf	3,6	;RP1=0, select bank0
  1804  10ED  0820               	movf	??_write_string,w
  1805  10EE  00A2               	movwf	??_write_string+2
  1806  10EF  0822               	movf	??_write_string+2,w
  1807  10F0  00FF               	movwf	btemp+1
  1808  10F1  0821               	movf	??_write_string+1,w
  1809  10F2  0084               	movwf	4
  1810  10F3  160A  118A  2000  160A  118A  	fcall	stringtab
  1811  10F8  160A  158A  25E4  160A  118A  	fcall	_write_char
  1812  10FD                     l4061:
  1813  10FD  3001               	movlw	1
  1814  10FE  1283               	bcf	3,5	;RP0=0, select bank0
  1815  10FF  1303               	bcf	3,6	;RP1=0, select bank0
  1816  1100  07A3               	addwf	write_string@i,f
  1817  1101  1803               	skipnc
  1818  1102  0AA4               	incf	write_string@i+1,f
  1819  1103  3000               	movlw	0
  1820  1104  07A4               	addwf	write_string@i+1,f
  1821  1105                     l4063:
  1822  1105  0823               	movf	write_string@i,w
  1823  1106  0776               	addwf	write_string@a,w
  1824  1107  00A1               	movwf	??_write_string+1
  1825  1108  0877               	movf	write_string@a+1,w
  1826  1109  00A0               	movwf	??_write_string
  1827  110A  1803               	skipnc
  1828  110B  0AA0               	incf	??_write_string,f
  1829  110C  1FA3               	btfss	write_string@i,7
  1830  110D  290F               	goto	u6050
  1831  110E  03A0               	decf	??_write_string,f
  1832  110F                     u6050:
  1833  110F  1283               	bcf	3,5	;RP0=0, select bank0
  1834  1110  1303               	bcf	3,6	;RP1=0, select bank0
  1835  1111  0820               	movf	??_write_string,w
  1836  1112  00A2               	movwf	??_write_string+2
  1837  1113  0822               	movf	??_write_string+2,w
  1838  1114  00FF               	movwf	btemp+1
  1839  1115  0821               	movf	??_write_string+1,w
  1840  1116  0084               	movwf	4
  1841  1117  160A  118A  2000  160A  118A  	fcall	stringtab
  1842  111C  3A00               	xorlw	0
  1843  111D  1D03               	skipz
  1844  111E  2920               	goto	u6061
  1845  111F  2921               	goto	u6060
  1846  1120                     u6061:
  1847  1120  28E1               	goto	l4059
  1848  1121                     u6060:
  1849  1121                     l174:
  1850  1121  0008               	return
  1851  1122                     __end_of_write_string:
  1852                           
  1853                           	psect	text2
  1854  1DE4                     __ptext2:	
  1855 ;; *************** function _write_char *****************
  1856 ;; Defined at:
  1857 ;;		line 89 in file "LCD.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  a               1    wreg     unsigned char 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  a               1    5[COMMON] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       0       0       0       0
  1872 ;;      Locals:         1       0       0       0       0
  1873 ;;      Temps:          1       0       0       0       0
  1874 ;;      Totals:         2       0       0       0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    3
  1878 ;; This function calls:
  1879 ;;		_pin
  1880 ;; This function is called by:
  1881 ;;		_write_string
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function _write_char
  1887  1DE4                     _write_char:
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1891                           ;write_char@a stored from wreg
  1892  1DE4  00F5               	movwf	write_char@a
  1893  1DE5                     l3743:
  1894                           
  1895                           ;LCD.c: 90:     RE0 = 1;
  1896  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  1897  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  1898  1DE7  1409               	bsf	9,0	;volatile
  1899  1DE8                     l3745:
  1900                           
  1901                           ;LCD.c: 91:     pin(a);
  1902  1DE8  0875               	movf	write_char@a,w
  1903  1DE9  160A  158A  277C  160A  158A  	fcall	_pin
  1904  1DEE                     l3747:
  1905                           
  1906                           ;LCD.c: 92:     RE1 = 1;
  1907  1DEE  1283               	bcf	3,5	;RP0=0, select bank0
  1908  1DEF  1303               	bcf	3,6	;RP1=0, select bank0
  1909  1DF0  1489               	bsf	9,1	;volatile
  1910  1DF1                     l3749:
  1911                           
  1912                           ;LCD.c: 93:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1913  1DF1  2DF2               	nop2	;2 cycle nop
  1914  1DF2  2DF3               	nop2	;2 cycle nop
  1915  1DF3  0000               	nop
  1916  1DF4                     l3751:
  1917                           
  1918                           ;LCD.c: 94:     RE1 = 0;
  1919  1DF4  1283               	bcf	3,5	;RP0=0, select bank0
  1920  1DF5  1303               	bcf	3,6	;RP1=0, select bank0
  1921  1DF6  1089               	bcf	9,1	;volatile
  1922  1DF7                     l3753:
  1923                           
  1924                           ;LCD.c: 95:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1925  1DF7  2DF8               	nop2	;2 cycle nop
  1926  1DF8  2DF9               	nop2	;2 cycle nop
  1927  1DF9  0000               	nop
  1928  1DFA                     l3755:
  1929                           
  1930                           ;LCD.c: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1931  1DFA  3010               	movlw	16
  1932  1DFB  00F4               	movwf	??_write_char
  1933  1DFC                     u6667:
  1934  1DFC  0BF4               	decfsz	??_write_char,f
  1935  1DFD  2DFC               	goto	u6667
  1936  1DFE  0000               	nop
  1937  1DFF                     l168:
  1938  1DFF  0008               	return
  1939  1E00                     __end_of_write_char:
  1940                           
  1941                           	psect	text3
  1942  0D28                     __ptext3:	
  1943 ;; *************** function _sprintf *****************
  1944 ;; Defined at:
  1945 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  sp              1    wreg     PTR unsigned char 
  1948 ;;		 -> BUFFER(20), 
  1949 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  1950 ;;		 -> STR_2(17), 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1953 ;;		 -> BUFFER(20), 
  1954 ;;  val             4   18[BANK1 ] unsigned long 
  1955 ;;  tmpval          4   14[BANK1 ] struct .
  1956 ;;  fval            3   24[BANK1 ] struct .
  1957 ;;  prec            2   28[BANK1 ] int 
  1958 ;;  eexp            2   22[BANK1 ] int 
  1959 ;;  width           2   12[BANK1 ] int 
  1960 ;;  flag            2   10[BANK1 ] unsigned short 
  1961 ;;  cp              2    0        PTR const unsigned char 
  1962 ;;  len             2    0        unsigned int 
  1963 ;;  c               1   30[BANK1 ] unsigned char 
  1964 ;;  ap              1    9[BANK1 ] PTR void [1]
  1965 ;;		 -> ?_sprintf(2), 
  1966 ;;  d               1    0        unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2   66[BANK0 ] int 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       9       0       0       0
  1977 ;;      Locals:         0       0      25       0       0
  1978 ;;      Temps:          0       0       6       0       0
  1979 ;;      Totals:         0       9      31       0       0
  1980 ;;Total ram usage:       40 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    5
  1983 ;; This function calls:
  1984 ;;		___awdiv
  1985 ;;		___ftadd
  1986 ;;		___ftge
  1987 ;;		___ftmul
  1988 ;;		___ftneg
  1989 ;;		___ftsub
  1990 ;;		___fttol
  1991 ;;		___lldiv
  1992 ;;		___llmod
  1993 ;;		___lltoft
  1994 ;;		___wmul
  1995 ;;		__div_to_l_
  1996 ;;		__tdiv_to_l_
  1997 ;;		_fround
  1998 ;;		_isdigit
  1999 ;;		_scale
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _sprintf
  2007  0D28                     _sprintf:
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2011                           ;sprintf@sp stored from wreg
  2012  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0D2A  00BB               	movwf	sprintf@sp^(0+128)
  2015  0D2B                     l4065:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2018  0D2B  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2019  0D2C  00A0               	movwf	??_sprintf^(0+128)
  2020  0D2D  0820               	movf	??_sprintf^(0+128),w
  2021  0D2E  00A9               	movwf	sprintf@ap^(0+128)
  2022  0D2F                     L1:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2025  0D2F  120A  118A  2E4B   	goto	l4345
  2026  0D32                     l4067:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2029  0D32  3025               	movlw	37
  2030  0D33  063E               	xorwf	sprintf@c^(0+128),w
  2031  0D34  1903               	btfsc	3,2
  2032  0D35  2D37               	goto	u6071
  2033  0D36  2D38               	goto	u6070
  2034  0D37                     u6071:
  2035  0D37  2D44               	goto	l4073
  2036  0D38                     u6070:
  2037  0D38                     l4069:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2040  0D38  083E               	movf	sprintf@c^(0+128),w
  2041  0D39  00A0               	movwf	??_sprintf^(0+128)
  2042  0D3A  083B               	movf	sprintf@sp^(0+128),w
  2043  0D3B  0084               	movwf	4
  2044  0D3C  0820               	movf	??_sprintf^(0+128),w
  2045  0D3D  1383               	bcf	3,7	;select IRP bank0
  2046  0D3E  0080               	movwf	0
  2047  0D3F                     l4071:
  2048  0D3F  3001               	movlw	1
  2049  0D40  00A0               	movwf	??_sprintf^(0+128)
  2050  0D41  0820               	movf	??_sprintf^(0+128),w
  2051  0D42  07BB               	addwf	sprintf@sp^(0+128),f
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2054  0D43  2D2F               	goto	L1
  2055  0D44                     l4073:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2058  0D44  01AC               	clrf	sprintf@width^(0+128)
  2059  0D45  01AD               	clrf	(sprintf@width+1)^(0+128)
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2062  0D46  01AA               	clrf	sprintf@flag^(0+128)
  2063  0D47  01AB               	clrf	(sprintf@flag+1)^(0+128)
  2064  0D48                     l4075:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2067  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0D4A  0862               	movf	sprintf@f,w
  2070  0D4B  0084               	movwf	4
  2071  0D4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2072  0D51  160A  158A  25A6  120A  158A  	fcall	_isdigit
  2073  0D56  1C03               	btfss	3,0
  2074  0D57  2D59               	goto	u6081
  2075  0D58  2D5A               	goto	u6080
  2076  0D59                     u6081:
  2077  0D59  2DA0               	goto	l4087
  2078  0D5A                     u6080:
  2079  0D5A                     l4077:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2082  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  2084  0D5C  01AC               	clrf	sprintf@width^(0+128)
  2085  0D5D  01AD               	clrf	(sprintf@width+1)^(0+128)
  2086  0D5E                     l4079:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2089  0D5E  300A               	movlw	10
  2090  0D5F  00F3               	movwf	___wmul@multiplier
  2091  0D60  3000               	movlw	0
  2092  0D61  00F4               	movwf	___wmul@multiplier+1
  2093  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0D64  082D               	movf	(sprintf@width+1)^(0+128),w
  2096  0D65  00F6               	movwf	___wmul@multiplicand+1
  2097  0D66  082C               	movf	sprintf@width^(0+128),w
  2098  0D67  00F5               	movwf	___wmul@multiplicand
  2099  0D68  160A  158A  26DB  120A  158A  	fcall	___wmul
  2100  0D6D  0874               	movf	?___wmul+1,w
  2101  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0D70  00AD               	movwf	(sprintf@width+1)^(0+128)
  2104  0D71  0873               	movf	?___wmul,w
  2105  0D72  00AC               	movwf	sprintf@width^(0+128)
  2106  0D73                     l4081:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2109  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0D75  0862               	movf	sprintf@f,w
  2112  0D76  0084               	movwf	4
  2113  0D77  160A  118A  200A  120A  158A  	fcall	stringdir
  2114  0D7C  3ED0               	addlw	208
  2115  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  2117  0D7F  00A0               	movwf	??_sprintf^(0+128)
  2118  0D80  30FF               	movlw	255
  2119  0D81  1803               	skipnc
  2120  0D82  3000               	movlw	0
  2121  0D83  00A1               	movwf	(??_sprintf^(0+128)+1)
  2122  0D84  0820               	movf	??_sprintf^(0+128),w
  2123  0D85  07AC               	addwf	sprintf@width^(0+128),f
  2124  0D86  1803               	skipnc
  2125  0D87  0AAD               	incf	(sprintf@width+1)^(0+128),f
  2126  0D88  0821               	movf	(??_sprintf+1)^(0+128),w
  2127  0D89  07AD               	addwf	(sprintf@width+1)^(0+128),f
  2128  0D8A                     l4083:
  2129  0D8A  3001               	movlw	1
  2130  0D8B  00A0               	movwf	??_sprintf^(0+128)
  2131  0D8C  0820               	movf	??_sprintf^(0+128),w
  2132  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0D8F  07E2               	addwf	sprintf@f,f
  2135  0D90                     l4085:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2138  0D90  0862               	movf	sprintf@f,w
  2139  0D91  0084               	movwf	4
  2140  0D92  160A  118A  200A  120A  158A  	fcall	stringdir
  2141  0D97  160A  158A  25A6  120A  158A  	fcall	_isdigit
  2142  0D9C  1803               	btfsc	3,0
  2143  0D9D  2D9F               	goto	u6091
  2144  0D9E  2DA0               	goto	u6090
  2145  0D9F                     u6091:
  2146  0D9F  2D5E               	goto	l4079
  2147  0DA0                     u6090:
  2148  0DA0                     l4087:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2151  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0DA2  0862               	movf	sprintf@f,w
  2154  0DA3  0084               	movwf	4
  2155  0DA4  160A  118A  200A  120A  158A  	fcall	stringdir
  2156  0DA9  3A2E               	xorlw	46
  2157  0DAA  1D03               	skipz
  2158  0DAB  2DAD               	goto	u6101
  2159  0DAC  2DAE               	goto	u6100
  2160  0DAD                     u6101:
  2161  0DAD  2E00               	goto	l4103
  2162  0DAE                     u6100:
  2163  0DAE                     l4089:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2166  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  2168  0DB0  172B               	bsf	(sprintf@flag^(0+128)+1),6
  2169  0DB1                     l4091:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2172  0DB1  3001               	movlw	1
  2173  0DB2  00A0               	movwf	??_sprintf^(0+128)
  2174  0DB3  0820               	movf	??_sprintf^(0+128),w
  2175  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0DB6  07E2               	addwf	sprintf@f,f
  2178  0DB7                     l4093:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2181  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0DB9  01BC               	clrf	sprintf@prec^(0+128)
  2184  0DBA  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2187  0DBB  2DEE               	goto	l4101
  2188  0DBC                     l4095:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2191  0DBC  300A               	movlw	10
  2192  0DBD  00F3               	movwf	___wmul@multiplier
  2193  0DBE  3000               	movlw	0
  2194  0DBF  00F4               	movwf	___wmul@multiplier+1
  2195  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0DC2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2198  0DC3  00F6               	movwf	___wmul@multiplicand+1
  2199  0DC4  083C               	movf	sprintf@prec^(0+128),w
  2200  0DC5  00F5               	movwf	___wmul@multiplicand
  2201  0DC6  160A  158A  26DB  120A  158A  	fcall	___wmul
  2202  0DCB  0874               	movf	?___wmul+1,w
  2203  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0DCE  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2206  0DCF  0873               	movf	?___wmul,w
  2207  0DD0  00BC               	movwf	sprintf@prec^(0+128)
  2208  0DD1                     l4097:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2211  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0DD3  0862               	movf	sprintf@f,w
  2214  0DD4  0084               	movwf	4
  2215  0DD5  160A  118A  200A  120A  158A  	fcall	stringdir
  2216  0DDA  3ED0               	addlw	208
  2217  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0DDD  00A0               	movwf	??_sprintf^(0+128)
  2220  0DDE  30FF               	movlw	255
  2221  0DDF  1803               	skipnc
  2222  0DE0  3000               	movlw	0
  2223  0DE1  00A1               	movwf	(??_sprintf^(0+128)+1)
  2224  0DE2  0820               	movf	??_sprintf^(0+128),w
  2225  0DE3  07BC               	addwf	sprintf@prec^(0+128),f
  2226  0DE4  1803               	skipnc
  2227  0DE5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2228  0DE6  0821               	movf	(??_sprintf+1)^(0+128),w
  2229  0DE7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2230  0DE8                     l4099:
  2231  0DE8  3001               	movlw	1
  2232  0DE9  00A0               	movwf	??_sprintf^(0+128)
  2233  0DEA  0820               	movf	??_sprintf^(0+128),w
  2234  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0DED  07E2               	addwf	sprintf@f,f
  2237  0DEE                     l4101:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2240  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0DEF  0862               	movf	sprintf@f,w
  2242  0DF0  0084               	movwf	4
  2243  0DF1  160A  118A  200A  120A  158A  	fcall	stringdir
  2244  0DF6  160A  158A  25A6  120A  158A  	fcall	_isdigit
  2245  0DFB  1803               	btfsc	3,0
  2246  0DFC  2DFE               	goto	u6111
  2247  0DFD  2DFF               	goto	u6110
  2248  0DFE                     u6111:
  2249  0DFE  2DBC               	goto	l4095
  2250  0DFF                     u6110:
  2251  0DFF  2E08               	goto	l4109
  2252  0E00                     l4103:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2255  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  2257  0E02  01BC               	clrf	sprintf@prec^(0+128)
  2258  0E03  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2259  0E04                     l4105:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2262  0E04  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2263  0E05  2E08               	goto	l4109
  2264  0E06                     l387:	
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2266                           
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2269  0E06  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2272  0E07  2E2C               	goto	l4111
  2273  0E08                     l4109:
  2274  0E08  3001               	movlw	1
  2275  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0E0B  07E2               	addwf	sprintf@f,f
  2278  0E0C  30FF               	movlw	-1
  2279  0E0D  0762               	addwf	sprintf@f,w
  2280  0E0E  0084               	movwf	4
  2281  0E0F  160A  118A  200A  120A  158A  	fcall	stringdir
  2282  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0E16  00BE               	movwf	sprintf@c^(0+128)
  2285  0E17  00A0               	movwf	??_sprintf^(0+128)
  2286  0E18  01A1               	clrf	(??_sprintf^(0+128)+1)
  2287                           
  2288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2289                           ; Switch size 1, requested type "simple"
  2290                           ; Number of cases is 1, Range of values is 0 to 0
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte            4     3 (average)
  2294                           ; direct_byte           11     8 (fixed)
  2295                           ; jumptable            260     6 (fixed)
  2296                           ;	Chosen strategy is simple_byte
  2297  0E19  0821               	movf	(??_sprintf+1)^(0+128),w
  2298  0E1A  3A00               	xorlw	0	; case 0
  2299  0E1B  1903               	skipnz
  2300  0E1C  2E1E               	goto	l4479
  2301  0E1D  2D2F               	goto	L1
  2302  0E1E                     l4479:
  2303                           
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 4, Range of values is 0 to 105
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte           13     7 (average)
  2309                           ; jumptable            260     6 (fixed)
  2310                           ;	Chosen strategy is simple_byte
  2311  0E1E  0820               	movf	??_sprintf^(0+128),w
  2312  0E1F  3A00               	xorlw	0	; case 0
  2313  0E20  1903               	skipnz
  2314  0E21  2FFD               	goto	L3
  2315  0E22  3A64               	xorlw	100	; case 100
  2316  0E23  1903               	skipnz
  2317  0E24  2E2C               	goto	l4111
  2318  0E25  3A02               	xorlw	2	; case 102
  2319  0E26  1903               	skipnz
  2320  0E27  2E06               	goto	l387
  2321  0E28  3A0F               	xorlw	15	; case 105
  2322  0E29  1903               	skipnz
  2323  0E2A  2E2C               	goto	l4111
  2324  0E2B  2D2F               	goto	L1
  2325  0E2C                     l4111:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2328  0E2C  3000               	movlw	0
  2329  0E2D  052A               	andwf	sprintf@flag^(0+128),w
  2330  0E2E  00A0               	movwf	??_sprintf^(0+128)
  2331  0E2F  3007               	movlw	7
  2332  0E30  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2333  0E31  00A1               	movwf	(??_sprintf+1)^(0+128)
  2334  0E32  0820               	movf	??_sprintf^(0+128),w
  2335  0E33  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2336  0E34  1903               	btfsc	3,2
  2337  0E35  2E37               	goto	u6121
  2338  0E36  2E3A               	goto	u6120
  2339  0E37                     u6121:
  2340  0E37  120A  118A  2C9C   	goto	l4267
  2341  0E3A                     u6120:
  2342  0E3A                     l4113:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2345  0E3A  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2346  0E3B  2E3D               	goto	u6131
  2347  0E3C  2E3E               	goto	u6130
  2348  0E3D                     u6131:
  2349  0E3D  2E42               	goto	l4117
  2350  0E3E                     u6130:
  2351  0E3E                     l4115:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2354  0E3E  3006               	movlw	6
  2355  0E3F  00BC               	movwf	sprintf@prec^(0+128)
  2356  0E40  3000               	movlw	0
  2357  0E41  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2358  0E42                     l4117:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2361  0E42  0829               	movf	sprintf@ap^(0+128),w
  2362  0E43  0084               	movwf	4
  2363  0E44  1383               	bcf	3,7	;select IRP bank0
  2364  0E45  0800               	movf	0,w
  2365  0E46  00B8               	movwf	sprintf@fval^(0+128)
  2366  0E47  0A84               	incf	4,f
  2367  0E48  0800               	movf	0,w
  2368  0E49  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2369  0E4A  0A84               	incf	4,f
  2370  0E4B  0800               	movf	0,w
  2371  0E4C  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2372  0E4D                     l4119:
  2373  0E4D  3003               	movlw	3
  2374  0E4E  00A0               	movwf	??_sprintf^(0+128)
  2375  0E4F  0820               	movf	??_sprintf^(0+128),w
  2376  0E50  07A9               	addwf	sprintf@ap^(0+128),f
  2377  0E51                     l4121:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2380  0E51  0838               	movf	sprintf@fval^(0+128),w
  2381  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0E54  00A0               	movwf	___ftge@ff1
  2384  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0E57  0839               	movf	(sprintf@fval+1)^(0+128),w
  2387  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0E5A  00A1               	movwf	___ftge@ff1+1
  2390  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0E5D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2393  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0E60  00A2               	movwf	___ftge@ff1+2
  2396  0E61  3000               	movlw	0
  2397  0E62  00A3               	movwf	___ftge@ff2
  2398  0E63  3000               	movlw	0
  2399  0E64  00A4               	movwf	___ftge@ff2+1
  2400  0E65  3000               	movlw	0
  2401  0E66  00A5               	movwf	___ftge@ff2+2
  2402  0E67  160A  158A  2706  120A  158A  	fcall	___ftge
  2403  0E6C  1803               	btfsc	3,0
  2404  0E6D  2E6F               	goto	u6141
  2405  0E6E  2E70               	goto	u6140
  2406  0E6F                     u6141:
  2407  0E6F  2E89               	goto	l4127
  2408  0E70                     u6140:
  2409  0E70                     l4123:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2412  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0E72  0838               	movf	sprintf@fval^(0+128),w
  2415  0E73  00F3               	movwf	___ftneg@f1
  2416  0E74  0839               	movf	(sprintf@fval+1)^(0+128),w
  2417  0E75  00F4               	movwf	___ftneg@f1+1
  2418  0E76  083A               	movf	(sprintf@fval+2)^(0+128),w
  2419  0E77  00F5               	movwf	___ftneg@f1+2
  2420  0E78  160A  158A  2583  120A  158A  	fcall	___ftneg
  2421  0E7D  0873               	movf	?___ftneg,w
  2422  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0E80  00B8               	movwf	sprintf@fval^(0+128)
  2425  0E81  0874               	movf	?___ftneg+1,w
  2426  0E82  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2427  0E83  0875               	movf	?___ftneg+2,w
  2428  0E84  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2429  0E85                     l4125:
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2432  0E85  3003               	movlw	3
  2433  0E86  04AA               	iorwf	sprintf@flag^(0+128),f
  2434  0E87  3000               	movlw	0
  2435  0E88  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2436  0E89                     l4127:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2439  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  2441  0E8B  01B6               	clrf	sprintf@eexp^(0+128)
  2442  0E8C  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2443  0E8D                     l4129:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2446  0E8D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2447  0E8E  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  2448  0E8F  0438               	iorwf	sprintf@fval^(0+128),w
  2449  0E90  1903               	skipnz
  2450  0E91  2E93               	goto	u6151
  2451  0E92  2E94               	goto	u6150
  2452  0E93                     u6151:
  2453  0E93  2FA2               	goto	l4155
  2454  0E94                     u6150:
  2455  0E94                     l4131:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2458  0E94  30B8               	movlw	low (sprintf@fval| 0)
  2459  0E95  0084               	movwf	4
  2460  0E96  1383               	bcf	3,7	;select IRP bank1
  2461  0E97  0800               	movf	0,w
  2462  0E98  00A0               	movwf	??_sprintf^(0+128)
  2463  0E99  0A84               	incf	4,f
  2464  0E9A  0800               	movf	0,w
  2465  0E9B  00A1               	movwf	(??_sprintf^(0+128)+1)
  2466  0E9C  0A84               	incf	4,f
  2467  0E9D  0800               	movf	0,w
  2468  0E9E  00A2               	movwf	(??_sprintf^(0+128)+2)
  2469  0E9F  0A84               	incf	4,f
  2470  0EA0  0800               	movf	0,w
  2471  0EA1  00A3               	movwf	(??_sprintf^(0+128)+3)
  2472  0EA2  300F               	movlw	15
  2473  0EA3                     u6165:
  2474  0EA3  1003               	clrc
  2475  0EA4  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2476  0EA5  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2477  0EA6  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2478  0EA7  0CA0               	rrf	??_sprintf^(0+128),f
  2479  0EA8                     u6160:
  2480  0EA8  3EFF               	addlw	-1
  2481  0EA9  1D03               	skipz
  2482  0EAA  2EA3               	goto	u6165
  2483  0EAB  30FF               	movlw	255
  2484  0EAC  0520               	andwf	??_sprintf^(0+128),w
  2485  0EAD  00A4               	movwf	(??_sprintf+4)^(0+128)
  2486  0EAE  3000               	movlw	0
  2487  0EAF  0521               	andwf	(??_sprintf+1)^(0+128),w
  2488  0EB0  00A5               	movwf	(??_sprintf+5)^(0+128)
  2489  0EB1  0824               	movf	(??_sprintf+4)^(0+128),w
  2490  0EB2  3E82               	addlw	130
  2491  0EB3  00B6               	movwf	sprintf@eexp^(0+128)
  2492  0EB4  0825               	movf	(??_sprintf+5)^(0+128),w
  2493  0EB5  1803               	skipnc
  2494  0EB6  3E01               	addlw	1
  2495  0EB7  3EFF               	addlw	255
  2496  0EB8  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2497  0EB9                     l4133:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2500  0EB9  30FF               	movlw	255
  2501  0EBA  07B6               	addwf	sprintf@eexp^(0+128),f
  2502  0EBB  1803               	skipnc
  2503  0EBC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2504  0EBD  30FF               	movlw	255
  2505  0EBE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2506  0EBF                     l4135:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2509  0EBF  3003               	movlw	3
  2510  0EC0  00F3               	movwf	___wmul@multiplier
  2511  0EC1  3000               	movlw	0
  2512  0EC2  00F4               	movwf	___wmul@multiplier+1
  2513  0EC3  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2514  0EC4  00F6               	movwf	___wmul@multiplicand+1
  2515  0EC5  0836               	movf	sprintf@eexp^(0+128),w
  2516  0EC6  00F5               	movwf	___wmul@multiplicand
  2517  0EC7  160A  158A  26DB  120A  158A  	fcall	___wmul
  2518  0ECC  0874               	movf	?___wmul+1,w
  2519  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2521  0ECF  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2522  0ED0  0873               	movf	?___wmul,w
  2523  0ED1  00B6               	movwf	sprintf@eexp^(0+128)
  2524  0ED2                     l4137:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2527  0ED2  300A               	movlw	10
  2528  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0ED5  00A2               	movwf	___awdiv@divisor
  2531  0ED6  3000               	movlw	0
  2532  0ED7  00A3               	movwf	___awdiv@divisor+1
  2533  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0EDA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2536  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0EDD  00A5               	movwf	___awdiv@dividend+1
  2539  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2541  0EE0  0836               	movf	sprintf@eexp^(0+128),w
  2542  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0EE3  00A4               	movwf	___awdiv@dividend
  2545  0EE4  160A  118A  21E0  120A  158A  	fcall	___awdiv
  2546  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0EEB  0823               	movf	?___awdiv+1,w
  2549  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2551  0EEE  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2552  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0EF1  0822               	movf	?___awdiv,w
  2555  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2556  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2557  0EF4  00B6               	movwf	sprintf@eexp^(0+128)
  2558  0EF5                     l4139:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2561  0EF5  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2562  0EF6  2EF8               	goto	u6171
  2563  0EF7  2EF9               	goto	u6170
  2564  0EF8                     u6171:
  2565  0EF8  2EFF               	goto	l4143
  2566  0EF9                     u6170:
  2567  0EF9                     l4141:
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2570  0EF9  30FF               	movlw	255
  2571  0EFA  07B6               	addwf	sprintf@eexp^(0+128),f
  2572  0EFB  1803               	skipnc
  2573  0EFC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2574  0EFD  30FF               	movlw	255
  2575  0EFE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2576  0EFF                     l4143:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2579  0EFF  0336               	decf	sprintf@eexp^(0+128),w
  2580  0F00  3AFF               	xorlw	255
  2581  0F01  120A  158A  226D  120A  158A  	fcall	_scale
  2582  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0F08  083F               	movf	?_scale,w
  2585  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2586  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2587  0F0B  00AE               	movwf	sprintf@tmpval^(0+128)
  2588  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0F0E  0840               	movf	?_scale+1,w
  2591  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2592  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2593  0F11  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2594  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0F14  0841               	movf	?_scale+2,w
  2597  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0F17  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2600  0F18                     l4145:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2603  0F18  0838               	movf	sprintf@fval^(0+128),w
  2604  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0F1B  00AF               	movwf	___ftmul@f1
  2607  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0F1E  0839               	movf	(sprintf@fval+1)^(0+128),w
  2610  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0F21  00B0               	movwf	___ftmul@f1+1
  2613  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2615  0F24  083A               	movf	(sprintf@fval+2)^(0+128),w
  2616  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0F27  00B1               	movwf	___ftmul@f1+2
  2619  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2620  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2621  0F2A  082E               	movf	sprintf@tmpval^(0+128),w
  2622  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0F2D  00B2               	movwf	___ftmul@f2
  2625  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0F30  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2628  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0F33  00B3               	movwf	___ftmul@f2+1
  2631  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0F36  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2634  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0F39  00B4               	movwf	___ftmul@f2+2
  2637  0F3A  160A  118A  23CF  120A  158A  	fcall	___ftmul
  2638  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0F41  082F               	movf	?___ftmul,w
  2641  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0F44  00AE               	movwf	sprintf@tmpval^(0+128)
  2644  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0F47  0830               	movf	?___ftmul+1,w
  2647  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2649  0F4A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2650  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0F4D  0831               	movf	?___ftmul+2,w
  2653  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0F50  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2656  0F51                     l4147:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2659  0F51  082E               	movf	sprintf@tmpval^(0+128),w
  2660  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0F54  00A0               	movwf	___ftge@ff1
  2663  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2664  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2665  0F57  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2666  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0F5A  00A1               	movwf	___ftge@ff1+1
  2669  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2670  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2671  0F5D  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2672  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0F60  00A2               	movwf	___ftge@ff1+2
  2675  0F61  3000               	movlw	0
  2676  0F62  00A3               	movwf	___ftge@ff2
  2677  0F63  3080               	movlw	128
  2678  0F64  00A4               	movwf	___ftge@ff2+1
  2679  0F65  303F               	movlw	63
  2680  0F66  00A5               	movwf	___ftge@ff2+2
  2681  0F67  160A  158A  2706  120A  158A  	fcall	___ftge
  2682  0F6C  1803               	btfsc	3,0
  2683  0F6D  2F6F               	goto	u6181
  2684  0F6E  2F70               	goto	u6180
  2685  0F6F                     u6181:
  2686  0F6F  2F79               	goto	l4151
  2687  0F70                     u6180:
  2688  0F70                     l4149:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2691  0F70  30FF               	movlw	255
  2692  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0F73  07B6               	addwf	sprintf@eexp^(0+128),f
  2695  0F74  1803               	skipnc
  2696  0F75  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2697  0F76  30FF               	movlw	255
  2698  0F77  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2699  0F78  2FA2               	goto	l4155
  2700  0F79                     l4151:
  2701  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2703  0F7B  082E               	movf	sprintf@tmpval^(0+128),w
  2704  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0F7E  00A0               	movwf	___ftge@ff1
  2707  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0F81  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2710  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0F84  00A1               	movwf	___ftge@ff1+1
  2713  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0F87  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2716  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0F8A  00A2               	movwf	___ftge@ff1+2
  2719  0F8B  3000               	movlw	0
  2720  0F8C  00A3               	movwf	___ftge@ff2
  2721  0F8D  3020               	movlw	32
  2722  0F8E  00A4               	movwf	___ftge@ff2+1
  2723  0F8F  3041               	movlw	65
  2724  0F90  00A5               	movwf	___ftge@ff2+2
  2725  0F91  160A  158A  2706  120A  158A  	fcall	___ftge
  2726  0F96  1C03               	btfss	3,0
  2727  0F97  2F99               	goto	u6191
  2728  0F98  2F9A               	goto	u6190
  2729  0F99                     u6191:
  2730  0F99  2FA2               	goto	l4155
  2731  0F9A                     u6190:
  2732  0F9A                     l4153:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2735  0F9A  3001               	movlw	1
  2736  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2737  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2738  0F9D  07B6               	addwf	sprintf@eexp^(0+128),f
  2739  0F9E  1803               	skipnc
  2740  0F9F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2741  0FA0  3000               	movlw	0
  2742  0FA1  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2743  0FA2                     l4155:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2746  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0FA4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2749  0FA5  3A80               	xorlw	128
  2750  0FA6  00FF               	movwf	btemp+1
  2751  0FA7  3080               	movlw	128
  2752  0FA8  027F               	subwf	btemp+1,w
  2753  0FA9  1D03               	skipz
  2754  0FAA  2FAD               	goto	u6205
  2755  0FAB  300D               	movlw	13
  2756  0FAC  023C               	subwf	sprintf@prec^(0+128),w
  2757  0FAD                     u6205:
  2758  0FAD  1803               	skipnc
  2759  0FAE  2FB0               	goto	u6201
  2760  0FAF  2FB1               	goto	u6200
  2761  0FB0                     u6201:
  2762  0FB0  2FEA               	goto	l4159
  2763  0FB1                     u6200:
  2764  0FB1                     l4157:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2767  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2768  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2769  0FB3  083C               	movf	sprintf@prec^(0+128),w
  2770  0FB4  120A  158A  20C4  120A  158A  	fcall	_fround
  2771  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0FBB  083F               	movf	?_fround,w
  2774  0FBC  00CF               	movwf	___ftadd@f1
  2775  0FBD  0840               	movf	?_fround+1,w
  2776  0FBE  00D0               	movwf	___ftadd@f1+1
  2777  0FBF  0841               	movf	?_fround+2,w
  2778  0FC0  00D1               	movwf	___ftadd@f1+2
  2779  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2780  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2781  0FC3  0838               	movf	sprintf@fval^(0+128),w
  2782  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0FC6  00D2               	movwf	___ftadd@f2
  2785  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2787  0FC9  0839               	movf	(sprintf@fval+1)^(0+128),w
  2788  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0FCC  00D3               	movwf	___ftadd@f2+1
  2791  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2792  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2793  0FCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  2794  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0FD2  00D4               	movwf	___ftadd@f2+2
  2797  0FD3  160A  118A  26CA  120A  158A  	fcall	___ftadd
  2798  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0FDA  084F               	movf	?___ftadd,w
  2801  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0FDD  00B8               	movwf	sprintf@fval^(0+128)
  2804  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2806  0FE0  0850               	movf	?___ftadd+1,w
  2807  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2808  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2809  0FE3  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2810  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0FE6  0851               	movf	?___ftadd+2,w
  2813  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0FE9  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2816  0FEA                     l4159:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2819  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2820  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2821  0FEC  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2822  0FED  3A80               	xorlw	128
  2823  0FEE  00FF               	movwf	btemp+1
  2824  0FEF  3080               	movlw	128
  2825  0FF0  027F               	subwf	btemp+1,w
  2826  0FF1  1D03               	skipz
  2827  0FF2  2FF5               	goto	u6215
  2828  0FF3  300A               	movlw	10
  2829  0FF4  0236               	subwf	sprintf@eexp^(0+128),w
  2830  0FF5                     u6215:
  2831  0FF5  1803               	skipnc
  2832  0FF6  2FFA               	goto	u6211
  2833  0FF7  120A  118A  2823   	goto	u6210
  2834  0FFA                     u6211:
  2835  0FFA  120A  118A  285A   	goto	l4167
  2836  0FFD                     L3:
  2837  0FFD                     L2:
  2838  0FFD  120A  118A  2E63   	ljmp	l4347
  2839                           
  2840                           	psect	text4
  2841  0A6D                     __ptext4:	
  2842 ;; *************** function _scale *****************
  2843 ;; Defined at:
  2844 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  scl             1    wreg     char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  scl             1   39[BANK0 ] char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  3   31[BANK0 ] char 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       3       0       0       0
  2859 ;;      Locals:         0       4       0       0       0
  2860 ;;      Temps:          0       2       0       0       0
  2861 ;;      Totals:         0       9       0       0       0
  2862 ;;Total ram usage:        9 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    4
  2865 ;; This function calls:
  2866 ;;		___awdiv
  2867 ;;		___awmod
  2868 ;;		___bmul
  2869 ;;		___ftmul
  2870 ;; This function is called by:
  2871 ;;		_sprintf
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function _scale
  2877  0A6D                     _scale:
  2878                           
  2879                           ;incstack = 0
  2880                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2881                           ;scale@scl stored from wreg
  2882  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0A6F  00C7               	movwf	scale@scl
  2885  0A70                     l3779:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2888  0A70  1FC7               	btfss	scale@scl,7
  2889  0A71  2A73               	goto	u5491
  2890  0A72  2A74               	goto	u5490
  2891  0A73                     u5491:
  2892  0A73  2BCF               	goto	l3801
  2893  0A74                     u5490:
  2894  0A74                     l3781:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2897  0A74  09C7               	comf	scale@scl,f
  2898  0A75  0AC7               	incf	scale@scl,f
  2899  0A76                     l3783:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2902  0A76  0847               	movf	scale@scl,w
  2903  0A77  3A80               	xorlw	128
  2904  0A78  3E12               	addlw	-238
  2905  0A79  1C03               	skipc
  2906  0A7A  2A7C               	goto	u5501
  2907  0A7B  2A7D               	goto	u5500
  2908  0A7C                     u5501:
  2909  0A7C  2B3B               	goto	l3791
  2910  0A7D                     u5500:
  2911  0A7D                     l3785:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2914  0A7D  3003               	movlw	3
  2915  0A7E  00C2               	movwf	??_scale
  2916  0A7F  0842               	movf	??_scale,w
  2917  0A80  00AB               	movwf	___bmul@multiplicand
  2918  0A81  0847               	movf	scale@scl,w
  2919  0A82  00F5               	movwf	___awmod@dividend
  2920  0A83  01F6               	clrf	___awmod@dividend+1
  2921  0A84  1BF5               	btfsc	___awmod@dividend,7
  2922  0A85  03F6               	decf	___awmod@dividend+1,f
  2923  0A86  3064               	movlw	100
  2924  0A87  00F3               	movwf	___awmod@divisor
  2925  0A88  3000               	movlw	0
  2926  0A89  00F4               	movwf	___awmod@divisor+1
  2927  0A8A  120A  118A  27A2  120A  158A  	fcall	___awmod
  2928  0A8F  0874               	movf	?___awmod+1,w
  2929  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0A92  00A5               	movwf	___awdiv@dividend+1
  2932  0A93  0873               	movf	?___awmod,w
  2933  0A94  00A4               	movwf	___awdiv@dividend
  2934  0A95  300A               	movlw	10
  2935  0A96  00A2               	movwf	___awdiv@divisor
  2936  0A97  3000               	movlw	0
  2937  0A98  00A3               	movwf	___awdiv@divisor+1
  2938  0A99  160A  118A  21E0  120A  158A  	fcall	___awdiv
  2939  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0AA0  0822               	movf	?___awdiv,w
  2942  0AA1  160A  158A  25CD  120A  158A  	fcall	___bmul
  2943  0AA6  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2944  0AA7  0084               	movwf	4
  2945  0AA8  160A  118A  200A  120A  158A  	fcall	stringdir
  2946  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0AAF  00AF               	movwf	___ftmul@f1
  2949  0AB0  160A  118A  200A  120A  158A  	fcall	stringdir
  2950  0AB5  00B0               	movwf	___ftmul@f1+1
  2951  0AB6  160A  118A  200A  120A  158A  	fcall	stringdir
  2952  0ABB  00B1               	movwf	___ftmul@f1+2
  2953  0ABC  3003               	movlw	3
  2954  0ABD  00C3               	movwf	??_scale+1
  2955  0ABE  0843               	movf	??_scale+1,w
  2956  0ABF  00AB               	movwf	___bmul@multiplicand
  2957  0AC0  0847               	movf	scale@scl,w
  2958  0AC1  00A4               	movwf	___awdiv@dividend
  2959  0AC2  01A5               	clrf	___awdiv@dividend+1
  2960  0AC3  1BA4               	btfsc	___awdiv@dividend,7
  2961  0AC4  03A5               	decf	___awdiv@dividend+1,f
  2962  0AC5  3064               	movlw	100
  2963  0AC6  00A2               	movwf	___awdiv@divisor
  2964  0AC7  3000               	movlw	0
  2965  0AC8  00A3               	movwf	___awdiv@divisor+1
  2966  0AC9  160A  118A  21E0  120A  158A  	fcall	___awdiv
  2967  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0AD0  0822               	movf	?___awdiv,w
  2970  0AD1  160A  158A  25CD  120A  158A  	fcall	___bmul
  2971  0AD6  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2972  0AD7  0084               	movwf	4
  2973  0AD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2974  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0ADF  00B2               	movwf	___ftmul@f2
  2977  0AE0  160A  118A  200A  120A  158A  	fcall	stringdir
  2978  0AE5  00B3               	movwf	___ftmul@f2+1
  2979  0AE6  160A  118A  200A  120A  158A  	fcall	stringdir
  2980  0AEB  00B4               	movwf	___ftmul@f2+2
  2981  0AEC  160A  118A  23CF  120A  158A  	fcall	___ftmul
  2982  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0AF3  082F               	movf	?___ftmul,w
  2985  0AF4  00C4               	movwf	_scale$1184
  2986  0AF5  0830               	movf	?___ftmul+1,w
  2987  0AF6  00C5               	movwf	_scale$1184+1
  2988  0AF7  0831               	movf	?___ftmul+2,w
  2989  0AF8  00C6               	movwf	_scale$1184+2
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2992  0AF9  3003               	movlw	3
  2993  0AFA  00C2               	movwf	??_scale
  2994  0AFB  0842               	movf	??_scale,w
  2995  0AFC  00AB               	movwf	___bmul@multiplicand
  2996  0AFD  0847               	movf	scale@scl,w
  2997  0AFE  00F5               	movwf	___awmod@dividend
  2998  0AFF  01F6               	clrf	___awmod@dividend+1
  2999  0B00  1BF5               	btfsc	___awmod@dividend,7
  3000  0B01  03F6               	decf	___awmod@dividend+1,f
  3001  0B02  300A               	movlw	10
  3002  0B03  00F3               	movwf	___awmod@divisor
  3003  0B04  3000               	movlw	0
  3004  0B05  00F4               	movwf	___awmod@divisor+1
  3005  0B06  120A  118A  27A2  120A  158A  	fcall	___awmod
  3006  0B0B  0873               	movf	?___awmod,w
  3007  0B0C  160A  158A  25CD  120A  158A  	fcall	___bmul
  3008  0B11  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3009  0B12  0084               	movwf	4
  3010  0B13  160A  118A  200A  120A  158A  	fcall	stringdir
  3011  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0B1A  00AF               	movwf	___ftmul@f1
  3014  0B1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3015  0B20  00B0               	movwf	___ftmul@f1+1
  3016  0B21  160A  118A  200A  120A  158A  	fcall	stringdir
  3017  0B26  00B1               	movwf	___ftmul@f1+2
  3018  0B27  0844               	movf	_scale$1184,w
  3019  0B28  00B2               	movwf	___ftmul@f2
  3020  0B29  0845               	movf	_scale$1184+1,w
  3021  0B2A  00B3               	movwf	___ftmul@f2+1
  3022  0B2B  0846               	movf	_scale$1184+2,w
  3023  0B2C  00B4               	movwf	___ftmul@f2+2
  3024  0B2D  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3025  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0B34  082F               	movf	?___ftmul,w
  3028  0B35  00BF               	movwf	?_scale
  3029  0B36  0830               	movf	?___ftmul+1,w
  3030  0B37  00C0               	movwf	?_scale+1
  3031  0B38  0831               	movf	?___ftmul+2,w
  3032  0B39  00C1               	movwf	?_scale+2
  3033  0B3A  2D27               	goto	l365
  3034  0B3B                     l3791:
  3035  0B3B  0847               	movf	scale@scl,w
  3036  0B3C  3A80               	xorlw	128
  3037  0B3D  3E75               	addlw	-139
  3038  0B3E  1C03               	skipc
  3039  0B3F  2B41               	goto	u5511
  3040  0B40  2B42               	goto	u5510
  3041  0B41                     u5511:
  3042  0B41  2BAE               	goto	l3797
  3043  0B42                     u5510:
  3044  0B42                     l3793:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3047  0B42  3003               	movlw	3
  3048  0B43  00C2               	movwf	??_scale
  3049  0B44  0842               	movf	??_scale,w
  3050  0B45  00AB               	movwf	___bmul@multiplicand
  3051  0B46  0847               	movf	scale@scl,w
  3052  0B47  00F5               	movwf	___awmod@dividend
  3053  0B48  01F6               	clrf	___awmod@dividend+1
  3054  0B49  1BF5               	btfsc	___awmod@dividend,7
  3055  0B4A  03F6               	decf	___awmod@dividend+1,f
  3056  0B4B  300A               	movlw	10
  3057  0B4C  00F3               	movwf	___awmod@divisor
  3058  0B4D  3000               	movlw	0
  3059  0B4E  00F4               	movwf	___awmod@divisor+1
  3060  0B4F  120A  118A  27A2  120A  158A  	fcall	___awmod
  3061  0B54  0873               	movf	?___awmod,w
  3062  0B55  160A  158A  25CD  120A  158A  	fcall	___bmul
  3063  0B5A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3064  0B5B  0084               	movwf	4
  3065  0B5C  160A  118A  200A  120A  158A  	fcall	stringdir
  3066  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0B63  00AF               	movwf	___ftmul@f1
  3069  0B64  160A  118A  200A  120A  158A  	fcall	stringdir
  3070  0B69  00B0               	movwf	___ftmul@f1+1
  3071  0B6A  160A  118A  200A  120A  158A  	fcall	stringdir
  3072  0B6F  00B1               	movwf	___ftmul@f1+2
  3073  0B70  3003               	movlw	3
  3074  0B71  00C3               	movwf	??_scale+1
  3075  0B72  0843               	movf	??_scale+1,w
  3076  0B73  00AB               	movwf	___bmul@multiplicand
  3077  0B74  0847               	movf	scale@scl,w
  3078  0B75  00A4               	movwf	___awdiv@dividend
  3079  0B76  01A5               	clrf	___awdiv@dividend+1
  3080  0B77  1BA4               	btfsc	___awdiv@dividend,7
  3081  0B78  03A5               	decf	___awdiv@dividend+1,f
  3082  0B79  300A               	movlw	10
  3083  0B7A  00A2               	movwf	___awdiv@divisor
  3084  0B7B  3000               	movlw	0
  3085  0B7C  00A3               	movwf	___awdiv@divisor+1
  3086  0B7D  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3087  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  3089  0B84  0822               	movf	?___awdiv,w
  3090  0B85  160A  158A  25CD  120A  158A  	fcall	___bmul
  3091  0B8A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3092  0B8B  0084               	movwf	4
  3093  0B8C  160A  118A  200A  120A  158A  	fcall	stringdir
  3094  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0B93  00B2               	movwf	___ftmul@f2
  3097  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  3098  0B99  00B3               	movwf	___ftmul@f2+1
  3099  0B9A  160A  118A  200A  120A  158A  	fcall	stringdir
  3100  0B9F  00B4               	movwf	___ftmul@f2+2
  3101  0BA0  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3102  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0BA7  082F               	movf	?___ftmul,w
  3105  0BA8  00BF               	movwf	?_scale
  3106  0BA9  0830               	movf	?___ftmul+1,w
  3107  0BAA  00C0               	movwf	?_scale+1
  3108  0BAB  0831               	movf	?___ftmul+2,w
  3109  0BAC  00C1               	movwf	?_scale+2
  3110  0BAD  2D27               	goto	l365
  3111  0BAE                     l3797:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3114  0BAE  3003               	movlw	3
  3115  0BAF  00C2               	movwf	??_scale
  3116  0BB0  0842               	movf	??_scale,w
  3117  0BB1  00AB               	movwf	___bmul@multiplicand
  3118  0BB2  0847               	movf	scale@scl,w
  3119  0BB3  160A  158A  25CD  120A  158A  	fcall	___bmul
  3120  0BB8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3121  0BB9  0084               	movwf	4
  3122  0BBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3123  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0BC1  00BF               	movwf	?_scale
  3126  0BC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3127  0BC7  00C0               	movwf	?_scale+1
  3128  0BC8  160A  118A  200A  120A  158A  	fcall	stringdir
  3129  0BCD  00C1               	movwf	?_scale+2
  3130  0BCE  2D27               	goto	l365
  3131  0BCF                     l3801:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3134  0BCF  0847               	movf	scale@scl,w
  3135  0BD0  3A80               	xorlw	128
  3136  0BD1  3E12               	addlw	-238
  3137  0BD2  1C03               	skipc
  3138  0BD3  2BD5               	goto	u5521
  3139  0BD4  2BD6               	goto	u5520
  3140  0BD5                     u5521:
  3141  0BD5  2C94               	goto	l3809
  3142  0BD6                     u5520:
  3143  0BD6                     l3803:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3146  0BD6  3003               	movlw	3
  3147  0BD7  00C2               	movwf	??_scale
  3148  0BD8  0842               	movf	??_scale,w
  3149  0BD9  00AB               	movwf	___bmul@multiplicand
  3150  0BDA  0847               	movf	scale@scl,w
  3151  0BDB  00F5               	movwf	___awmod@dividend
  3152  0BDC  01F6               	clrf	___awmod@dividend+1
  3153  0BDD  1BF5               	btfsc	___awmod@dividend,7
  3154  0BDE  03F6               	decf	___awmod@dividend+1,f
  3155  0BDF  3064               	movlw	100
  3156  0BE0  00F3               	movwf	___awmod@divisor
  3157  0BE1  3000               	movlw	0
  3158  0BE2  00F4               	movwf	___awmod@divisor+1
  3159  0BE3  120A  118A  27A2  120A  158A  	fcall	___awmod
  3160  0BE8  0874               	movf	?___awmod+1,w
  3161  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0BEB  00A5               	movwf	___awdiv@dividend+1
  3164  0BEC  0873               	movf	?___awmod,w
  3165  0BED  00A4               	movwf	___awdiv@dividend
  3166  0BEE  300A               	movlw	10
  3167  0BEF  00A2               	movwf	___awdiv@divisor
  3168  0BF0  3000               	movlw	0
  3169  0BF1  00A3               	movwf	___awdiv@divisor+1
  3170  0BF2  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3171  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0BF9  0822               	movf	?___awdiv,w
  3174  0BFA  160A  158A  25CD  120A  158A  	fcall	___bmul
  3175  0BFF  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3176  0C00  0084               	movwf	4
  3177  0C01  160A  118A  200A  120A  158A  	fcall	stringdir
  3178  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0C08  00AF               	movwf	___ftmul@f1
  3181  0C09  160A  118A  200A  120A  158A  	fcall	stringdir
  3182  0C0E  00B0               	movwf	___ftmul@f1+1
  3183  0C0F  160A  118A  200A  120A  158A  	fcall	stringdir
  3184  0C14  00B1               	movwf	___ftmul@f1+2
  3185  0C15  3003               	movlw	3
  3186  0C16  00C3               	movwf	??_scale+1
  3187  0C17  0843               	movf	??_scale+1,w
  3188  0C18  00AB               	movwf	___bmul@multiplicand
  3189  0C19  0847               	movf	scale@scl,w
  3190  0C1A  00A4               	movwf	___awdiv@dividend
  3191  0C1B  01A5               	clrf	___awdiv@dividend+1
  3192  0C1C  1BA4               	btfsc	___awdiv@dividend,7
  3193  0C1D  03A5               	decf	___awdiv@dividend+1,f
  3194  0C1E  3064               	movlw	100
  3195  0C1F  00A2               	movwf	___awdiv@divisor
  3196  0C20  3000               	movlw	0
  3197  0C21  00A3               	movwf	___awdiv@divisor+1
  3198  0C22  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3199  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0C29  0822               	movf	?___awdiv,w
  3202  0C2A  160A  158A  25CD  120A  158A  	fcall	___bmul
  3203  0C2F  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3204  0C30  0084               	movwf	4
  3205  0C31  160A  118A  200A  120A  158A  	fcall	stringdir
  3206  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0C38  00B2               	movwf	___ftmul@f2
  3209  0C39  160A  118A  200A  120A  158A  	fcall	stringdir
  3210  0C3E  00B3               	movwf	___ftmul@f2+1
  3211  0C3F  160A  118A  200A  120A  158A  	fcall	stringdir
  3212  0C44  00B4               	movwf	___ftmul@f2+2
  3213  0C45  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3214  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0C4C  082F               	movf	?___ftmul,w
  3217  0C4D  00C4               	movwf	_scale$1184
  3218  0C4E  0830               	movf	?___ftmul+1,w
  3219  0C4F  00C5               	movwf	_scale$1184+1
  3220  0C50  0831               	movf	?___ftmul+2,w
  3221  0C51  00C6               	movwf	_scale$1184+2
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3224  0C52  3003               	movlw	3
  3225  0C53  00C2               	movwf	??_scale
  3226  0C54  0842               	movf	??_scale,w
  3227  0C55  00AB               	movwf	___bmul@multiplicand
  3228  0C56  0847               	movf	scale@scl,w
  3229  0C57  00F5               	movwf	___awmod@dividend
  3230  0C58  01F6               	clrf	___awmod@dividend+1
  3231  0C59  1BF5               	btfsc	___awmod@dividend,7
  3232  0C5A  03F6               	decf	___awmod@dividend+1,f
  3233  0C5B  300A               	movlw	10
  3234  0C5C  00F3               	movwf	___awmod@divisor
  3235  0C5D  3000               	movlw	0
  3236  0C5E  00F4               	movwf	___awmod@divisor+1
  3237  0C5F  120A  118A  27A2  120A  158A  	fcall	___awmod
  3238  0C64  0873               	movf	?___awmod,w
  3239  0C65  160A  158A  25CD  120A  158A  	fcall	___bmul
  3240  0C6A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3241  0C6B  0084               	movwf	4
  3242  0C6C  160A  118A  200A  120A  158A  	fcall	stringdir
  3243  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0C73  00AF               	movwf	___ftmul@f1
  3246  0C74  160A  118A  200A  120A  158A  	fcall	stringdir
  3247  0C79  00B0               	movwf	___ftmul@f1+1
  3248  0C7A  160A  118A  200A  120A  158A  	fcall	stringdir
  3249  0C7F  00B1               	movwf	___ftmul@f1+2
  3250  0C80  0844               	movf	_scale$1184,w
  3251  0C81  00B2               	movwf	___ftmul@f2
  3252  0C82  0845               	movf	_scale$1184+1,w
  3253  0C83  00B3               	movwf	___ftmul@f2+1
  3254  0C84  0846               	movf	_scale$1184+2,w
  3255  0C85  00B4               	movwf	___ftmul@f2+2
  3256  0C86  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3257  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0C8D  082F               	movf	?___ftmul,w
  3260  0C8E  00BF               	movwf	?_scale
  3261  0C8F  0830               	movf	?___ftmul+1,w
  3262  0C90  00C0               	movwf	?_scale+1
  3263  0C91  0831               	movf	?___ftmul+2,w
  3264  0C92  00C1               	movwf	?_scale+2
  3265  0C93  2D27               	goto	l365
  3266  0C94                     l3809:
  3267  0C94  0847               	movf	scale@scl,w
  3268  0C95  3A80               	xorlw	128
  3269  0C96  3E75               	addlw	-139
  3270  0C97  1C03               	skipc
  3271  0C98  2C9A               	goto	u5531
  3272  0C99  2C9B               	goto	u5530
  3273  0C9A                     u5531:
  3274  0C9A  2D07               	goto	l3815
  3275  0C9B                     u5530:
  3276  0C9B                     l3811:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3279  0C9B  3003               	movlw	3
  3280  0C9C  00C2               	movwf	??_scale
  3281  0C9D  0842               	movf	??_scale,w
  3282  0C9E  00AB               	movwf	___bmul@multiplicand
  3283  0C9F  0847               	movf	scale@scl,w
  3284  0CA0  00F5               	movwf	___awmod@dividend
  3285  0CA1  01F6               	clrf	___awmod@dividend+1
  3286  0CA2  1BF5               	btfsc	___awmod@dividend,7
  3287  0CA3  03F6               	decf	___awmod@dividend+1,f
  3288  0CA4  300A               	movlw	10
  3289  0CA5  00F3               	movwf	___awmod@divisor
  3290  0CA6  3000               	movlw	0
  3291  0CA7  00F4               	movwf	___awmod@divisor+1
  3292  0CA8  120A  118A  27A2  120A  158A  	fcall	___awmod
  3293  0CAD  0873               	movf	?___awmod,w
  3294  0CAE  160A  158A  25CD  120A  158A  	fcall	___bmul
  3295  0CB3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3296  0CB4  0084               	movwf	4
  3297  0CB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3298  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0CBC  00AF               	movwf	___ftmul@f1
  3301  0CBD  160A  118A  200A  120A  158A  	fcall	stringdir
  3302  0CC2  00B0               	movwf	___ftmul@f1+1
  3303  0CC3  160A  118A  200A  120A  158A  	fcall	stringdir
  3304  0CC8  00B1               	movwf	___ftmul@f1+2
  3305  0CC9  3003               	movlw	3
  3306  0CCA  00C3               	movwf	??_scale+1
  3307  0CCB  0843               	movf	??_scale+1,w
  3308  0CCC  00AB               	movwf	___bmul@multiplicand
  3309  0CCD  0847               	movf	scale@scl,w
  3310  0CCE  00A4               	movwf	___awdiv@dividend
  3311  0CCF  01A5               	clrf	___awdiv@dividend+1
  3312  0CD0  1BA4               	btfsc	___awdiv@dividend,7
  3313  0CD1  03A5               	decf	___awdiv@dividend+1,f
  3314  0CD2  300A               	movlw	10
  3315  0CD3  00A2               	movwf	___awdiv@divisor
  3316  0CD4  3000               	movlw	0
  3317  0CD5  00A3               	movwf	___awdiv@divisor+1
  3318  0CD6  160A  118A  21E0  120A  158A  	fcall	___awdiv
  3319  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0CDD  0822               	movf	?___awdiv,w
  3322  0CDE  160A  158A  25CD  120A  158A  	fcall	___bmul
  3323  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3324  0CE4  0084               	movwf	4
  3325  0CE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3326  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0CEC  00B2               	movwf	___ftmul@f2
  3329  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  3330  0CF2  00B3               	movwf	___ftmul@f2+1
  3331  0CF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3332  0CF8  00B4               	movwf	___ftmul@f2+2
  3333  0CF9  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3334  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0D00  082F               	movf	?___ftmul,w
  3337  0D01  00BF               	movwf	?_scale
  3338  0D02  0830               	movf	?___ftmul+1,w
  3339  0D03  00C0               	movwf	?_scale+1
  3340  0D04  0831               	movf	?___ftmul+2,w
  3341  0D05  00C1               	movwf	?_scale+2
  3342  0D06  2D27               	goto	l365
  3343  0D07                     l3815:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3346  0D07  3003               	movlw	3
  3347  0D08  00C2               	movwf	??_scale
  3348  0D09  0842               	movf	??_scale,w
  3349  0D0A  00AB               	movwf	___bmul@multiplicand
  3350  0D0B  0847               	movf	scale@scl,w
  3351  0D0C  160A  158A  25CD  120A  158A  	fcall	___bmul
  3352  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3353  0D12  0084               	movwf	4
  3354  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  3355  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0D1A  00BF               	movwf	?_scale
  3358  0D1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3359  0D20  00C0               	movwf	?_scale+1
  3360  0D21  160A  118A  200A  120A  158A  	fcall	stringdir
  3361  0D26  00C1               	movwf	?_scale+2
  3362  0D27                     l365:
  3363  0D27  0008               	return
  3364  0D28                     __end_of_scale:
  3365                           
  3366                           	psect	text5
  3367  07A2                     __ptext5:	
  3368 ;; *************** function ___awmod *****************
  3369 ;; Defined at:
  3370 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  divisor         2    3[COMMON] int 
  3373 ;;  dividend        2    5[COMMON] int 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  sign            1    1[BANK0 ] unsigned char 
  3376 ;;  counter         1    0[BANK0 ] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2    3[COMMON] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         4       0       0       0       0
  3387 ;;      Locals:         0       2       0       0       0
  3388 ;;      Temps:          1       0       0       0       0
  3389 ;;      Totals:         5       2       0       0       0
  3390 ;;Total ram usage:        7 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    2
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_scale
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function ___awmod
  3402  07A2                     ___awmod:
  3403  07A2                     l3523:	
  3404                           ;incstack = 0
  3405                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3406                           
  3407  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3408  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3409  07A4  01A1               	clrf	___awmod@sign
  3410  07A5                     l3525:
  3411  07A5  1FF6               	btfss	___awmod@dividend+1,7
  3412  07A6  2FA8               	goto	u4871
  3413  07A7  2FA9               	goto	u4870
  3414  07A8                     u4871:
  3415  07A8  2FB0               	goto	l3531
  3416  07A9                     u4870:
  3417  07A9                     l3527:
  3418  07A9  09F5               	comf	___awmod@dividend,f
  3419  07AA  09F6               	comf	___awmod@dividend+1,f
  3420  07AB  0AF5               	incf	___awmod@dividend,f
  3421  07AC  1903               	skipnz
  3422  07AD  0AF6               	incf	___awmod@dividend+1,f
  3423  07AE                     l3529:
  3424  07AE  01A1               	clrf	___awmod@sign
  3425  07AF  0AA1               	incf	___awmod@sign,f
  3426  07B0                     l3531:
  3427  07B0  1FF4               	btfss	___awmod@divisor+1,7
  3428  07B1  2FB3               	goto	u4881
  3429  07B2  2FB4               	goto	u4880
  3430  07B3                     u4881:
  3431  07B3  2FB9               	goto	l3535
  3432  07B4                     u4880:
  3433  07B4                     l3533:
  3434  07B4  09F3               	comf	___awmod@divisor,f
  3435  07B5  09F4               	comf	___awmod@divisor+1,f
  3436  07B6  0AF3               	incf	___awmod@divisor,f
  3437  07B7  1903               	skipnz
  3438  07B8  0AF4               	incf	___awmod@divisor+1,f
  3439  07B9                     l3535:
  3440  07B9  0873               	movf	___awmod@divisor,w
  3441  07BA  0474               	iorwf	___awmod@divisor+1,w
  3442  07BB  1903               	btfsc	3,2
  3443  07BC  2FBE               	goto	u4891
  3444  07BD  2FBF               	goto	u4890
  3445  07BE                     u4891:
  3446  07BE  2FEE               	goto	l3553
  3447  07BF                     u4890:
  3448  07BF                     l3537:
  3449  07BF  01A0               	clrf	___awmod@counter
  3450  07C0  0AA0               	incf	___awmod@counter,f
  3451  07C1  2FCD               	goto	l3543
  3452  07C2                     l3539:
  3453  07C2  3001               	movlw	1
  3454  07C3                     u4905:
  3455  07C3  1003               	clrc
  3456  07C4  0DF3               	rlf	___awmod@divisor,f
  3457  07C5  0DF4               	rlf	___awmod@divisor+1,f
  3458  07C6  3EFF               	addlw	-1
  3459  07C7  1D03               	skipz
  3460  07C8  2FC3               	goto	u4905
  3461  07C9                     l3541:
  3462  07C9  3001               	movlw	1
  3463  07CA  00F7               	movwf	??___awmod
  3464  07CB  0877               	movf	??___awmod,w
  3465  07CC  07A0               	addwf	___awmod@counter,f
  3466  07CD                     l3543:
  3467  07CD  1FF4               	btfss	___awmod@divisor+1,7
  3468  07CE  2FD0               	goto	u4911
  3469  07CF  2FD1               	goto	u4910
  3470  07D0                     u4911:
  3471  07D0  2FC2               	goto	l3539
  3472  07D1                     u4910:
  3473  07D1                     l3545:
  3474  07D1  0874               	movf	___awmod@divisor+1,w
  3475  07D2  0276               	subwf	___awmod@dividend+1,w
  3476  07D3  1D03               	skipz
  3477  07D4  2FD7               	goto	u4925
  3478  07D5  0873               	movf	___awmod@divisor,w
  3479  07D6  0275               	subwf	___awmod@dividend,w
  3480  07D7                     u4925:
  3481  07D7  1C03               	skipc
  3482  07D8  2FDA               	goto	u4921
  3483  07D9  2FDB               	goto	u4920
  3484  07DA                     u4921:
  3485  07DA  2FE1               	goto	l3549
  3486  07DB                     u4920:
  3487  07DB                     l3547:
  3488  07DB  0873               	movf	___awmod@divisor,w
  3489  07DC  02F5               	subwf	___awmod@dividend,f
  3490  07DD  0874               	movf	___awmod@divisor+1,w
  3491  07DE  1C03               	skipc
  3492  07DF  03F6               	decf	___awmod@dividend+1,f
  3493  07E0  02F6               	subwf	___awmod@dividend+1,f
  3494  07E1                     l3549:
  3495  07E1  3001               	movlw	1
  3496  07E2                     u4935:
  3497  07E2  1003               	clrc
  3498  07E3  0CF4               	rrf	___awmod@divisor+1,f
  3499  07E4  0CF3               	rrf	___awmod@divisor,f
  3500  07E5  3EFF               	addlw	-1
  3501  07E6  1D03               	skipz
  3502  07E7  2FE2               	goto	u4935
  3503  07E8                     l3551:
  3504  07E8  3001               	movlw	1
  3505  07E9  02A0               	subwf	___awmod@counter,f
  3506  07EA  1D03               	btfss	3,2
  3507  07EB  2FED               	goto	u4941
  3508  07EC  2FEE               	goto	u4940
  3509  07ED                     u4941:
  3510  07ED  2FD1               	goto	l3545
  3511  07EE                     u4940:
  3512  07EE                     l3553:
  3513  07EE  0821               	movf	___awmod@sign,w
  3514  07EF  1903               	btfsc	3,2
  3515  07F0  2FF2               	goto	u4951
  3516  07F1  2FF3               	goto	u4950
  3517  07F2                     u4951:
  3518  07F2  2FF8               	goto	l3557
  3519  07F3                     u4950:
  3520  07F3                     l3555:
  3521  07F3  09F5               	comf	___awmod@dividend,f
  3522  07F4  09F6               	comf	___awmod@dividend+1,f
  3523  07F5  0AF5               	incf	___awmod@dividend,f
  3524  07F6  1903               	skipnz
  3525  07F7  0AF6               	incf	___awmod@dividend+1,f
  3526  07F8                     l3557:
  3527  07F8  0876               	movf	___awmod@dividend+1,w
  3528  07F9  00F4               	movwf	?___awmod+1
  3529  07FA  0875               	movf	___awmod@dividend,w
  3530  07FB  00F3               	movwf	?___awmod
  3531  07FC                     l657:
  3532  07FC  0008               	return
  3533  07FD                     __end_of___awmod:
  3534                           
  3535                           	psect	text6
  3536  11E0                     __ptext6:	
  3537 ;; *************** function ___awdiv *****************
  3538 ;; Defined at:
  3539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  divisor         2    2[BANK0 ] int 
  3542 ;;  dividend        2    4[BANK0 ] int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  quotient        2    9[BANK0 ] int 
  3545 ;;  sign            1    8[BANK0 ] unsigned char 
  3546 ;;  counter         1    7[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  2    2[BANK0 ] int 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       4       0       0       0
  3557 ;;      Locals:         0       4       0       0       0
  3558 ;;      Temps:          0       1       0       0       0
  3559 ;;      Totals:         0       9       0       0       0
  3560 ;;Total ram usage:        9 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_scale
  3567 ;;		_sprintf
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function ___awdiv
  3573  11E0                     ___awdiv:
  3574  11E0                     l3479:	
  3575                           ;incstack = 0
  3576                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3577                           
  3578  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  3579  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  3580  11E2  01A8               	clrf	___awdiv@sign
  3581  11E3                     l3481:
  3582  11E3  1FA3               	btfss	___awdiv@divisor+1,7
  3583  11E4  29E6               	goto	u4771
  3584  11E5  29E7               	goto	u4770
  3585  11E6                     u4771:
  3586  11E6  29EE               	goto	l3487
  3587  11E7                     u4770:
  3588  11E7                     l3483:
  3589  11E7  09A2               	comf	___awdiv@divisor,f
  3590  11E8  09A3               	comf	___awdiv@divisor+1,f
  3591  11E9  0AA2               	incf	___awdiv@divisor,f
  3592  11EA  1903               	skipnz
  3593  11EB  0AA3               	incf	___awdiv@divisor+1,f
  3594  11EC                     l3485:
  3595  11EC  01A8               	clrf	___awdiv@sign
  3596  11ED  0AA8               	incf	___awdiv@sign,f
  3597  11EE                     l3487:
  3598  11EE  1FA5               	btfss	___awdiv@dividend+1,7
  3599  11EF  29F1               	goto	u4781
  3600  11F0  29F2               	goto	u4780
  3601  11F1                     u4781:
  3602  11F1  29FB               	goto	l3493
  3603  11F2                     u4780:
  3604  11F2                     l3489:
  3605  11F2  09A4               	comf	___awdiv@dividend,f
  3606  11F3  09A5               	comf	___awdiv@dividend+1,f
  3607  11F4  0AA4               	incf	___awdiv@dividend,f
  3608  11F5  1903               	skipnz
  3609  11F6  0AA5               	incf	___awdiv@dividend+1,f
  3610  11F7                     l3491:
  3611  11F7  3001               	movlw	1
  3612  11F8  00A6               	movwf	??___awdiv
  3613  11F9  0826               	movf	??___awdiv,w
  3614  11FA  06A8               	xorwf	___awdiv@sign,f
  3615  11FB                     l3493:
  3616  11FB  01A9               	clrf	___awdiv@quotient
  3617  11FC  01AA               	clrf	___awdiv@quotient+1
  3618  11FD                     l3495:
  3619  11FD  0822               	movf	___awdiv@divisor,w
  3620  11FE  0423               	iorwf	___awdiv@divisor+1,w
  3621  11FF  1903               	btfsc	3,2
  3622  1200  2A02               	goto	u4791
  3623  1201  2A03               	goto	u4790
  3624  1202                     u4791:
  3625  1202  2A3A               	goto	l3515
  3626  1203                     u4790:
  3627  1203                     l3497:
  3628  1203  01A7               	clrf	___awdiv@counter
  3629  1204  0AA7               	incf	___awdiv@counter,f
  3630  1205  2A11               	goto	l3503
  3631  1206                     l3499:
  3632  1206  3001               	movlw	1
  3633  1207                     u4805:
  3634  1207  1003               	clrc
  3635  1208  0DA2               	rlf	___awdiv@divisor,f
  3636  1209  0DA3               	rlf	___awdiv@divisor+1,f
  3637  120A  3EFF               	addlw	-1
  3638  120B  1D03               	skipz
  3639  120C  2A07               	goto	u4805
  3640  120D                     l3501:
  3641  120D  3001               	movlw	1
  3642  120E  00A6               	movwf	??___awdiv
  3643  120F  0826               	movf	??___awdiv,w
  3644  1210  07A7               	addwf	___awdiv@counter,f
  3645  1211                     l3503:
  3646  1211  1FA3               	btfss	___awdiv@divisor+1,7
  3647  1212  2A14               	goto	u4811
  3648  1213  2A15               	goto	u4810
  3649  1214                     u4811:
  3650  1214  2A06               	goto	l3499
  3651  1215                     u4810:
  3652  1215                     l3505:
  3653  1215  3001               	movlw	1
  3654  1216                     u4825:
  3655  1216  1003               	clrc
  3656  1217  0DA9               	rlf	___awdiv@quotient,f
  3657  1218  0DAA               	rlf	___awdiv@quotient+1,f
  3658  1219  3EFF               	addlw	-1
  3659  121A  1D03               	skipz
  3660  121B  2A16               	goto	u4825
  3661  121C  0823               	movf	___awdiv@divisor+1,w
  3662  121D  0225               	subwf	___awdiv@dividend+1,w
  3663  121E  1D03               	skipz
  3664  121F  2A22               	goto	u4835
  3665  1220  0822               	movf	___awdiv@divisor,w
  3666  1221  0224               	subwf	___awdiv@dividend,w
  3667  1222                     u4835:
  3668  1222  1C03               	skipc
  3669  1223  2A25               	goto	u4831
  3670  1224  2A26               	goto	u4830
  3671  1225                     u4831:
  3672  1225  2A2D               	goto	l3511
  3673  1226                     u4830:
  3674  1226                     l3507:
  3675  1226  0822               	movf	___awdiv@divisor,w
  3676  1227  02A4               	subwf	___awdiv@dividend,f
  3677  1228  0823               	movf	___awdiv@divisor+1,w
  3678  1229  1C03               	skipc
  3679  122A  03A5               	decf	___awdiv@dividend+1,f
  3680  122B  02A5               	subwf	___awdiv@dividend+1,f
  3681  122C                     l3509:
  3682  122C  1429               	bsf	___awdiv@quotient,0
  3683  122D                     l3511:
  3684  122D  3001               	movlw	1
  3685  122E                     u4845:
  3686  122E  1003               	clrc
  3687  122F  0CA3               	rrf	___awdiv@divisor+1,f
  3688  1230  0CA2               	rrf	___awdiv@divisor,f
  3689  1231  3EFF               	addlw	-1
  3690  1232  1D03               	skipz
  3691  1233  2A2E               	goto	u4845
  3692  1234                     l3513:
  3693  1234  3001               	movlw	1
  3694  1235  02A7               	subwf	___awdiv@counter,f
  3695  1236  1D03               	btfss	3,2
  3696  1237  2A39               	goto	u4851
  3697  1238  2A3A               	goto	u4850
  3698  1239                     u4851:
  3699  1239  2A15               	goto	l3505
  3700  123A                     u4850:
  3701  123A                     l3515:
  3702  123A  0828               	movf	___awdiv@sign,w
  3703  123B  1903               	btfsc	3,2
  3704  123C  2A3E               	goto	u4861
  3705  123D  2A3F               	goto	u4860
  3706  123E                     u4861:
  3707  123E  2A44               	goto	l3519
  3708  123F                     u4860:
  3709  123F                     l3517:
  3710  123F  09A9               	comf	___awdiv@quotient,f
  3711  1240  09AA               	comf	___awdiv@quotient+1,f
  3712  1241  0AA9               	incf	___awdiv@quotient,f
  3713  1242  1903               	skipnz
  3714  1243  0AAA               	incf	___awdiv@quotient+1,f
  3715  1244                     l3519:
  3716  1244  082A               	movf	___awdiv@quotient+1,w
  3717  1245  00A3               	movwf	?___awdiv+1
  3718  1246  0829               	movf	___awdiv@quotient,w
  3719  1247  00A2               	movwf	?___awdiv
  3720  1248                     l644:
  3721  1248  0008               	return
  3722  1249                     __end_of___awdiv:
  3723                           
  3724                           	psect	text7
  3725  1DA6                     __ptext7:	
  3726 ;; *************** function _isdigit *****************
  3727 ;; Defined at:
  3728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  c               1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  c               1    4[COMMON] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;		None               void
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       0       0       0       0
  3743 ;;      Locals:         2       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0
  3745 ;;      Totals:         2       0       0       0       0
  3746 ;;Total ram usage:        2 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    2
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_sprintf
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _isdigit
  3758  1DA6                     _isdigit:
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3762                           ;isdigit@c stored from wreg
  3763  1DA6  00F4               	movwf	isdigit@c
  3764  1DA7                     l2613:
  3765  1DA7  01F3               	clrf	_isdigit$986
  3766  1DA8                     l2615:
  3767  1DA8  303A               	movlw	58
  3768  1DA9  0274               	subwf	isdigit@c,w
  3769  1DAA  1803               	skipnc
  3770  1DAB  2DAD               	goto	u3311
  3771  1DAC  2DAE               	goto	u3310
  3772  1DAD                     u3311:
  3773  1DAD  2DB6               	goto	l2621
  3774  1DAE                     u3310:
  3775  1DAE                     l2617:
  3776  1DAE  3030               	movlw	48
  3777  1DAF  0274               	subwf	isdigit@c,w
  3778  1DB0  1C03               	skipc
  3779  1DB1  2DB3               	goto	u3321
  3780  1DB2  2DB4               	goto	u3320
  3781  1DB3                     u3321:
  3782  1DB3  2DB6               	goto	l2621
  3783  1DB4                     u3320:
  3784  1DB4                     l2619:
  3785  1DB4  01F3               	clrf	_isdigit$986
  3786  1DB5  0AF3               	incf	_isdigit$986,f
  3787  1DB6                     l2621:
  3788  1DB6  0C73               	rrf	_isdigit$986,w
  3789  1DB7                     l923:
  3790  1DB7  0008               	return
  3791  1DB8                     __end_of_isdigit:
  3792                           
  3793                           	psect	text8
  3794  08C4                     __ptext8:	
  3795 ;; *************** function _fround *****************
  3796 ;; Defined at:
  3797 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  prec            1    wreg     unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  prec            1   46[BANK0 ] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  3   31[BANK0 ] unsigned char 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         0       3       0       0       0
  3812 ;;      Locals:         0       7       0       0       0
  3813 ;;      Temps:          0       6       0       0       0
  3814 ;;      Totals:         0      16       0       0       0
  3815 ;;Total ram usage:       16 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    4
  3818 ;; This function calls:
  3819 ;;		___bmul
  3820 ;;		___ftmul
  3821 ;;		___lwdiv
  3822 ;;		___lwmod
  3823 ;; This function is called by:
  3824 ;;		_sprintf
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           
  3829                           ;psect for function _fround
  3830  08C4                     _fround:
  3831                           
  3832                           ;incstack = 0
  3833                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3834                           ;fround@prec stored from wreg
  3835  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  3836  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  3837  08C6  00CE               	movwf	fround@prec
  3838  08C7                     l3757:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3841  08C7  306E               	movlw	110
  3842  08C8  024E               	subwf	fround@prec,w
  3843  08C9  1C03               	skipc
  3844  08CA  28CC               	goto	u5471
  3845  08CB  28CD               	goto	u5470
  3846  08CC                     u5471:
  3847  08CC  29AA               	goto	l3767
  3848  08CD                     u5470:
  3849  08CD                     l3759:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3852  08CD  3003               	movlw	3
  3853  08CE  00C2               	movwf	??_fround
  3854  08CF  0842               	movf	??_fround,w
  3855  08D0  00AB               	movwf	___bmul@multiplicand
  3856  08D1  084E               	movf	fround@prec,w
  3857  08D2  00C3               	movwf	??_fround+1
  3858  08D3  01C4               	clrf	??_fround+2
  3859  08D4  0843               	movf	??_fround+1,w
  3860  08D5  00F5               	movwf	___lwmod@dividend
  3861  08D6  0844               	movf	??_fround+2,w
  3862  08D7  00F6               	movwf	___lwmod@dividend+1
  3863  08D8  3064               	movlw	100
  3864  08D9  00F3               	movwf	___lwmod@divisor
  3865  08DA  3000               	movlw	0
  3866  08DB  00F4               	movwf	___lwmod@divisor+1
  3867  08DC  160A  158A  2740  120A  158A  	fcall	___lwmod
  3868  08E1  0874               	movf	?___lwmod+1,w
  3869  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  3870  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  3871  08E4  00A4               	movwf	___lwdiv@dividend+1
  3872  08E5  0873               	movf	?___lwmod,w
  3873  08E6  00A3               	movwf	___lwdiv@dividend
  3874  08E7  300A               	movlw	10
  3875  08E8  00A1               	movwf	___lwdiv@divisor
  3876  08E9  3000               	movlw	0
  3877  08EA  00A2               	movwf	___lwdiv@divisor+1
  3878  08EB  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3879  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  3880  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  3881  08F2  0821               	movf	?___lwdiv,w
  3882  08F3  160A  158A  25CD  120A  158A  	fcall	___bmul
  3883  08F8  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3884  08F9  0084               	movwf	4
  3885  08FA  160A  118A  200A  120A  158A  	fcall	stringdir
  3886  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0900  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0901  00AF               	movwf	___ftmul@f1
  3889  0902  160A  118A  200A  120A  158A  	fcall	stringdir
  3890  0907  00B0               	movwf	___ftmul@f1+1
  3891  0908  160A  118A  200A  120A  158A  	fcall	stringdir
  3892  090D  00B1               	movwf	___ftmul@f1+2
  3893  090E  3003               	movlw	3
  3894  090F  00C5               	movwf	??_fround+3
  3895  0910  0845               	movf	??_fround+3,w
  3896  0911  00AB               	movwf	___bmul@multiplicand
  3897  0912  084E               	movf	fround@prec,w
  3898  0913  00C6               	movwf	??_fround+4
  3899  0914  01C7               	clrf	??_fround+5
  3900  0915  0846               	movf	??_fround+4,w
  3901  0916  00A3               	movwf	___lwdiv@dividend
  3902  0917  0847               	movf	??_fround+5,w
  3903  0918  00A4               	movwf	___lwdiv@dividend+1
  3904  0919  3064               	movlw	100
  3905  091A  00A1               	movwf	___lwdiv@divisor
  3906  091B  3000               	movlw	0
  3907  091C  00A2               	movwf	___lwdiv@divisor+1
  3908  091D  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3909  0922  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0923  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0924  0821               	movf	?___lwdiv,w
  3912  0925  160A  158A  25CD  120A  158A  	fcall	___bmul
  3913  092A  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3914  092B  0084               	movwf	4
  3915  092C  160A  118A  200A  120A  158A  	fcall	stringdir
  3916  0931  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0932  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0933  00B2               	movwf	___ftmul@f2
  3919  0934  160A  118A  200A  120A  158A  	fcall	stringdir
  3920  0939  00B3               	movwf	___ftmul@f2+1
  3921  093A  160A  118A  200A  120A  158A  	fcall	stringdir
  3922  093F  00B4               	movwf	___ftmul@f2+2
  3923  0940  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3924  0945  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0946  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0947  082F               	movf	?___ftmul,w
  3927  0948  00CB               	movwf	_fround$1182
  3928  0949  0830               	movf	?___ftmul+1,w
  3929  094A  00CC               	movwf	_fround$1182+1
  3930  094B  0831               	movf	?___ftmul+2,w
  3931  094C  00CD               	movwf	_fround$1182+2
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3934  094D  3003               	movlw	3
  3935  094E  00C2               	movwf	??_fround
  3936  094F  0842               	movf	??_fround,w
  3937  0950  00AB               	movwf	___bmul@multiplicand
  3938  0951  084E               	movf	fround@prec,w
  3939  0952  00C3               	movwf	??_fround+1
  3940  0953  01C4               	clrf	??_fround+2
  3941  0954  0843               	movf	??_fround+1,w
  3942  0955  00F5               	movwf	___lwmod@dividend
  3943  0956  0844               	movf	??_fround+2,w
  3944  0957  00F6               	movwf	___lwmod@dividend+1
  3945  0958  300A               	movlw	10
  3946  0959  00F3               	movwf	___lwmod@divisor
  3947  095A  3000               	movlw	0
  3948  095B  00F4               	movwf	___lwmod@divisor+1
  3949  095C  160A  158A  2740  120A  158A  	fcall	___lwmod
  3950  0961  0873               	movf	?___lwmod,w
  3951  0962  160A  158A  25CD  120A  158A  	fcall	___bmul
  3952  0967  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3953  0968  0084               	movwf	4
  3954  0969  160A  118A  200A  120A  158A  	fcall	stringdir
  3955  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3956  096F  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0970  00AF               	movwf	___ftmul@f1
  3958  0971  160A  118A  200A  120A  158A  	fcall	stringdir
  3959  0976  00B0               	movwf	___ftmul@f1+1
  3960  0977  160A  118A  200A  120A  158A  	fcall	stringdir
  3961  097C  00B1               	movwf	___ftmul@f1+2
  3962  097D  084B               	movf	_fround$1182,w
  3963  097E  00B2               	movwf	___ftmul@f2
  3964  097F  084C               	movf	_fround$1182+1,w
  3965  0980  00B3               	movwf	___ftmul@f2+1
  3966  0981  084D               	movf	_fround$1182+2,w
  3967  0982  00B4               	movwf	___ftmul@f2+2
  3968  0983  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3969  0988  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0989  1303               	bcf	3,6	;RP1=0, select bank0
  3971  098A  082F               	movf	?___ftmul,w
  3972  098B  00C8               	movwf	_fround$1183
  3973  098C  0830               	movf	?___ftmul+1,w
  3974  098D  00C9               	movwf	_fround$1183+1
  3975  098E  0831               	movf	?___ftmul+2,w
  3976  098F  00CA               	movwf	_fround$1183+2
  3977  0990                     l3761:
  3978                           
  3979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3980  0990  3000               	movlw	0
  3981  0991  00AF               	movwf	___ftmul@f1
  3982  0992  3000               	movlw	0
  3983  0993  00B0               	movwf	___ftmul@f1+1
  3984  0994  303F               	movlw	63
  3985  0995  00B1               	movwf	___ftmul@f1+2
  3986  0996  0848               	movf	_fround$1183,w
  3987  0997  00B2               	movwf	___ftmul@f2
  3988  0998  0849               	movf	_fround$1183+1,w
  3989  0999  00B3               	movwf	___ftmul@f2+1
  3990  099A  084A               	movf	_fround$1183+2,w
  3991  099B  00B4               	movwf	___ftmul@f2+2
  3992  099C  160A  118A  23CF  120A  158A  	fcall	___ftmul
  3993  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  3994  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  3995  09A3  082F               	movf	?___ftmul,w
  3996  09A4  00BF               	movwf	?_fround
  3997  09A5  0830               	movf	?___ftmul+1,w
  3998  09A6  00C0               	movwf	?_fround+1
  3999  09A7  0831               	movf	?___ftmul+2,w
  4000  09A8  00C1               	movwf	?_fround+2
  4001  09A9  2A6C               	goto	l358
  4002  09AA                     l3767:
  4003  09AA  300B               	movlw	11
  4004  09AB  024E               	subwf	fround@prec,w
  4005  09AC  1C03               	skipc
  4006  09AD  29AF               	goto	u5481
  4007  09AE  29B0               	goto	u5480
  4008  09AF                     u5481:
  4009  09AF  2A39               	goto	l3775
  4010  09B0                     u5480:
  4011  09B0                     l3769:
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4014  09B0  3003               	movlw	3
  4015  09B1  00C2               	movwf	??_fround
  4016  09B2  0842               	movf	??_fround,w
  4017  09B3  00AB               	movwf	___bmul@multiplicand
  4018  09B4  084E               	movf	fround@prec,w
  4019  09B5  00C3               	movwf	??_fround+1
  4020  09B6  01C4               	clrf	??_fround+2
  4021  09B7  0843               	movf	??_fround+1,w
  4022  09B8  00F5               	movwf	___lwmod@dividend
  4023  09B9  0844               	movf	??_fround+2,w
  4024  09BA  00F6               	movwf	___lwmod@dividend+1
  4025  09BB  300A               	movlw	10
  4026  09BC  00F3               	movwf	___lwmod@divisor
  4027  09BD  3000               	movlw	0
  4028  09BE  00F4               	movwf	___lwmod@divisor+1
  4029  09BF  160A  158A  2740  120A  158A  	fcall	___lwmod
  4030  09C4  0873               	movf	?___lwmod,w
  4031  09C5  160A  158A  25CD  120A  158A  	fcall	___bmul
  4032  09CA  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4033  09CB  0084               	movwf	4
  4034  09CC  160A  118A  200A  120A  158A  	fcall	stringdir
  4035  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  4036  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  4037  09D3  00AF               	movwf	___ftmul@f1
  4038  09D4  160A  118A  200A  120A  158A  	fcall	stringdir
  4039  09D9  00B0               	movwf	___ftmul@f1+1
  4040  09DA  160A  118A  200A  120A  158A  	fcall	stringdir
  4041  09DF  00B1               	movwf	___ftmul@f1+2
  4042  09E0  3003               	movlw	3
  4043  09E1  00C5               	movwf	??_fround+3
  4044  09E2  0845               	movf	??_fround+3,w
  4045  09E3  00AB               	movwf	___bmul@multiplicand
  4046  09E4  084E               	movf	fround@prec,w
  4047  09E5  00C6               	movwf	??_fround+4
  4048  09E6  01C7               	clrf	??_fround+5
  4049  09E7  0846               	movf	??_fround+4,w
  4050  09E8  00A3               	movwf	___lwdiv@dividend
  4051  09E9  0847               	movf	??_fround+5,w
  4052  09EA  00A4               	movwf	___lwdiv@dividend+1
  4053  09EB  300A               	movlw	10
  4054  09EC  00A1               	movwf	___lwdiv@divisor
  4055  09ED  3000               	movlw	0
  4056  09EE  00A2               	movwf	___lwdiv@divisor+1
  4057  09EF  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  4058  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  4059  09F5  1303               	bcf	3,6	;RP1=0, select bank0
  4060  09F6  0821               	movf	?___lwdiv,w
  4061  09F7  160A  158A  25CD  120A  158A  	fcall	___bmul
  4062  09FC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4063  09FD  0084               	movwf	4
  4064  09FE  160A  118A  200A  120A  158A  	fcall	stringdir
  4065  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0A05  00B2               	movwf	___ftmul@f2
  4068  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  4069  0A0B  00B3               	movwf	___ftmul@f2+1
  4070  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4071  0A11  00B4               	movwf	___ftmul@f2+2
  4072  0A12  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4073  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0A19  082F               	movf	?___ftmul,w
  4076  0A1A  00CB               	movwf	_fround$1182
  4077  0A1B  0830               	movf	?___ftmul+1,w
  4078  0A1C  00CC               	movwf	_fround$1182+1
  4079  0A1D  0831               	movf	?___ftmul+2,w
  4080  0A1E  00CD               	movwf	_fround$1182+2
  4081  0A1F                     l3771:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4084  0A1F  3000               	movlw	0
  4085  0A20  00AF               	movwf	___ftmul@f1
  4086  0A21  3000               	movlw	0
  4087  0A22  00B0               	movwf	___ftmul@f1+1
  4088  0A23  303F               	movlw	63
  4089  0A24  00B1               	movwf	___ftmul@f1+2
  4090  0A25  084B               	movf	_fround$1182,w
  4091  0A26  00B2               	movwf	___ftmul@f2
  4092  0A27  084C               	movf	_fround$1182+1,w
  4093  0A28  00B3               	movwf	___ftmul@f2+1
  4094  0A29  084D               	movf	_fround$1182+2,w
  4095  0A2A  00B4               	movwf	___ftmul@f2+2
  4096  0A2B  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4097  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  4099  0A32  082F               	movf	?___ftmul,w
  4100  0A33  00BF               	movwf	?_fround
  4101  0A34  0830               	movf	?___ftmul+1,w
  4102  0A35  00C0               	movwf	?_fround+1
  4103  0A36  0831               	movf	?___ftmul+2,w
  4104  0A37  00C1               	movwf	?_fround+2
  4105  0A38  2A6C               	goto	l358
  4106  0A39                     l3775:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4109  0A39  3000               	movlw	0
  4110  0A3A  00AF               	movwf	___ftmul@f1
  4111  0A3B  3000               	movlw	0
  4112  0A3C  00B0               	movwf	___ftmul@f1+1
  4113  0A3D  303F               	movlw	63
  4114  0A3E  00B1               	movwf	___ftmul@f1+2
  4115  0A3F  3003               	movlw	3
  4116  0A40  00C2               	movwf	??_fround
  4117  0A41  0842               	movf	??_fround,w
  4118  0A42  00AB               	movwf	___bmul@multiplicand
  4119  0A43  084E               	movf	fround@prec,w
  4120  0A44  160A  158A  25CD  120A  158A  	fcall	___bmul
  4121  0A49  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4122  0A4A  0084               	movwf	4
  4123  0A4B  160A  118A  200A  120A  158A  	fcall	stringdir
  4124  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  4125  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  4126  0A52  00B2               	movwf	___ftmul@f2
  4127  0A53  160A  118A  200A  120A  158A  	fcall	stringdir
  4128  0A58  00B3               	movwf	___ftmul@f2+1
  4129  0A59  160A  118A  200A  120A  158A  	fcall	stringdir
  4130  0A5E  00B4               	movwf	___ftmul@f2+2
  4131  0A5F  160A  118A  23CF  120A  158A  	fcall	___ftmul
  4132  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  4133  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  4134  0A66  082F               	movf	?___ftmul,w
  4135  0A67  00BF               	movwf	?_fround
  4136  0A68  0830               	movf	?___ftmul+1,w
  4137  0A69  00C0               	movwf	?_fround+1
  4138  0A6A  0831               	movf	?___ftmul+2,w
  4139  0A6B  00C1               	movwf	?_fround+2
  4140  0A6C                     l358:
  4141  0A6C  0008               	return
  4142  0A6D                     __end_of_fround:
  4143                           
  4144                           	psect	text9
  4145  1F40                     __ptext9:	
  4146 ;; *************** function ___lwmod *****************
  4147 ;; Defined at:
  4148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  divisor         2    3[COMMON] unsigned int 
  4151 ;;  dividend        2    5[COMMON] unsigned int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  counter         1    0[BANK0 ] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2    3[COMMON] unsigned int 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         4       0       0       0       0
  4164 ;;      Locals:         0       1       0       0       0
  4165 ;;      Temps:          1       0       0       0       0
  4166 ;;      Totals:         5       1       0       0       0
  4167 ;;Total ram usage:        6 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    2
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_fround
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function ___lwmod
  4179  1F40                     ___lwmod:
  4180  1F40                     l3707:	
  4181                           ;incstack = 0
  4182                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4183                           
  4184  1F40  0873               	movf	___lwmod@divisor,w
  4185  1F41  0474               	iorwf	___lwmod@divisor+1,w
  4186  1F42  1903               	btfsc	3,2
  4187  1F43  2F45               	goto	u5411
  4188  1F44  2F46               	goto	u5410
  4189  1F45                     u5411:
  4190  1F45  2F77               	goto	l3725
  4191  1F46                     u5410:
  4192  1F46                     l3709:
  4193  1F46  1283               	bcf	3,5	;RP0=0, select bank0
  4194  1F47  1303               	bcf	3,6	;RP1=0, select bank0
  4195  1F48  01A0               	clrf	___lwmod@counter
  4196  1F49  0AA0               	incf	___lwmod@counter,f
  4197  1F4A  2F56               	goto	l3715
  4198  1F4B                     l3711:
  4199  1F4B  3001               	movlw	1
  4200  1F4C                     u5425:
  4201  1F4C  1003               	clrc
  4202  1F4D  0DF3               	rlf	___lwmod@divisor,f
  4203  1F4E  0DF4               	rlf	___lwmod@divisor+1,f
  4204  1F4F  3EFF               	addlw	-1
  4205  1F50  1D03               	skipz
  4206  1F51  2F4C               	goto	u5425
  4207  1F52                     l3713:
  4208  1F52  3001               	movlw	1
  4209  1F53  00F7               	movwf	??___lwmod
  4210  1F54  0877               	movf	??___lwmod,w
  4211  1F55  07A0               	addwf	___lwmod@counter,f
  4212  1F56                     l3715:
  4213  1F56  1FF4               	btfss	___lwmod@divisor+1,7
  4214  1F57  2F59               	goto	u5431
  4215  1F58  2F5A               	goto	u5430
  4216  1F59                     u5431:
  4217  1F59  2F4B               	goto	l3711
  4218  1F5A                     u5430:
  4219  1F5A                     l3717:
  4220  1F5A  0874               	movf	___lwmod@divisor+1,w
  4221  1F5B  0276               	subwf	___lwmod@dividend+1,w
  4222  1F5C  1D03               	skipz
  4223  1F5D  2F60               	goto	u5445
  4224  1F5E  0873               	movf	___lwmod@divisor,w
  4225  1F5F  0275               	subwf	___lwmod@dividend,w
  4226  1F60                     u5445:
  4227  1F60  1C03               	skipc
  4228  1F61  2F63               	goto	u5441
  4229  1F62  2F64               	goto	u5440
  4230  1F63                     u5441:
  4231  1F63  2F6A               	goto	l3721
  4232  1F64                     u5440:
  4233  1F64                     l3719:
  4234  1F64  0873               	movf	___lwmod@divisor,w
  4235  1F65  02F5               	subwf	___lwmod@dividend,f
  4236  1F66  0874               	movf	___lwmod@divisor+1,w
  4237  1F67  1C03               	skipc
  4238  1F68  03F6               	decf	___lwmod@dividend+1,f
  4239  1F69  02F6               	subwf	___lwmod@dividend+1,f
  4240  1F6A                     l3721:
  4241  1F6A  3001               	movlw	1
  4242  1F6B                     u5455:
  4243  1F6B  1003               	clrc
  4244  1F6C  0CF4               	rrf	___lwmod@divisor+1,f
  4245  1F6D  0CF3               	rrf	___lwmod@divisor,f
  4246  1F6E  3EFF               	addlw	-1
  4247  1F6F  1D03               	skipz
  4248  1F70  2F6B               	goto	u5455
  4249  1F71                     l3723:
  4250  1F71  3001               	movlw	1
  4251  1F72  02A0               	subwf	___lwmod@counter,f
  4252  1F73  1D03               	btfss	3,2
  4253  1F74  2F76               	goto	u5461
  4254  1F75  2F77               	goto	u5460
  4255  1F76                     u5461:
  4256  1F76  2F5A               	goto	l3717
  4257  1F77                     u5460:
  4258  1F77                     l3725:
  4259  1F77  0876               	movf	___lwmod@dividend+1,w
  4260  1F78  00F4               	movwf	?___lwmod+1
  4261  1F79  0875               	movf	___lwmod@dividend,w
  4262  1F7A  00F3               	movwf	?___lwmod
  4263  1F7B                     l913:
  4264  1F7B  0008               	return
  4265  1F7C                     __end_of___lwmod:
  4266                           
  4267                           	psect	text10
  4268  1FBA                     __ptext10:	
  4269 ;; *************** function ___lwdiv *****************
  4270 ;; Defined at:
  4271 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  divisor         2    1[BANK0 ] unsigned int 
  4274 ;;  dividend        2    3[BANK0 ] unsigned int 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  quotient        2    7[BANK0 ] unsigned int 
  4277 ;;  counter         1    6[BANK0 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    1[BANK0 ] unsigned int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4287 ;;      Params:         0       4       0       0       0
  4288 ;;      Locals:         0       3       0       0       0
  4289 ;;      Temps:          0       1       0       0       0
  4290 ;;      Totals:         0       8       0       0       0
  4291 ;;Total ram usage:        8 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    2
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_fround
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function ___lwdiv
  4303  1FBA                     ___lwdiv:
  4304  1FBA                     l3681:	
  4305                           ;incstack = 0
  4306                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4307                           
  4308  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  4309  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  4310  1FBC  01A7               	clrf	___lwdiv@quotient
  4311  1FBD  01A8               	clrf	___lwdiv@quotient+1
  4312  1FBE                     l3683:
  4313  1FBE  0821               	movf	___lwdiv@divisor,w
  4314  1FBF  0422               	iorwf	___lwdiv@divisor+1,w
  4315  1FC0  1903               	btfsc	3,2
  4316  1FC1  2FC3               	goto	u5341
  4317  1FC2  2FC4               	goto	u5340
  4318  1FC3                     u5341:
  4319  1FC3  2FFB               	goto	l3703
  4320  1FC4                     u5340:
  4321  1FC4                     l3685:
  4322  1FC4  01A6               	clrf	___lwdiv@counter
  4323  1FC5  0AA6               	incf	___lwdiv@counter,f
  4324  1FC6  2FD2               	goto	l3691
  4325  1FC7                     l3687:
  4326  1FC7  3001               	movlw	1
  4327  1FC8                     u5355:
  4328  1FC8  1003               	clrc
  4329  1FC9  0DA1               	rlf	___lwdiv@divisor,f
  4330  1FCA  0DA2               	rlf	___lwdiv@divisor+1,f
  4331  1FCB  3EFF               	addlw	-1
  4332  1FCC  1D03               	skipz
  4333  1FCD  2FC8               	goto	u5355
  4334  1FCE                     l3689:
  4335  1FCE  3001               	movlw	1
  4336  1FCF  00A5               	movwf	??___lwdiv
  4337  1FD0  0825               	movf	??___lwdiv,w
  4338  1FD1  07A6               	addwf	___lwdiv@counter,f
  4339  1FD2                     l3691:
  4340  1FD2  1FA2               	btfss	___lwdiv@divisor+1,7
  4341  1FD3  2FD5               	goto	u5361
  4342  1FD4  2FD6               	goto	u5360
  4343  1FD5                     u5361:
  4344  1FD5  2FC7               	goto	l3687
  4345  1FD6                     u5360:
  4346  1FD6                     l3693:
  4347  1FD6  3001               	movlw	1
  4348  1FD7                     u5375:
  4349  1FD7  1003               	clrc
  4350  1FD8  0DA7               	rlf	___lwdiv@quotient,f
  4351  1FD9  0DA8               	rlf	___lwdiv@quotient+1,f
  4352  1FDA  3EFF               	addlw	-1
  4353  1FDB  1D03               	skipz
  4354  1FDC  2FD7               	goto	u5375
  4355  1FDD  0822               	movf	___lwdiv@divisor+1,w
  4356  1FDE  0224               	subwf	___lwdiv@dividend+1,w
  4357  1FDF  1D03               	skipz
  4358  1FE0  2FE3               	goto	u5385
  4359  1FE1  0821               	movf	___lwdiv@divisor,w
  4360  1FE2  0223               	subwf	___lwdiv@dividend,w
  4361  1FE3                     u5385:
  4362  1FE3  1C03               	skipc
  4363  1FE4  2FE6               	goto	u5381
  4364  1FE5  2FE7               	goto	u5380
  4365  1FE6                     u5381:
  4366  1FE6  2FEE               	goto	l3699
  4367  1FE7                     u5380:
  4368  1FE7                     l3695:
  4369  1FE7  0821               	movf	___lwdiv@divisor,w
  4370  1FE8  02A3               	subwf	___lwdiv@dividend,f
  4371  1FE9  0822               	movf	___lwdiv@divisor+1,w
  4372  1FEA  1C03               	skipc
  4373  1FEB  03A4               	decf	___lwdiv@dividend+1,f
  4374  1FEC  02A4               	subwf	___lwdiv@dividend+1,f
  4375  1FED                     l3697:
  4376  1FED  1427               	bsf	___lwdiv@quotient,0
  4377  1FEE                     l3699:
  4378  1FEE  3001               	movlw	1
  4379  1FEF                     u5395:
  4380  1FEF  1003               	clrc
  4381  1FF0  0CA2               	rrf	___lwdiv@divisor+1,f
  4382  1FF1  0CA1               	rrf	___lwdiv@divisor,f
  4383  1FF2  3EFF               	addlw	-1
  4384  1FF3  1D03               	skipz
  4385  1FF4  2FEF               	goto	u5395
  4386  1FF5                     l3701:
  4387  1FF5  3001               	movlw	1
  4388  1FF6  02A6               	subwf	___lwdiv@counter,f
  4389  1FF7  1D03               	btfss	3,2
  4390  1FF8  2FFA               	goto	u5401
  4391  1FF9  2FFB               	goto	u5400
  4392  1FFA                     u5401:
  4393  1FFA  2FD6               	goto	l3693
  4394  1FFB                     u5400:
  4395  1FFB                     l3703:
  4396  1FFB  0828               	movf	___lwdiv@quotient+1,w
  4397  1FFC  00A2               	movwf	?___lwdiv+1
  4398  1FFD  0827               	movf	___lwdiv@quotient,w
  4399  1FFE  00A1               	movwf	?___lwdiv
  4400  1FFF                     l903:
  4401  1FFF  0008               	return
  4402  2000                     __end_of___lwdiv:
  4403                           
  4404                           	psect	text11
  4405  13CF                     __ptext11:	
  4406 ;; *************** function ___ftmul *****************
  4407 ;; Defined at:
  4408 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  f1              3   15[BANK0 ] float 
  4411 ;;  f2              3   18[BANK0 ] float 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  4414 ;;  sign            1   30[BANK0 ] unsigned char 
  4415 ;;  cntr            1   29[BANK0 ] unsigned char 
  4416 ;;  exp             1   25[BANK0 ] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  3   15[BANK0 ] float 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         0       6       0       0       0
  4427 ;;      Locals:         0       6       0       0       0
  4428 ;;      Temps:          0       4       0       0       0
  4429 ;;      Totals:         0      16       0       0       0
  4430 ;;Total ram usage:       16 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    3
  4433 ;; This function calls:
  4434 ;;		___ftpack
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;;		_fround
  4438 ;;		_scale
  4439 ;;		_sprintf
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function ___ftmul
  4445  13CF                     ___ftmul:
  4446  13CF                     l3631:	
  4447                           ;incstack = 0
  4448                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4449                           
  4450  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  4451  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  4452  13D1  082F               	movf	___ftmul@f1,w
  4453  13D2  00B5               	movwf	??___ftmul
  4454  13D3  0830               	movf	___ftmul@f1+1,w
  4455  13D4  00B6               	movwf	??___ftmul+1
  4456  13D5  0831               	movf	___ftmul@f1+2,w
  4457  13D6  00B7               	movwf	??___ftmul+2
  4458  13D7  1003               	clrc
  4459  13D8  0D36               	rlf	??___ftmul+1,w
  4460  13D9  0D37               	rlf	??___ftmul+2,w
  4461  13DA  00B8               	movwf	??___ftmul+3
  4462  13DB  0838               	movf	??___ftmul+3,w
  4463  13DC  00B9               	movwf	___ftmul@exp
  4464  13DD  0839               	movf	___ftmul@exp,w
  4465  13DE  1D03               	btfss	3,2
  4466  13DF  2BE1               	goto	u5201
  4467  13E0  2BE2               	goto	u5200
  4468  13E1                     u5201:
  4469  13E1  2BE9               	goto	l3637
  4470  13E2                     u5200:
  4471  13E2                     l3633:
  4472  13E2  3000               	movlw	0
  4473  13E3  00AF               	movwf	?___ftmul
  4474  13E4  3000               	movlw	0
  4475  13E5  00B0               	movwf	?___ftmul+1
  4476  13E6  3000               	movlw	0
  4477  13E7  00B1               	movwf	?___ftmul+2
  4478  13E8  2CB3               	goto	l770
  4479  13E9                     l3637:
  4480  13E9  0832               	movf	___ftmul@f2,w
  4481  13EA  00B5               	movwf	??___ftmul
  4482  13EB  0833               	movf	___ftmul@f2+1,w
  4483  13EC  00B6               	movwf	??___ftmul+1
  4484  13ED  0834               	movf	___ftmul@f2+2,w
  4485  13EE  00B7               	movwf	??___ftmul+2
  4486  13EF  1003               	clrc
  4487  13F0  0D36               	rlf	??___ftmul+1,w
  4488  13F1  0D37               	rlf	??___ftmul+2,w
  4489  13F2  00B8               	movwf	??___ftmul+3
  4490  13F3  0838               	movf	??___ftmul+3,w
  4491  13F4  00BE               	movwf	___ftmul@sign
  4492  13F5  083E               	movf	___ftmul@sign,w
  4493  13F6  1D03               	btfss	3,2
  4494  13F7  2BF9               	goto	u5211
  4495  13F8  2BFA               	goto	u5210
  4496  13F9                     u5211:
  4497  13F9  2C01               	goto	l3643
  4498  13FA                     u5210:
  4499  13FA                     l3639:
  4500  13FA  3000               	movlw	0
  4501  13FB  00AF               	movwf	?___ftmul
  4502  13FC  3000               	movlw	0
  4503  13FD  00B0               	movwf	?___ftmul+1
  4504  13FE  3000               	movlw	0
  4505  13FF  00B1               	movwf	?___ftmul+2
  4506  1400  2CB3               	goto	l770
  4507  1401                     l3643:
  4508  1401  083E               	movf	___ftmul@sign,w
  4509  1402  3E7B               	addlw	123
  4510  1403  00B5               	movwf	??___ftmul
  4511  1404  0835               	movf	??___ftmul,w
  4512  1405  07B9               	addwf	___ftmul@exp,f
  4513  1406  082F               	movf	___ftmul@f1,w
  4514  1407  00B5               	movwf	??___ftmul
  4515  1408  0830               	movf	___ftmul@f1+1,w
  4516  1409  00B6               	movwf	??___ftmul+1
  4517  140A  0831               	movf	___ftmul@f1+2,w
  4518  140B  00B7               	movwf	??___ftmul+2
  4519  140C  3010               	movlw	16
  4520  140D                     u5225:
  4521  140D  1003               	clrc
  4522  140E  0CB7               	rrf	??___ftmul+2,f
  4523  140F  0CB6               	rrf	??___ftmul+1,f
  4524  1410  0CB5               	rrf	??___ftmul,f
  4525  1411                     u5220:
  4526  1411  3EFF               	addlw	-1
  4527  1412  1D03               	skipz
  4528  1413  2C0D               	goto	u5225
  4529  1414  0835               	movf	??___ftmul,w
  4530  1415  00B8               	movwf	??___ftmul+3
  4531  1416  0838               	movf	??___ftmul+3,w
  4532  1417  00BE               	movwf	___ftmul@sign
  4533  1418  0832               	movf	___ftmul@f2,w
  4534  1419  00B5               	movwf	??___ftmul
  4535  141A  0833               	movf	___ftmul@f2+1,w
  4536  141B  00B6               	movwf	??___ftmul+1
  4537  141C  0834               	movf	___ftmul@f2+2,w
  4538  141D  00B7               	movwf	??___ftmul+2
  4539  141E  3010               	movlw	16
  4540  141F                     u5235:
  4541  141F  1003               	clrc
  4542  1420  0CB7               	rrf	??___ftmul+2,f
  4543  1421  0CB6               	rrf	??___ftmul+1,f
  4544  1422  0CB5               	rrf	??___ftmul,f
  4545  1423                     u5230:
  4546  1423  3EFF               	addlw	-1
  4547  1424  1D03               	skipz
  4548  1425  2C1F               	goto	u5235
  4549  1426  0835               	movf	??___ftmul,w
  4550  1427  00B8               	movwf	??___ftmul+3
  4551  1428  0838               	movf	??___ftmul+3,w
  4552  1429  06BE               	xorwf	___ftmul@sign,f
  4553  142A  3080               	movlw	128
  4554  142B  00B5               	movwf	??___ftmul
  4555  142C  0835               	movf	??___ftmul,w
  4556  142D  05BE               	andwf	___ftmul@sign,f
  4557  142E                     l3645:
  4558  142E  17B0               	bsf	___ftmul@f1+1,7
  4559  142F                     l3647:
  4560  142F  17B3               	bsf	___ftmul@f2+1,7
  4561  1430                     l3649:
  4562  1430  30FF               	movlw	255
  4563  1431  05B2               	andwf	___ftmul@f2,f
  4564  1432  30FF               	movlw	255
  4565  1433  05B3               	andwf	___ftmul@f2+1,f
  4566  1434  3000               	movlw	0
  4567  1435  05B4               	andwf	___ftmul@f2+2,f
  4568  1436                     l3651:
  4569  1436  3000               	movlw	0
  4570  1437  00BA               	movwf	___ftmul@f3_as_product
  4571  1438  3000               	movlw	0
  4572  1439  00BB               	movwf	___ftmul@f3_as_product+1
  4573  143A  3000               	movlw	0
  4574  143B  00BC               	movwf	___ftmul@f3_as_product+2
  4575  143C                     l3653:
  4576  143C  3007               	movlw	7
  4577  143D  00B5               	movwf	??___ftmul
  4578  143E  0835               	movf	??___ftmul,w
  4579  143F  00BD               	movwf	___ftmul@cntr
  4580  1440                     l3655:
  4581  1440  1C2F               	btfss	___ftmul@f1,0
  4582  1441  2C43               	goto	u5241
  4583  1442  2C44               	goto	u5240
  4584  1443                     u5241:
  4585  1443  2C54               	goto	l3659
  4586  1444                     u5240:
  4587  1444                     l3657:
  4588  1444  0832               	movf	___ftmul@f2,w
  4589  1445  07BA               	addwf	___ftmul@f3_as_product,f
  4590  1446  0833               	movf	___ftmul@f2+1,w
  4591  1447  1103               	clrz
  4592  1448  1803               	skipnc
  4593  1449  0A33               	incf	___ftmul@f2+1,w
  4594  144A  1903               	skipnz
  4595  144B  2C4D               	goto	u5251
  4596  144C  07BB               	addwf	___ftmul@f3_as_product+1,f
  4597  144D                     u5251:
  4598  144D  0834               	movf	___ftmul@f2+2,w
  4599  144E  1103               	clrz
  4600  144F  1803               	skipnc
  4601  1450  0A34               	incf	___ftmul@f2+2,w
  4602  1451  1903               	skipnz
  4603  1452  2C54               	goto	u5252
  4604  1453  07BC               	addwf	___ftmul@f3_as_product+2,f
  4605  1454                     u5252:
  4606  1454                     l3659:
  4607  1454  3001               	movlw	1
  4608  1455                     u5265:
  4609  1455  1003               	clrc
  4610  1456  0CB1               	rrf	___ftmul@f1+2,f
  4611  1457  0CB0               	rrf	___ftmul@f1+1,f
  4612  1458  0CAF               	rrf	___ftmul@f1,f
  4613  1459  3EFF               	addlw	-1
  4614  145A  1D03               	skipz
  4615  145B  2C55               	goto	u5265
  4616  145C                     l3661:
  4617  145C  3001               	movlw	1
  4618  145D                     u5275:
  4619  145D  1003               	clrc
  4620  145E  0DB2               	rlf	___ftmul@f2,f
  4621  145F  0DB3               	rlf	___ftmul@f2+1,f
  4622  1460  0DB4               	rlf	___ftmul@f2+2,f
  4623  1461  3EFF               	addlw	-1
  4624  1462  1D03               	skipz
  4625  1463  2C5D               	goto	u5275
  4626  1464                     l3663:
  4627  1464  3001               	movlw	1
  4628  1465  02BD               	subwf	___ftmul@cntr,f
  4629  1466  1D03               	btfss	3,2
  4630  1467  2C69               	goto	u5281
  4631  1468  2C6A               	goto	u5280
  4632  1469                     u5281:
  4633  1469  2C40               	goto	l3655
  4634  146A                     u5280:
  4635  146A                     l3665:
  4636  146A  3009               	movlw	9
  4637  146B  00B5               	movwf	??___ftmul
  4638  146C  0835               	movf	??___ftmul,w
  4639  146D  00BD               	movwf	___ftmul@cntr
  4640  146E                     l3667:
  4641  146E  1C2F               	btfss	___ftmul@f1,0
  4642  146F  2C71               	goto	u5291
  4643  1470  2C72               	goto	u5290
  4644  1471                     u5291:
  4645  1471  2C82               	goto	l3671
  4646  1472                     u5290:
  4647  1472                     l3669:
  4648  1472  0832               	movf	___ftmul@f2,w
  4649  1473  07BA               	addwf	___ftmul@f3_as_product,f
  4650  1474  0833               	movf	___ftmul@f2+1,w
  4651  1475  1103               	clrz
  4652  1476  1803               	skipnc
  4653  1477  0A33               	incf	___ftmul@f2+1,w
  4654  1478  1903               	skipnz
  4655  1479  2C7B               	goto	u5301
  4656  147A  07BB               	addwf	___ftmul@f3_as_product+1,f
  4657  147B                     u5301:
  4658  147B  0834               	movf	___ftmul@f2+2,w
  4659  147C  1103               	clrz
  4660  147D  1803               	skipnc
  4661  147E  0A34               	incf	___ftmul@f2+2,w
  4662  147F  1903               	skipnz
  4663  1480  2C82               	goto	u5302
  4664  1481  07BC               	addwf	___ftmul@f3_as_product+2,f
  4665  1482                     u5302:
  4666  1482                     l3671:
  4667  1482  3001               	movlw	1
  4668  1483                     u5315:
  4669  1483  1003               	clrc
  4670  1484  0CB1               	rrf	___ftmul@f1+2,f
  4671  1485  0CB0               	rrf	___ftmul@f1+1,f
  4672  1486  0CAF               	rrf	___ftmul@f1,f
  4673  1487  3EFF               	addlw	-1
  4674  1488  1D03               	skipz
  4675  1489  2C83               	goto	u5315
  4676  148A                     l3673:
  4677  148A  3001               	movlw	1
  4678  148B                     u5325:
  4679  148B  1003               	clrc
  4680  148C  0CBC               	rrf	___ftmul@f3_as_product+2,f
  4681  148D  0CBB               	rrf	___ftmul@f3_as_product+1,f
  4682  148E  0CBA               	rrf	___ftmul@f3_as_product,f
  4683  148F  3EFF               	addlw	-1
  4684  1490  1D03               	skipz
  4685  1491  2C8B               	goto	u5325
  4686  1492                     l3675:
  4687  1492  3001               	movlw	1
  4688  1493  02BD               	subwf	___ftmul@cntr,f
  4689  1494  1D03               	btfss	3,2
  4690  1495  2C97               	goto	u5331
  4691  1496  2C98               	goto	u5330
  4692  1497                     u5331:
  4693  1497  2C6E               	goto	l3667
  4694  1498                     u5330:
  4695  1498                     l3677:
  4696  1498  083A               	movf	___ftmul@f3_as_product,w
  4697  1499  00F3               	movwf	___ftpack@arg
  4698  149A  083B               	movf	___ftmul@f3_as_product+1,w
  4699  149B  00F4               	movwf	___ftpack@arg+1
  4700  149C  083C               	movf	___ftmul@f3_as_product+2,w
  4701  149D  00F5               	movwf	___ftpack@arg+2
  4702  149E  0839               	movf	___ftmul@exp,w
  4703  149F  00B5               	movwf	??___ftmul
  4704  14A0  0835               	movf	??___ftmul,w
  4705  14A1  00F6               	movwf	___ftpack@exp
  4706  14A2  083E               	movf	___ftmul@sign,w
  4707  14A3  00B6               	movwf	??___ftmul+1
  4708  14A4  0836               	movf	??___ftmul+1,w
  4709  14A5  00F7               	movwf	___ftpack@sign
  4710  14A6  160A  118A  22C1  160A  118A  	fcall	___ftpack
  4711  14AB  0873               	movf	?___ftpack,w
  4712  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  4713  14AD  1303               	bcf	3,6	;RP1=0, select bank0
  4714  14AE  00AF               	movwf	?___ftmul
  4715  14AF  0874               	movf	?___ftpack+1,w
  4716  14B0  00B0               	movwf	?___ftmul+1
  4717  14B1  0875               	movf	?___ftpack+2,w
  4718  14B2  00B1               	movwf	?___ftmul+2
  4719  14B3                     l770:
  4720  14B3  0008               	return
  4721  14B4                     __end_of___ftmul:
  4722                           
  4723                           	psect	text12
  4724  1DCD                     __ptext12:	
  4725 ;; *************** function ___bmul *****************
  4726 ;; Defined at:
  4727 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  multiplier      1    wreg     unsigned char 
  4730 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4733 ;;  product         1   13[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      unsigned char 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4743 ;;      Params:         0       1       0       0       0
  4744 ;;      Locals:         0       2       0       0       0
  4745 ;;      Temps:          0       1       0       0       0
  4746 ;;      Totals:         0       4       0       0       0
  4747 ;;Total ram usage:        4 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    2
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_fround
  4754 ;;		_scale
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function ___bmul
  4760  1DCD                     ___bmul:
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4764                           ;___bmul@multiplier stored from wreg
  4765  1DCD  1283               	bcf	3,5	;RP0=0, select bank0
  4766  1DCE  1303               	bcf	3,6	;RP1=0, select bank0
  4767  1DCF  00AE               	movwf	___bmul@multiplier
  4768  1DD0                     l2255:
  4769  1DD0  01AD               	clrf	___bmul@product
  4770  1DD1                     l2257:
  4771  1DD1  1C2E               	btfss	___bmul@multiplier,0
  4772  1DD2  2DD4               	goto	u2511
  4773  1DD3  2DD5               	goto	u2510
  4774  1DD4                     u2511:
  4775  1DD4  2DD9               	goto	l2261
  4776  1DD5                     u2510:
  4777  1DD5                     l2259:
  4778  1DD5  082B               	movf	___bmul@multiplicand,w
  4779  1DD6  00AC               	movwf	??___bmul
  4780  1DD7  082C               	movf	??___bmul,w
  4781  1DD8  07AD               	addwf	___bmul@product,f
  4782  1DD9                     l2261:
  4783  1DD9  1003               	clrc
  4784  1DDA  0DAB               	rlf	___bmul@multiplicand,f
  4785  1DDB                     l2263:
  4786  1DDB  1003               	clrc
  4787  1DDC  0CAE               	rrf	___bmul@multiplier,f
  4788  1DDD  082E               	movf	___bmul@multiplier,w
  4789  1DDE  1D03               	btfss	3,2
  4790  1DDF  2DE1               	goto	u2521
  4791  1DE0  2DE2               	goto	u2520
  4792  1DE1                     u2521:
  4793  1DE1  2DD1               	goto	l2257
  4794  1DE2                     u2520:
  4795  1DE2                     l2265:
  4796  1DE2  082D               	movf	___bmul@product,w
  4797  1DE3                     l487:
  4798  1DE3  0008               	return
  4799  1DE4                     __end_of___bmul:
  4800                           
  4801                           	psect	text13
  4802  0807                     __ptext13:	
  4803 ;; *************** function __tdiv_to_l_ *****************
  4804 ;; Defined at:
  4805 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  f1              3    0[BANK0 ] float 
  4808 ;;  f2              3    3[BANK0 ] float 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  quot            4    6[BANK0 ] unsigned long 
  4811 ;;  exp1            1   11[BANK0 ] unsigned char 
  4812 ;;  cntr            1   10[BANK0 ] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  4    0[BANK0 ] unsigned long 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4822 ;;      Params:         0       6       0       0       0
  4823 ;;      Locals:         0       6       0       0       0
  4824 ;;      Temps:          4       0       0       0       0
  4825 ;;      Totals:         4      12       0       0       0
  4826 ;;Total ram usage:       16 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    2
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_sprintf
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function __tdiv_to_l_
  4838  0807                     __tdiv_to_l_:
  4839  0807                     l3819:	
  4840                           ;incstack = 0
  4841                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4842                           
  4843  0807  1283               	bcf	3,5	;RP0=0, select bank0
  4844  0808  1303               	bcf	3,6	;RP1=0, select bank0
  4845  0809  0820               	movf	__tdiv_to_l_@f1,w
  4846  080A  00F3               	movwf	??__tdiv_to_l_
  4847  080B  0821               	movf	__tdiv_to_l_@f1+1,w
  4848  080C  00F4               	movwf	??__tdiv_to_l_+1
  4849  080D  0822               	movf	__tdiv_to_l_@f1+2,w
  4850  080E  00F5               	movwf	??__tdiv_to_l_+2
  4851  080F  1003               	clrc
  4852  0810  0D74               	rlf	??__tdiv_to_l_+1,w
  4853  0811  0D75               	rlf	??__tdiv_to_l_+2,w
  4854  0812  00F6               	movwf	??__tdiv_to_l_+3
  4855  0813  0876               	movf	??__tdiv_to_l_+3,w
  4856  0814  00AB               	movwf	__tdiv_to_l_@exp1
  4857  0815  082B               	movf	__tdiv_to_l_@exp1,w
  4858  0816  1D03               	btfss	3,2
  4859  0817  2819               	goto	u5541
  4860  0818  281A               	goto	u5540
  4861  0819                     u5541:
  4862  0819  2823               	goto	l3825
  4863  081A                     u5540:
  4864  081A                     l3821:
  4865  081A  3000               	movlw	0
  4866  081B  00A3               	movwf	?__tdiv_to_l_+3
  4867  081C  3000               	movlw	0
  4868  081D  00A2               	movwf	?__tdiv_to_l_+2
  4869  081E  3000               	movlw	0
  4870  081F  00A1               	movwf	?__tdiv_to_l_+1
  4871  0820  3000               	movlw	0
  4872  0821  00A0               	movwf	?__tdiv_to_l_
  4873  0822  28C3               	goto	l746
  4874  0823                     l3825:
  4875  0823  0823               	movf	__tdiv_to_l_@f2,w
  4876  0824  00F3               	movwf	??__tdiv_to_l_
  4877  0825  0824               	movf	__tdiv_to_l_@f2+1,w
  4878  0826  00F4               	movwf	??__tdiv_to_l_+1
  4879  0827  0825               	movf	__tdiv_to_l_@f2+2,w
  4880  0828  00F5               	movwf	??__tdiv_to_l_+2
  4881  0829  1003               	clrc
  4882  082A  0D74               	rlf	??__tdiv_to_l_+1,w
  4883  082B  0D75               	rlf	??__tdiv_to_l_+2,w
  4884  082C  00F6               	movwf	??__tdiv_to_l_+3
  4885  082D  0876               	movf	??__tdiv_to_l_+3,w
  4886  082E  00AA               	movwf	__tdiv_to_l_@cntr
  4887  082F  082A               	movf	__tdiv_to_l_@cntr,w
  4888  0830  1D03               	btfss	3,2
  4889  0831  2833               	goto	u5551
  4890  0832  2834               	goto	u5550
  4891  0833                     u5551:
  4892  0833  2835               	goto	l747
  4893  0834                     u5550:
  4894  0834  281A               	goto	l3821
  4895  0835                     l747:
  4896  0835  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4897  0836                     l3831:
  4898  0836  30FF               	movlw	255
  4899  0837  05A0               	andwf	__tdiv_to_l_@f1,f
  4900  0838  30FF               	movlw	255
  4901  0839  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4902  083A  3000               	movlw	0
  4903  083B  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4904  083C                     l3833:
  4905  083C  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4906  083D  30FF               	movlw	255
  4907  083E  05A3               	andwf	__tdiv_to_l_@f2,f
  4908  083F  30FF               	movlw	255
  4909  0840  05A4               	andwf	__tdiv_to_l_@f2+1,f
  4910  0841  3000               	movlw	0
  4911  0842  05A5               	andwf	__tdiv_to_l_@f2+2,f
  4912  0843  3000               	movlw	0
  4913  0844  00A9               	movwf	__tdiv_to_l_@quot+3
  4914  0845  3000               	movlw	0
  4915  0846  00A8               	movwf	__tdiv_to_l_@quot+2
  4916  0847  3000               	movlw	0
  4917  0848  00A7               	movwf	__tdiv_to_l_@quot+1
  4918  0849  3000               	movlw	0
  4919  084A  00A6               	movwf	__tdiv_to_l_@quot
  4920  084B                     l3835:
  4921  084B  307F               	movlw	127
  4922  084C  02AB               	subwf	__tdiv_to_l_@exp1,f
  4923  084D                     l3837:
  4924  084D  3098               	movlw	152
  4925  084E  072A               	addwf	__tdiv_to_l_@cntr,w
  4926  084F  00F3               	movwf	??__tdiv_to_l_
  4927  0850  0873               	movf	??__tdiv_to_l_,w
  4928  0851  02AB               	subwf	__tdiv_to_l_@exp1,f
  4929  0852  3018               	movlw	24
  4930  0853  00F3               	movwf	??__tdiv_to_l_
  4931  0854  0873               	movf	??__tdiv_to_l_,w
  4932  0855  00AA               	movwf	__tdiv_to_l_@cntr
  4933  0856                     l3839:
  4934  0856  3001               	movlw	1
  4935  0857  00F3               	movwf	??__tdiv_to_l_
  4936  0858                     u5565:
  4937  0858  1003               	clrc
  4938  0859  0DA6               	rlf	__tdiv_to_l_@quot,f
  4939  085A  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4940  085B  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4941  085C  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4942  085D  0BF3               	decfsz	??__tdiv_to_l_,f
  4943  085E  2858               	goto	u5565
  4944  085F                     l3841:
  4945  085F  0825               	movf	__tdiv_to_l_@f2+2,w
  4946  0860  0222               	subwf	__tdiv_to_l_@f1+2,w
  4947  0861  1D03               	skipz
  4948  0862  2869               	goto	u5575
  4949  0863  0824               	movf	__tdiv_to_l_@f2+1,w
  4950  0864  0221               	subwf	__tdiv_to_l_@f1+1,w
  4951  0865  1D03               	skipz
  4952  0866  2869               	goto	u5575
  4953  0867  0823               	movf	__tdiv_to_l_@f2,w
  4954  0868  0220               	subwf	__tdiv_to_l_@f1,w
  4955  0869                     u5575:
  4956  0869  1C03               	skipc
  4957  086A  286C               	goto	u5571
  4958  086B  286D               	goto	u5570
  4959  086C                     u5571:
  4960  086C  2878               	goto	l3847
  4961  086D                     u5570:
  4962  086D                     l3843:
  4963  086D  0823               	movf	__tdiv_to_l_@f2,w
  4964  086E  02A0               	subwf	__tdiv_to_l_@f1,f
  4965  086F  0824               	movf	__tdiv_to_l_@f2+1,w
  4966  0870  1C03               	skipc
  4967  0871  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4968  0872  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4969  0873  0825               	movf	__tdiv_to_l_@f2+2,w
  4970  0874  1C03               	skipc
  4971  0875  0A25               	incf	__tdiv_to_l_@f2+2,w
  4972  0876  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4973  0877                     l3845:
  4974  0877  1426               	bsf	__tdiv_to_l_@quot,0
  4975  0878                     l3847:
  4976  0878  3001               	movlw	1
  4977  0879                     u5585:
  4978  0879  1003               	clrc
  4979  087A  0DA0               	rlf	__tdiv_to_l_@f1,f
  4980  087B  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4981  087C  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4982  087D  3EFF               	addlw	-1
  4983  087E  1D03               	skipz
  4984  087F  2879               	goto	u5585
  4985  0880                     l3849:
  4986  0880  3001               	movlw	1
  4987  0881  02AA               	subwf	__tdiv_to_l_@cntr,f
  4988  0882  1D03               	btfss	3,2
  4989  0883  2885               	goto	u5591
  4990  0884  2886               	goto	u5590
  4991  0885                     u5591:
  4992  0885  2856               	goto	l3839
  4993  0886                     u5590:
  4994  0886                     l750:
  4995  0886  1FAB               	btfss	__tdiv_to_l_@exp1,7
  4996  0887  2889               	goto	u5601
  4997  0888  288A               	goto	u5600
  4998  0889                     u5601:
  4999  0889  28A4               	goto	l3859
  5000  088A                     u5600:
  5001  088A                     l3851:
  5002  088A  082B               	movf	__tdiv_to_l_@exp1,w
  5003  088B  3A80               	xorlw	128
  5004  088C  3E97               	addlw	151
  5005  088D  1803               	skipnc
  5006  088E  2890               	goto	u5611
  5007  088F  2891               	goto	u5610
  5008  0890                     u5611:
  5009  0890  2892               	goto	l3857
  5010  0891                     u5610:
  5011  0891  281A               	goto	l3821
  5012  0892                     l3857:
  5013  0892  3001               	movlw	1
  5014  0893                     u5625:
  5015  0893  1003               	clrc
  5016  0894  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  5017  0895  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  5018  0896  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  5019  0897  0CA6               	rrf	__tdiv_to_l_@quot,f
  5020  0898  3EFF               	addlw	-1
  5021  0899  1D03               	skipz
  5022  089A  2893               	goto	u5625
  5023  089B  3001               	movlw	1
  5024  089C  00F3               	movwf	??__tdiv_to_l_
  5025  089D  0873               	movf	??__tdiv_to_l_,w
  5026  089E  07AB               	addwf	__tdiv_to_l_@exp1,f
  5027  089F  1D03               	btfss	3,2
  5028  08A0  28A2               	goto	u5631
  5029  08A1  28A3               	goto	u5630
  5030  08A2                     u5631:
  5031  08A2  2892               	goto	l3857
  5032  08A3                     u5630:
  5033  08A3  28BB               	goto	l3867
  5034  08A4                     l3859:
  5035  08A4  3018               	movlw	24
  5036  08A5  022B               	subwf	__tdiv_to_l_@exp1,w
  5037  08A6  1C03               	skipc
  5038  08A7  28A9               	goto	u5641
  5039  08A8  28AA               	goto	u5640
  5040  08A9                     u5641:
  5041  08A9  28B6               	goto	l757
  5042  08AA                     u5640:
  5043  08AA  281A               	goto	l3821
  5044  08AB                     l3865:
  5045  08AB  3001               	movlw	1
  5046  08AC  00F3               	movwf	??__tdiv_to_l_
  5047  08AD                     u5655:
  5048  08AD  1003               	clrc
  5049  08AE  0DA6               	rlf	__tdiv_to_l_@quot,f
  5050  08AF  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  5051  08B0  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  5052  08B1  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  5053  08B2  0BF3               	decfsz	??__tdiv_to_l_,f
  5054  08B3  28AD               	goto	u5655
  5055  08B4  3001               	movlw	1
  5056  08B5  02AB               	subwf	__tdiv_to_l_@exp1,f
  5057  08B6                     l757:
  5058  08B6  082B               	movf	__tdiv_to_l_@exp1,w
  5059  08B7  1D03               	btfss	3,2
  5060  08B8  28BA               	goto	u5661
  5061  08B9  28BB               	goto	u5660
  5062  08BA                     u5661:
  5063  08BA  28AB               	goto	l3865
  5064  08BB                     u5660:
  5065  08BB                     l3867:
  5066  08BB  0829               	movf	__tdiv_to_l_@quot+3,w
  5067  08BC  00A3               	movwf	?__tdiv_to_l_+3
  5068  08BD  0828               	movf	__tdiv_to_l_@quot+2,w
  5069  08BE  00A2               	movwf	?__tdiv_to_l_+2
  5070  08BF  0827               	movf	__tdiv_to_l_@quot+1,w
  5071  08C0  00A1               	movwf	?__tdiv_to_l_+1
  5072  08C1  0826               	movf	__tdiv_to_l_@quot,w
  5073  08C2  00A0               	movwf	?__tdiv_to_l_
  5074  08C3                     l746:
  5075  08C3  0008               	return
  5076  08C4                     __end_of__tdiv_to_l_:
  5077                           
  5078                           	psect	text14
  5079  159D                     __ptext14:	
  5080 ;; *************** function __div_to_l_ *****************
  5081 ;; Defined at:
  5082 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  f1              3    0[BANK0 ] unsigned long 
  5085 ;;  f2              3    3[BANK0 ] unsigned long 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  quot            4   14[BANK0 ] unsigned long 
  5088 ;;  exp1            1   19[BANK0 ] unsigned char 
  5089 ;;  cntr            1   18[BANK0 ] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  4    0[BANK0 ] unsigned long 
  5092 ;; Registers used:
  5093 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         0       6       0       0       0
  5100 ;;      Locals:         0       6       0       0       0
  5101 ;;      Temps:          0       8       0       0       0
  5102 ;;      Totals:         0      20       0       0       0
  5103 ;;Total ram usage:       20 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    2
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_sprintf
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           
  5114                           ;psect for function __div_to_l_
  5115  159D                     __div_to_l_:
  5116  159D                     l3871:	
  5117                           ;incstack = 0
  5118                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5119                           
  5120  159D  3020               	movlw	low (__div_to_l_@f1| 0)
  5121  159E  0084               	movwf	4
  5122  159F  1383               	bcf	3,7	;select IRP bank0
  5123  15A0  0800               	movf	0,w
  5124  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  5125  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  5126  15A3  00A6               	movwf	??__div_to_l_
  5127  15A4  0A84               	incf	4,f
  5128  15A5  0800               	movf	0,w
  5129  15A6  00A7               	movwf	??__div_to_l_+1
  5130  15A7  0A84               	incf	4,f
  5131  15A8  0800               	movf	0,w
  5132  15A9  00A8               	movwf	??__div_to_l_+2
  5133  15AA  0A84               	incf	4,f
  5134  15AB  0800               	movf	0,w
  5135  15AC  00A9               	movwf	??__div_to_l_+3
  5136  15AD  1003               	clrc
  5137  15AE  0D28               	rlf	??__div_to_l_+2,w
  5138  15AF  0D29               	rlf	??__div_to_l_+3,w
  5139  15B0  00AA               	movwf	??__div_to_l_+4
  5140  15B1  082A               	movf	??__div_to_l_+4,w
  5141  15B2  00B3               	movwf	__div_to_l_@exp1
  5142  15B3  0833               	movf	__div_to_l_@exp1,w
  5143  15B4  1D03               	btfss	3,2
  5144  15B5  2DB7               	goto	u5671
  5145  15B6  2DB8               	goto	u5670
  5146  15B7                     u5671:
  5147  15B7  2DC1               	goto	l3877
  5148  15B8                     u5670:
  5149  15B8                     l3873:
  5150  15B8  3000               	movlw	0
  5151  15B9  00A3               	movwf	?__div_to_l_+3
  5152  15BA  3000               	movlw	0
  5153  15BB  00A2               	movwf	?__div_to_l_+2
  5154  15BC  3000               	movlw	0
  5155  15BD  00A1               	movwf	?__div_to_l_+1
  5156  15BE  3000               	movlw	0
  5157  15BF  00A0               	movwf	?__div_to_l_
  5158  15C0  2EC9               	goto	l667
  5159  15C1                     l3877:
  5160  15C1  3023               	movlw	low (__div_to_l_@f2| 0)
  5161  15C2  0084               	movwf	4
  5162  15C3  0800               	movf	0,w
  5163  15C4  00A6               	movwf	??__div_to_l_
  5164  15C5  0A84               	incf	4,f
  5165  15C6  0800               	movf	0,w
  5166  15C7  00A7               	movwf	??__div_to_l_+1
  5167  15C8  0A84               	incf	4,f
  5168  15C9  0800               	movf	0,w
  5169  15CA  00A8               	movwf	??__div_to_l_+2
  5170  15CB  0A84               	incf	4,f
  5171  15CC  0800               	movf	0,w
  5172  15CD  00A9               	movwf	??__div_to_l_+3
  5173  15CE  1003               	clrc
  5174  15CF  0D28               	rlf	??__div_to_l_+2,w
  5175  15D0  0D29               	rlf	??__div_to_l_+3,w
  5176  15D1  00AA               	movwf	??__div_to_l_+4
  5177  15D2  082A               	movf	??__div_to_l_+4,w
  5178  15D3  00B2               	movwf	__div_to_l_@cntr
  5179  15D4  0832               	movf	__div_to_l_@cntr,w
  5180  15D5  1D03               	btfss	3,2
  5181  15D6  2DD8               	goto	u5681
  5182  15D7  2DD9               	goto	u5680
  5183  15D8                     u5681:
  5184  15D8  2DDA               	goto	l3883
  5185  15D9                     u5680:
  5186  15D9  2DB8               	goto	l3873
  5187  15DA                     l3883:
  5188  15DA  3020               	movlw	low (__div_to_l_@f1| 0)
  5189  15DB  0084               	movwf	4
  5190  15DC  3000               	movlw	0
  5191  15DD  0480               	iorwf	0,f
  5192  15DE  0A84               	incf	4,f
  5193  15DF  3000               	movlw	0
  5194  15E0  0480               	iorwf	0,f
  5195  15E1  0A84               	incf	4,f
  5196  15E2  3080               	movlw	128
  5197  15E3  0480               	iorwf	0,f
  5198  15E4  0A84               	incf	4,f
  5199  15E5  3000               	movlw	0
  5200  15E6  0480               	iorwf	0,f
  5201  15E7  3020               	movlw	low (__div_to_l_@f1| 0)
  5202  15E8  0084               	movwf	4
  5203  15E9  30FF               	movlw	255
  5204  15EA  0580               	andwf	0,f
  5205  15EB  0A84               	incf	4,f
  5206  15EC  30FF               	movlw	255
  5207  15ED  0580               	andwf	0,f
  5208  15EE  0A84               	incf	4,f
  5209  15EF  30FF               	movlw	255
  5210  15F0  0580               	andwf	0,f
  5211  15F1  0A84               	incf	4,f
  5212  15F2  3000               	movlw	0
  5213  15F3  0580               	andwf	0,f
  5214  15F4  3023               	movlw	low (__div_to_l_@f2| 0)
  5215  15F5  0084               	movwf	4
  5216  15F6  3000               	movlw	0
  5217  15F7  0480               	iorwf	0,f
  5218  15F8  0A84               	incf	4,f
  5219  15F9  3000               	movlw	0
  5220  15FA  0480               	iorwf	0,f
  5221  15FB  0A84               	incf	4,f
  5222  15FC  3080               	movlw	128
  5223  15FD  0480               	iorwf	0,f
  5224  15FE  0A84               	incf	4,f
  5225  15FF  3000               	movlw	0
  5226  1600  0480               	iorwf	0,f
  5227  1601  3023               	movlw	low (__div_to_l_@f2| 0)
  5228  1602  0084               	movwf	4
  5229  1603  30FF               	movlw	255
  5230  1604  0580               	andwf	0,f
  5231  1605  0A84               	incf	4,f
  5232  1606  30FF               	movlw	255
  5233  1607  0580               	andwf	0,f
  5234  1608  0A84               	incf	4,f
  5235  1609  30FF               	movlw	255
  5236  160A  0580               	andwf	0,f
  5237  160B  0A84               	incf	4,f
  5238  160C  3000               	movlw	0
  5239  160D  0580               	andwf	0,f
  5240  160E                     l3885:
  5241  160E  3000               	movlw	0
  5242  160F  00B1               	movwf	__div_to_l_@quot+3
  5243  1610  3000               	movlw	0
  5244  1611  00B0               	movwf	__div_to_l_@quot+2
  5245  1612  3000               	movlw	0
  5246  1613  00AF               	movwf	__div_to_l_@quot+1
  5247  1614  3000               	movlw	0
  5248  1615  00AE               	movwf	__div_to_l_@quot
  5249  1616                     l3887:
  5250  1616  307F               	movlw	127
  5251  1617  02B3               	subwf	__div_to_l_@exp1,f
  5252  1618                     l3889:
  5253  1618  30A0               	movlw	160
  5254  1619  0732               	addwf	__div_to_l_@cntr,w
  5255  161A  00A6               	movwf	??__div_to_l_
  5256  161B  0826               	movf	??__div_to_l_,w
  5257  161C  02B3               	subwf	__div_to_l_@exp1,f
  5258  161D                     l3891:
  5259  161D  3020               	movlw	32
  5260  161E  00A6               	movwf	??__div_to_l_
  5261  161F  0826               	movf	??__div_to_l_,w
  5262  1620  00B2               	movwf	__div_to_l_@cntr
  5263  1621                     l3893:
  5264  1621  3001               	movlw	1
  5265  1622  00A6               	movwf	??__div_to_l_
  5266  1623                     u5695:
  5267  1623  1003               	clrc
  5268  1624  0DAE               	rlf	__div_to_l_@quot,f
  5269  1625  0DAF               	rlf	__div_to_l_@quot+1,f
  5270  1626  0DB0               	rlf	__div_to_l_@quot+2,f
  5271  1627  0DB1               	rlf	__div_to_l_@quot+3,f
  5272  1628  0BA6               	decfsz	??__div_to_l_,f
  5273  1629  2E23               	goto	u5695
  5274  162A                     l3895:
  5275  162A  3023               	movlw	low (__div_to_l_@f2| 0)
  5276  162B  0084               	movwf	4
  5277  162C  0800               	movf	0,w
  5278  162D  00A6               	movwf	??__div_to_l_
  5279  162E  0A84               	incf	4,f
  5280  162F  0800               	movf	0,w
  5281  1630  00A7               	movwf	??__div_to_l_+1
  5282  1631  0A84               	incf	4,f
  5283  1632  0800               	movf	0,w
  5284  1633  00A8               	movwf	??__div_to_l_+2
  5285  1634  0A84               	incf	4,f
  5286  1635  0800               	movf	0,w
  5287  1636  00A9               	movwf	??__div_to_l_+3
  5288  1637  3020               	movlw	low (__div_to_l_@f1| 0)
  5289  1638  0084               	movwf	4
  5290  1639  0800               	movf	0,w
  5291  163A  00AA               	movwf	??__div_to_l_+4
  5292  163B  0A84               	incf	4,f
  5293  163C  0800               	movf	0,w
  5294  163D  00AB               	movwf	??__div_to_l_+5
  5295  163E  0A84               	incf	4,f
  5296  163F  0800               	movf	0,w
  5297  1640  00AC               	movwf	??__div_to_l_+6
  5298  1641  0A84               	incf	4,f
  5299  1642  0800               	movf	0,w
  5300  1643  00AD               	movwf	??__div_to_l_+7
  5301  1644  0829               	movf	??__div_to_l_+3,w
  5302  1645  022D               	subwf	??__div_to_l_+7,w
  5303  1646  1D03               	skipz
  5304  1647  2E52               	goto	u5705
  5305  1648  0828               	movf	??__div_to_l_+2,w
  5306  1649  022C               	subwf	??__div_to_l_+6,w
  5307  164A  1D03               	skipz
  5308  164B  2E52               	goto	u5705
  5309  164C  0827               	movf	??__div_to_l_+1,w
  5310  164D  022B               	subwf	??__div_to_l_+5,w
  5311  164E  1D03               	skipz
  5312  164F  2E52               	goto	u5705
  5313  1650  0826               	movf	??__div_to_l_,w
  5314  1651  022A               	subwf	??__div_to_l_+4,w
  5315  1652                     u5705:
  5316  1652  1C03               	skipc
  5317  1653  2E55               	goto	u5701
  5318  1654  2E56               	goto	u5700
  5319  1655                     u5701:
  5320  1655  2E79               	goto	l670
  5321  1656                     u5700:
  5322  1656                     l3897:
  5323  1656  3023               	movlw	low (__div_to_l_@f2| 0)
  5324  1657  0084               	movwf	4
  5325  1658  0800               	movf	0,w
  5326  1659  00A6               	movwf	??__div_to_l_
  5327  165A  0A84               	incf	4,f
  5328  165B  0800               	movf	0,w
  5329  165C  00A7               	movwf	??__div_to_l_+1
  5330  165D  0A84               	incf	4,f
  5331  165E  0800               	movf	0,w
  5332  165F  00A8               	movwf	??__div_to_l_+2
  5333  1660  0A84               	incf	4,f
  5334  1661  0800               	movf	0,w
  5335  1662  00A9               	movwf	??__div_to_l_+3
  5336  1663  3020               	movlw	low (__div_to_l_@f1| 0)
  5337  1664  0084               	movwf	4
  5338  1665  0826               	movf	??__div_to_l_,w
  5339  1666  0280               	subwf	0,f
  5340  1667  0A84               	incf	4,f
  5341  1668  0827               	movf	??__div_to_l_+1,w
  5342  1669  1C03               	skipc
  5343  166A  0F27               	incfsz	??__div_to_l_+1,w
  5344  166B  0280               	subwf	0,f
  5345  166C  0A84               	incf	4,f
  5346  166D  0828               	movf	??__div_to_l_+2,w
  5347  166E  1C03               	skipc
  5348  166F  0F28               	incfsz	??__div_to_l_+2,w
  5349  1670  0280               	subwf	0,f
  5350  1671  0A84               	incf	4,f
  5351  1672  0829               	movf	??__div_to_l_+3,w
  5352  1673  1C03               	skipc
  5353  1674  0A29               	incf	??__div_to_l_+3,w
  5354  1675  0280               	subwf	0,f
  5355  1676  3003               	movlw	3
  5356  1677  0284               	subwf	4,f
  5357  1678                     l3899:
  5358  1678  142E               	bsf	__div_to_l_@quot,0
  5359  1679                     l670:
  5360  1679  3020               	movlw	low (__div_to_l_@f1| 0)
  5361  167A  0084               	movwf	4
  5362  167B  1003               	clrc
  5363  167C  0D80               	rlf	0,f
  5364  167D  0A84               	incf	4,f
  5365  167E  0D80               	rlf	0,f
  5366  167F  0A84               	incf	4,f
  5367  1680  0D80               	rlf	0,f
  5368  1681  0A84               	incf	4,f
  5369  1682  0D80               	rlf	0,f
  5370  1683  0384               	decf	4,f
  5371  1684  0384               	decf	4,f
  5372  1685  0384               	decf	4,f
  5373  1686                     l3901:
  5374  1686  3001               	movlw	1
  5375  1687  02B2               	subwf	__div_to_l_@cntr,f
  5376  1688  1D03               	btfss	3,2
  5377  1689  2E8B               	goto	u5711
  5378  168A  2E8C               	goto	u5710
  5379  168B                     u5711:
  5380  168B  2E21               	goto	l3893
  5381  168C                     u5710:
  5382  168C                     l671:
  5383  168C  1FB3               	btfss	__div_to_l_@exp1,7
  5384  168D  2E8F               	goto	u5721
  5385  168E  2E90               	goto	u5720
  5386  168F                     u5721:
  5387  168F  2EAA               	goto	l3911
  5388  1690                     u5720:
  5389  1690                     l3903:
  5390  1690  0833               	movf	__div_to_l_@exp1,w
  5391  1691  3A80               	xorlw	128
  5392  1692  3E9F               	addlw	159
  5393  1693  1803               	skipnc
  5394  1694  2E96               	goto	u5731
  5395  1695  2E97               	goto	u5730
  5396  1696                     u5731:
  5397  1696  2E98               	goto	l3909
  5398  1697                     u5730:
  5399  1697  2DB8               	goto	l3873
  5400  1698                     l3909:
  5401  1698  3001               	movlw	1
  5402  1699                     u5745:
  5403  1699  1003               	clrc
  5404  169A  0CB1               	rrf	__div_to_l_@quot+3,f
  5405  169B  0CB0               	rrf	__div_to_l_@quot+2,f
  5406  169C  0CAF               	rrf	__div_to_l_@quot+1,f
  5407  169D  0CAE               	rrf	__div_to_l_@quot,f
  5408  169E  3EFF               	addlw	-1
  5409  169F  1D03               	skipz
  5410  16A0  2E99               	goto	u5745
  5411  16A1  3001               	movlw	1
  5412  16A2  00A6               	movwf	??__div_to_l_
  5413  16A3  0826               	movf	??__div_to_l_,w
  5414  16A4  07B3               	addwf	__div_to_l_@exp1,f
  5415  16A5  1D03               	btfss	3,2
  5416  16A6  2EA8               	goto	u5751
  5417  16A7  2EA9               	goto	u5750
  5418  16A8                     u5751:
  5419  16A8  2E98               	goto	l3909
  5420  16A9                     u5750:
  5421  16A9  2EC1               	goto	l3919
  5422  16AA                     l3911:
  5423  16AA  3020               	movlw	32
  5424  16AB  0233               	subwf	__div_to_l_@exp1,w
  5425  16AC  1C03               	skipc
  5426  16AD  2EAF               	goto	u5761
  5427  16AE  2EB0               	goto	u5760
  5428  16AF                     u5761:
  5429  16AF  2EBC               	goto	l678
  5430  16B0                     u5760:
  5431  16B0  2DB8               	goto	l3873
  5432  16B1                     l3917:
  5433  16B1  3001               	movlw	1
  5434  16B2  00A6               	movwf	??__div_to_l_
  5435  16B3                     u5775:
  5436  16B3  1003               	clrc
  5437  16B4  0DAE               	rlf	__div_to_l_@quot,f
  5438  16B5  0DAF               	rlf	__div_to_l_@quot+1,f
  5439  16B6  0DB0               	rlf	__div_to_l_@quot+2,f
  5440  16B7  0DB1               	rlf	__div_to_l_@quot+3,f
  5441  16B8  0BA6               	decfsz	??__div_to_l_,f
  5442  16B9  2EB3               	goto	u5775
  5443  16BA  3001               	movlw	1
  5444  16BB  02B3               	subwf	__div_to_l_@exp1,f
  5445  16BC                     l678:
  5446  16BC  0833               	movf	__div_to_l_@exp1,w
  5447  16BD  1D03               	btfss	3,2
  5448  16BE  2EC0               	goto	u5781
  5449  16BF  2EC1               	goto	u5780
  5450  16C0                     u5781:
  5451  16C0  2EB1               	goto	l3917
  5452  16C1                     u5780:
  5453  16C1                     l3919:
  5454  16C1  0831               	movf	__div_to_l_@quot+3,w
  5455  16C2  00A3               	movwf	?__div_to_l_+3
  5456  16C3  0830               	movf	__div_to_l_@quot+2,w
  5457  16C4  00A2               	movwf	?__div_to_l_+2
  5458  16C5  082F               	movf	__div_to_l_@quot+1,w
  5459  16C6  00A1               	movwf	?__div_to_l_+1
  5460  16C7  082E               	movf	__div_to_l_@quot,w
  5461  16C8  00A0               	movwf	?__div_to_l_
  5462  16C9                     l667:
  5463  16C9  0008               	return
  5464  16CA                     __end_of__div_to_l_:
  5465                           
  5466                           	psect	text15
  5467  1EDB                     __ptext15:	
  5468 ;; *************** function ___wmul *****************
  5469 ;; Defined at:
  5470 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  multiplier      2    3[COMMON] unsigned int 
  5473 ;;  multiplicand    2    5[COMMON] unsigned int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  product         2    0[BANK0 ] unsigned int 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  2    3[COMMON] unsigned int 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5485 ;;      Params:         4       0       0       0       0
  5486 ;;      Locals:         0       2       0       0       0
  5487 ;;      Temps:          0       0       0       0       0
  5488 ;;      Totals:         4       2       0       0       0
  5489 ;;Total ram usage:        6 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_sprintf
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           
  5500                           ;psect for function ___wmul
  5501  1EDB                     ___wmul:
  5502  1EDB                     l3923:	
  5503                           ;incstack = 0
  5504                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5505                           
  5506  1EDB  1283               	bcf	3,5	;RP0=0, select bank0
  5507  1EDC  1303               	bcf	3,6	;RP1=0, select bank0
  5508  1EDD  01A0               	clrf	___wmul@product
  5509  1EDE  01A1               	clrf	___wmul@product+1
  5510  1EDF                     l3925:
  5511  1EDF  1C73               	btfss	___wmul@multiplier,0
  5512  1EE0  2EE2               	goto	u5791
  5513  1EE1  2EE3               	goto	u5790
  5514  1EE2                     u5791:
  5515  1EE2  2EEB               	goto	l461
  5516  1EE3                     u5790:
  5517  1EE3                     l3927:
  5518  1EE3  0875               	movf	___wmul@multiplicand,w
  5519  1EE4  1283               	bcf	3,5	;RP0=0, select bank0
  5520  1EE5  1303               	bcf	3,6	;RP1=0, select bank0
  5521  1EE6  07A0               	addwf	___wmul@product,f
  5522  1EE7  1803               	skipnc
  5523  1EE8  0AA1               	incf	___wmul@product+1,f
  5524  1EE9  0876               	movf	___wmul@multiplicand+1,w
  5525  1EEA  07A1               	addwf	___wmul@product+1,f
  5526  1EEB                     l461:
  5527  1EEB  3001               	movlw	1
  5528  1EEC                     u5805:
  5529  1EEC  1003               	clrc
  5530  1EED  0DF5               	rlf	___wmul@multiplicand,f
  5531  1EEE  0DF6               	rlf	___wmul@multiplicand+1,f
  5532  1EEF  3EFF               	addlw	-1
  5533  1EF0  1D03               	skipz
  5534  1EF1  2EEC               	goto	u5805
  5535  1EF2                     l3929:
  5536  1EF2  3001               	movlw	1
  5537  1EF3                     u5815:
  5538  1EF3  1003               	clrc
  5539  1EF4  0CF4               	rrf	___wmul@multiplier+1,f
  5540  1EF5  0CF3               	rrf	___wmul@multiplier,f
  5541  1EF6  3EFF               	addlw	-1
  5542  1EF7  1D03               	skipz
  5543  1EF8  2EF3               	goto	u5815
  5544  1EF9                     l3931:
  5545  1EF9  0873               	movf	___wmul@multiplier,w
  5546  1EFA  0474               	iorwf	___wmul@multiplier+1,w
  5547  1EFB  1D03               	btfss	3,2
  5548  1EFC  2EFE               	goto	u5821
  5549  1EFD  2EFF               	goto	u5820
  5550  1EFE                     u5821:
  5551  1EFE  2EDF               	goto	l3925
  5552  1EFF                     u5820:
  5553  1EFF                     l3933:
  5554  1EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5555  1F00  1303               	bcf	3,6	;RP1=0, select bank0
  5556  1F01  0821               	movf	___wmul@product+1,w
  5557  1F02  00F4               	movwf	?___wmul+1
  5558  1F03  0820               	movf	___wmul@product,w
  5559  1F04  00F3               	movwf	?___wmul
  5560  1F05                     l463:
  5561  1F05  0008               	return
  5562  1F06                     __end_of___wmul:
  5563                           
  5564                           	psect	text16
  5565  10A9                     __ptext16:	
  5566 ;; *************** function ___lltoft *****************
  5567 ;; Defined at:
  5568 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  c               4    3[BANK0 ] unsigned long 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  exp             1    8[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  3    3[BANK0 ] float 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         0       4       0       0       0
  5583 ;;      Locals:         0       1       0       0       0
  5584 ;;      Temps:          0       1       0       0       0
  5585 ;;      Totals:         0       6       0       0       0
  5586 ;;Total ram usage:        6 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    3
  5589 ;; This function calls:
  5590 ;;		___ftpack
  5591 ;; This function is called by:
  5592 ;;		_sprintf
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function ___lltoft
  5598  10A9                     ___lltoft:
  5599  10A9                     l4009:	
  5600                           ;incstack = 0
  5601                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5602                           
  5603  10A9  308E               	movlw	142
  5604  10AA  1283               	bcf	3,5	;RP0=0, select bank0
  5605  10AB  1303               	bcf	3,6	;RP1=0, select bank0
  5606  10AC  00A7               	movwf	??___lltoft
  5607  10AD  0827               	movf	??___lltoft,w
  5608  10AE  00A8               	movwf	___lltoft@exp
  5609  10AF  28BD               	goto	l4013
  5610  10B0                     l4011:
  5611  10B0  3001               	movlw	1
  5612  10B1                     u6005:
  5613  10B1  1003               	clrc
  5614  10B2  0CA6               	rrf	___lltoft@c+3,f
  5615  10B3  0CA5               	rrf	___lltoft@c+2,f
  5616  10B4  0CA4               	rrf	___lltoft@c+1,f
  5617  10B5  0CA3               	rrf	___lltoft@c,f
  5618  10B6  3EFF               	addlw	-1
  5619  10B7  1D03               	skipz
  5620  10B8  28B1               	goto	u6005
  5621  10B9  3001               	movlw	1
  5622  10BA  00A7               	movwf	??___lltoft
  5623  10BB  0827               	movf	??___lltoft,w
  5624  10BC  07A8               	addwf	___lltoft@exp,f
  5625  10BD                     l4013:
  5626  10BD  30FF               	movlw	255
  5627  10BE  0526               	andwf	___lltoft@c+3,w
  5628  10BF  1D03               	btfss	3,2
  5629  10C0  28C2               	goto	u6011
  5630  10C1  28C3               	goto	u6010
  5631  10C2                     u6011:
  5632  10C2  28B0               	goto	l4011
  5633  10C3                     u6010:
  5634  10C3                     l4015:
  5635  10C3  0823               	movf	___lltoft@c,w
  5636  10C4  00F3               	movwf	___ftpack@arg
  5637  10C5  0824               	movf	___lltoft@c+1,w
  5638  10C6  00F4               	movwf	___ftpack@arg+1
  5639  10C7  0825               	movf	___lltoft@c+2,w
  5640  10C8  00F5               	movwf	___ftpack@arg+2
  5641  10C9  0828               	movf	___lltoft@exp,w
  5642  10CA  00A7               	movwf	??___lltoft
  5643  10CB  0827               	movf	??___lltoft,w
  5644  10CC  00F6               	movwf	___ftpack@exp
  5645  10CD  01F7               	clrf	___ftpack@sign
  5646  10CE  160A  118A  22C1  160A  118A  	fcall	___ftpack
  5647  10D3  0873               	movf	?___ftpack,w
  5648  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  5649  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  5650  10D6  00A3               	movwf	?___lltoft
  5651  10D7  0874               	movf	?___ftpack+1,w
  5652  10D8  00A4               	movwf	?___lltoft+1
  5653  10D9  0875               	movf	?___ftpack+2,w
  5654  10DA  00A5               	movwf	?___lltoft+2
  5655  10DB                     l840:
  5656  10DB  0008               	return
  5657  10DC                     __end_of___lltoft:
  5658                           
  5659                           	psect	text17
  5660  1122                     __ptext17:	
  5661 ;; *************** function ___llmod *****************
  5662 ;; Defined at:
  5663 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  divisor         4   13[BANK0 ] unsigned long 
  5666 ;;  dividend        4   17[BANK0 ] unsigned long 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  counter         1    5[COMMON] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  4   13[BANK0 ] unsigned long 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5678 ;;      Params:         0       8       0       0       0
  5679 ;;      Locals:         1       0       0       0       0
  5680 ;;      Temps:          1       0       0       0       0
  5681 ;;      Totals:         2       8       0       0       0
  5682 ;;Total ram usage:       10 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    2
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_sprintf
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function ___llmod
  5694  1122                     ___llmod:
  5695  1122                     l3989:	
  5696                           ;incstack = 0
  5697                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5698                           
  5699  1122  1283               	bcf	3,5	;RP0=0, select bank0
  5700  1123  1303               	bcf	3,6	;RP1=0, select bank0
  5701  1124  0830               	movf	___llmod@divisor+3,w
  5702  1125  042F               	iorwf	___llmod@divisor+2,w
  5703  1126  042E               	iorwf	___llmod@divisor+1,w
  5704  1127  042D               	iorwf	___llmod@divisor,w
  5705  1128  1903               	skipnz
  5706  1129  292B               	goto	u5941
  5707  112A  292C               	goto	u5940
  5708  112B                     u5941:
  5709  112B  296F               	goto	l4005
  5710  112C                     u5940:
  5711  112C                     l3991:
  5712  112C  01F5               	clrf	___llmod@counter
  5713  112D  0AF5               	incf	___llmod@counter,f
  5714  112E  293C               	goto	l3995
  5715  112F                     l3993:
  5716  112F  3001               	movlw	1
  5717  1130  00F4               	movwf	??___llmod
  5718  1131                     u5955:
  5719  1131  1003               	clrc
  5720  1132  0DAD               	rlf	___llmod@divisor,f
  5721  1133  0DAE               	rlf	___llmod@divisor+1,f
  5722  1134  0DAF               	rlf	___llmod@divisor+2,f
  5723  1135  0DB0               	rlf	___llmod@divisor+3,f
  5724  1136  0BF4               	decfsz	??___llmod,f
  5725  1137  2931               	goto	u5955
  5726  1138  3001               	movlw	1
  5727  1139  00F4               	movwf	??___llmod
  5728  113A  0874               	movf	??___llmod,w
  5729  113B  07F5               	addwf	___llmod@counter,f
  5730  113C                     l3995:
  5731  113C  1FB0               	btfss	___llmod@divisor+3,7
  5732  113D  293F               	goto	u5961
  5733  113E  2940               	goto	u5960
  5734  113F                     u5961:
  5735  113F  292F               	goto	l3993
  5736  1140                     u5960:
  5737  1140                     l3997:
  5738  1140  0830               	movf	___llmod@divisor+3,w
  5739  1141  0234               	subwf	___llmod@dividend+3,w
  5740  1142  1D03               	skipz
  5741  1143  294E               	goto	u5975
  5742  1144  082F               	movf	___llmod@divisor+2,w
  5743  1145  0233               	subwf	___llmod@dividend+2,w
  5744  1146  1D03               	skipz
  5745  1147  294E               	goto	u5975
  5746  1148  082E               	movf	___llmod@divisor+1,w
  5747  1149  0232               	subwf	___llmod@dividend+1,w
  5748  114A  1D03               	skipz
  5749  114B  294E               	goto	u5975
  5750  114C  082D               	movf	___llmod@divisor,w
  5751  114D  0231               	subwf	___llmod@dividend,w
  5752  114E                     u5975:
  5753  114E  1C03               	skipc
  5754  114F  2951               	goto	u5971
  5755  1150  2952               	goto	u5970
  5756  1151                     u5971:
  5757  1151  2960               	goto	l4001
  5758  1152                     u5970:
  5759  1152                     l3999:
  5760  1152  082D               	movf	___llmod@divisor,w
  5761  1153  02B1               	subwf	___llmod@dividend,f
  5762  1154  082E               	movf	___llmod@divisor+1,w
  5763  1155  1C03               	skipc
  5764  1156  0F2E               	incfsz	___llmod@divisor+1,w
  5765  1157  02B2               	subwf	___llmod@dividend+1,f
  5766  1158  082F               	movf	___llmod@divisor+2,w
  5767  1159  1C03               	skipc
  5768  115A  0F2F               	incfsz	___llmod@divisor+2,w
  5769  115B  02B3               	subwf	___llmod@dividend+2,f
  5770  115C  0830               	movf	___llmod@divisor+3,w
  5771  115D  1C03               	skipc
  5772  115E  0F30               	incfsz	___llmod@divisor+3,w
  5773  115F  02B4               	subwf	___llmod@dividend+3,f
  5774  1160                     l4001:
  5775  1160  3001               	movlw	1
  5776  1161                     u5985:
  5777  1161  1003               	clrc
  5778  1162  0CB0               	rrf	___llmod@divisor+3,f
  5779  1163  0CAF               	rrf	___llmod@divisor+2,f
  5780  1164  0CAE               	rrf	___llmod@divisor+1,f
  5781  1165  0CAD               	rrf	___llmod@divisor,f
  5782  1166  3EFF               	addlw	-1
  5783  1167  1D03               	skipz
  5784  1168  2961               	goto	u5985
  5785  1169                     l4003:
  5786  1169  3001               	movlw	1
  5787  116A  02F5               	subwf	___llmod@counter,f
  5788  116B  1D03               	btfss	3,2
  5789  116C  296E               	goto	u5991
  5790  116D  296F               	goto	u5990
  5791  116E                     u5991:
  5792  116E  2940               	goto	l3997
  5793  116F                     u5990:
  5794  116F                     l4005:
  5795  116F  0834               	movf	___llmod@dividend+3,w
  5796  1170  00B0               	movwf	?___llmod+3
  5797  1171  0833               	movf	___llmod@dividend+2,w
  5798  1172  00AF               	movwf	?___llmod+2
  5799  1173  0832               	movf	___llmod@dividend+1,w
  5800  1174  00AE               	movwf	?___llmod+1
  5801  1175  0831               	movf	___llmod@dividend,w
  5802  1176  00AD               	movwf	?___llmod
  5803  1177                     l832:
  5804  1177  0008               	return
  5805  1178                     __end_of___llmod:
  5806                           
  5807                           	psect	text18
  5808  1178                     __ptext18:	
  5809 ;; *************** function ___lldiv *****************
  5810 ;; Defined at:
  5811 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  divisor         4    0[BANK0 ] unsigned long 
  5814 ;;  dividend        4    4[BANK0 ] unsigned long 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  quotient        4    8[BANK0 ] unsigned long 
  5817 ;;  counter         1   12[BANK0 ] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  4    0[BANK0 ] unsigned long 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         0       8       0       0       0
  5828 ;;      Locals:         0       5       0       0       0
  5829 ;;      Temps:          1       0       0       0       0
  5830 ;;      Totals:         1      13       0       0       0
  5831 ;;Total ram usage:       14 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    2
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_sprintf
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function ___lldiv
  5843  1178                     ___lldiv:
  5844  1178                     l3937:	
  5845                           ;incstack = 0
  5846                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5847                           
  5848  1178  3000               	movlw	0
  5849  1179  1283               	bcf	3,5	;RP0=0, select bank0
  5850  117A  1303               	bcf	3,6	;RP1=0, select bank0
  5851  117B  00AB               	movwf	___lldiv@quotient+3
  5852  117C  3000               	movlw	0
  5853  117D  00AA               	movwf	___lldiv@quotient+2
  5854  117E  3000               	movlw	0
  5855  117F  00A9               	movwf	___lldiv@quotient+1
  5856  1180  3000               	movlw	0
  5857  1181  00A8               	movwf	___lldiv@quotient
  5858  1182  0823               	movf	___lldiv@divisor+3,w
  5859  1183  0422               	iorwf	___lldiv@divisor+2,w
  5860  1184  0421               	iorwf	___lldiv@divisor+1,w
  5861  1185  0420               	iorwf	___lldiv@divisor,w
  5862  1186  1903               	skipnz
  5863  1187  2989               	goto	u5831
  5864  1188  298A               	goto	u5830
  5865  1189                     u5831:
  5866  1189  29D7               	goto	l3957
  5867  118A                     u5830:
  5868  118A                     l3939:
  5869  118A  01AC               	clrf	___lldiv@counter
  5870  118B  0AAC               	incf	___lldiv@counter,f
  5871  118C  299A               	goto	l3943
  5872  118D                     l3941:
  5873  118D  3001               	movlw	1
  5874  118E  00F3               	movwf	??___lldiv
  5875  118F                     u5845:
  5876  118F  1003               	clrc
  5877  1190  0DA0               	rlf	___lldiv@divisor,f
  5878  1191  0DA1               	rlf	___lldiv@divisor+1,f
  5879  1192  0DA2               	rlf	___lldiv@divisor+2,f
  5880  1193  0DA3               	rlf	___lldiv@divisor+3,f
  5881  1194  0BF3               	decfsz	??___lldiv,f
  5882  1195  298F               	goto	u5845
  5883  1196  3001               	movlw	1
  5884  1197  00F3               	movwf	??___lldiv
  5885  1198  0873               	movf	??___lldiv,w
  5886  1199  07AC               	addwf	___lldiv@counter,f
  5887  119A                     l3943:
  5888  119A  1FA3               	btfss	___lldiv@divisor+3,7
  5889  119B  299D               	goto	u5851
  5890  119C  299E               	goto	u5850
  5891  119D                     u5851:
  5892  119D  298D               	goto	l3941
  5893  119E                     u5850:
  5894  119E                     l3945:
  5895  119E  3001               	movlw	1
  5896  119F  00F3               	movwf	??___lldiv
  5897  11A0                     u5865:
  5898  11A0  1003               	clrc
  5899  11A1  0DA8               	rlf	___lldiv@quotient,f
  5900  11A2  0DA9               	rlf	___lldiv@quotient+1,f
  5901  11A3  0DAA               	rlf	___lldiv@quotient+2,f
  5902  11A4  0DAB               	rlf	___lldiv@quotient+3,f
  5903  11A5  0BF3               	decfsz	??___lldiv,f
  5904  11A6  29A0               	goto	u5865
  5905  11A7                     l3947:
  5906  11A7  0823               	movf	___lldiv@divisor+3,w
  5907  11A8  0227               	subwf	___lldiv@dividend+3,w
  5908  11A9  1D03               	skipz
  5909  11AA  29B5               	goto	u5875
  5910  11AB  0822               	movf	___lldiv@divisor+2,w
  5911  11AC  0226               	subwf	___lldiv@dividend+2,w
  5912  11AD  1D03               	skipz
  5913  11AE  29B5               	goto	u5875
  5914  11AF  0821               	movf	___lldiv@divisor+1,w
  5915  11B0  0225               	subwf	___lldiv@dividend+1,w
  5916  11B1  1D03               	skipz
  5917  11B2  29B5               	goto	u5875
  5918  11B3  0820               	movf	___lldiv@divisor,w
  5919  11B4  0224               	subwf	___lldiv@dividend,w
  5920  11B5                     u5875:
  5921  11B5  1C03               	skipc
  5922  11B6  29B8               	goto	u5871
  5923  11B7  29B9               	goto	u5870
  5924  11B8                     u5871:
  5925  11B8  29C8               	goto	l3953
  5926  11B9                     u5870:
  5927  11B9                     l3949:
  5928  11B9  0820               	movf	___lldiv@divisor,w
  5929  11BA  02A4               	subwf	___lldiv@dividend,f
  5930  11BB  0821               	movf	___lldiv@divisor+1,w
  5931  11BC  1C03               	skipc
  5932  11BD  0F21               	incfsz	___lldiv@divisor+1,w
  5933  11BE  02A5               	subwf	___lldiv@dividend+1,f
  5934  11BF  0822               	movf	___lldiv@divisor+2,w
  5935  11C0  1C03               	skipc
  5936  11C1  0F22               	incfsz	___lldiv@divisor+2,w
  5937  11C2  02A6               	subwf	___lldiv@dividend+2,f
  5938  11C3  0823               	movf	___lldiv@divisor+3,w
  5939  11C4  1C03               	skipc
  5940  11C5  0F23               	incfsz	___lldiv@divisor+3,w
  5941  11C6  02A7               	subwf	___lldiv@dividend+3,f
  5942  11C7                     l3951:
  5943  11C7  1428               	bsf	___lldiv@quotient,0
  5944  11C8                     l3953:
  5945  11C8  3001               	movlw	1
  5946  11C9                     u5885:
  5947  11C9  1003               	clrc
  5948  11CA  0CA3               	rrf	___lldiv@divisor+3,f
  5949  11CB  0CA2               	rrf	___lldiv@divisor+2,f
  5950  11CC  0CA1               	rrf	___lldiv@divisor+1,f
  5951  11CD  0CA0               	rrf	___lldiv@divisor,f
  5952  11CE  3EFF               	addlw	-1
  5953  11CF  1D03               	skipz
  5954  11D0  29C9               	goto	u5885
  5955  11D1                     l3955:
  5956  11D1  3001               	movlw	1
  5957  11D2  02AC               	subwf	___lldiv@counter,f
  5958  11D3  1D03               	btfss	3,2
  5959  11D4  29D6               	goto	u5891
  5960  11D5  29D7               	goto	u5890
  5961  11D6                     u5891:
  5962  11D6  299E               	goto	l3945
  5963  11D7                     u5890:
  5964  11D7                     l3957:
  5965  11D7  082B               	movf	___lldiv@quotient+3,w
  5966  11D8  00A3               	movwf	?___lldiv+3
  5967  11D9  082A               	movf	___lldiv@quotient+2,w
  5968  11DA  00A2               	movwf	?___lldiv+2
  5969  11DB  0829               	movf	___lldiv@quotient+1,w
  5970  11DC  00A1               	movwf	?___lldiv+1
  5971  11DD  0828               	movf	___lldiv@quotient,w
  5972  11DE  00A0               	movwf	?___lldiv
  5973  11DF                     l497:
  5974  11DF  0008               	return
  5975  11E0                     __end_of___lldiv:
  5976                           
  5977                           	psect	text19
  5978  1343                     __ptext19:	
  5979 ;; *************** function ___fttol *****************
  5980 ;; Defined at:
  5981 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  f1              3   40[BANK0 ] float 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  lval            4   49[BANK0 ] unsigned long 
  5986 ;;  exp1            1   53[BANK0 ] unsigned char 
  5987 ;;  sign1           1   48[BANK0 ] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  4   40[BANK0 ] long 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5997 ;;      Params:         0       4       0       0       0
  5998 ;;      Locals:         0       6       0       0       0
  5999 ;;      Temps:          0       4       0       0       0
  6000 ;;      Totals:         0      14       0       0       0
  6001 ;;Total ram usage:       14 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    2
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_sprintf
  6008 ;;		_Enviar_1
  6009 ;;		_Enviar_2
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function ___fttol
  6015  1343                     ___fttol:
  6016  1343                     l2803:	
  6017                           ;incstack = 0
  6018                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6019                           
  6020  1343  1283               	bcf	3,5	;RP0=0, select bank0
  6021  1344  1303               	bcf	3,6	;RP1=0, select bank0
  6022  1345  0848               	movf	___fttol@f1,w
  6023  1346  00CC               	movwf	??___fttol
  6024  1347  0849               	movf	___fttol@f1+1,w
  6025  1348  00CD               	movwf	??___fttol+1
  6026  1349  084A               	movf	___fttol@f1+2,w
  6027  134A  00CE               	movwf	??___fttol+2
  6028  134B  1003               	clrc
  6029  134C  0D4D               	rlf	??___fttol+1,w
  6030  134D  0D4E               	rlf	??___fttol+2,w
  6031  134E  00CF               	movwf	??___fttol+3
  6032  134F  084F               	movf	??___fttol+3,w
  6033  1350  00D5               	movwf	___fttol@exp1
  6034  1351  0855               	movf	___fttol@exp1,w
  6035  1352  1D03               	btfss	3,2
  6036  1353  2B55               	goto	u3741
  6037  1354  2B56               	goto	u3740
  6038  1355                     u3741:
  6039  1355  2B5F               	goto	l2809
  6040  1356                     u3740:
  6041  1356                     l2805:
  6042  1356  3000               	movlw	0
  6043  1357  00CB               	movwf	?___fttol+3
  6044  1358  3000               	movlw	0
  6045  1359  00CA               	movwf	?___fttol+2
  6046  135A  3000               	movlw	0
  6047  135B  00C9               	movwf	?___fttol+1
  6048  135C  3000               	movlw	0
  6049  135D  00C8               	movwf	?___fttol
  6050  135E  2BCE               	goto	l791
  6051  135F                     l2809:
  6052  135F  0848               	movf	___fttol@f1,w
  6053  1360  00CC               	movwf	??___fttol
  6054  1361  0849               	movf	___fttol@f1+1,w
  6055  1362  00CD               	movwf	??___fttol+1
  6056  1363  084A               	movf	___fttol@f1+2,w
  6057  1364  00CE               	movwf	??___fttol+2
  6058  1365  3017               	movlw	23
  6059  1366                     u3755:
  6060  1366  1003               	clrc
  6061  1367  0CCE               	rrf	??___fttol+2,f
  6062  1368  0CCD               	rrf	??___fttol+1,f
  6063  1369  0CCC               	rrf	??___fttol,f
  6064  136A                     u3750:
  6065  136A  3EFF               	addlw	-1
  6066  136B  1D03               	skipz
  6067  136C  2B66               	goto	u3755
  6068  136D  084C               	movf	??___fttol,w
  6069  136E  00CF               	movwf	??___fttol+3
  6070  136F  084F               	movf	??___fttol+3,w
  6071  1370  00D0               	movwf	___fttol@sign1
  6072  1371                     l2811:
  6073  1371  17C9               	bsf	___fttol@f1+1,7
  6074  1372                     l2813:
  6075  1372  30FF               	movlw	255
  6076  1373  05C8               	andwf	___fttol@f1,f
  6077  1374  30FF               	movlw	255
  6078  1375  05C9               	andwf	___fttol@f1+1,f
  6079  1376  3000               	movlw	0
  6080  1377  05CA               	andwf	___fttol@f1+2,f
  6081  1378                     l2815:
  6082  1378  0848               	movf	___fttol@f1,w
  6083  1379  00D1               	movwf	___fttol@lval
  6084  137A  0849               	movf	___fttol@f1+1,w
  6085  137B  00D2               	movwf	___fttol@lval+1
  6086  137C  084A               	movf	___fttol@f1+2,w
  6087  137D  00D3               	movwf	___fttol@lval+2
  6088  137E  01D4               	clrf	___fttol@lval+3
  6089  137F                     l2817:
  6090  137F  308E               	movlw	142
  6091  1380  02D5               	subwf	___fttol@exp1,f
  6092  1381                     l2819:
  6093  1381  1FD5               	btfss	___fttol@exp1,7
  6094  1382  2B84               	goto	u3761
  6095  1383  2B85               	goto	u3760
  6096  1384                     u3761:
  6097  1384  2B9F               	goto	l2829
  6098  1385                     u3760:
  6099  1385                     l2821:
  6100  1385  0855               	movf	___fttol@exp1,w
  6101  1386  3A80               	xorlw	128
  6102  1387  3E8F               	addlw	143
  6103  1388  1803               	skipnc
  6104  1389  2B8B               	goto	u3771
  6105  138A  2B8C               	goto	u3770
  6106  138B                     u3771:
  6107  138B  2B8D               	goto	l2827
  6108  138C                     u3770:
  6109  138C  2B56               	goto	l2805
  6110  138D                     l2827:
  6111  138D  3001               	movlw	1
  6112  138E                     u3785:
  6113  138E  1003               	clrc
  6114  138F  0CD4               	rrf	___fttol@lval+3,f
  6115  1390  0CD3               	rrf	___fttol@lval+2,f
  6116  1391  0CD2               	rrf	___fttol@lval+1,f
  6117  1392  0CD1               	rrf	___fttol@lval,f
  6118  1393  3EFF               	addlw	-1
  6119  1394  1D03               	skipz
  6120  1395  2B8E               	goto	u3785
  6121  1396  3001               	movlw	1
  6122  1397  00CC               	movwf	??___fttol
  6123  1398  084C               	movf	??___fttol,w
  6124  1399  07D5               	addwf	___fttol@exp1,f
  6125  139A  1D03               	btfss	3,2
  6126  139B  2B9D               	goto	u3791
  6127  139C  2B9E               	goto	u3790
  6128  139D                     u3791:
  6129  139D  2B8D               	goto	l2827
  6130  139E                     u3790:
  6131  139E  2BB6               	goto	l2837
  6132  139F                     l2829:
  6133  139F  3018               	movlw	24
  6134  13A0  0255               	subwf	___fttol@exp1,w
  6135  13A1  1C03               	skipc
  6136  13A2  2BA4               	goto	u3801
  6137  13A3  2BA5               	goto	u3800
  6138  13A4                     u3801:
  6139  13A4  2BB1               	goto	l798
  6140  13A5                     u3800:
  6141  13A5  2B56               	goto	l2805
  6142  13A6                     l2835:
  6143  13A6  3001               	movlw	1
  6144  13A7  00CC               	movwf	??___fttol
  6145  13A8                     u3815:
  6146  13A8  1003               	clrc
  6147  13A9  0DD1               	rlf	___fttol@lval,f
  6148  13AA  0DD2               	rlf	___fttol@lval+1,f
  6149  13AB  0DD3               	rlf	___fttol@lval+2,f
  6150  13AC  0DD4               	rlf	___fttol@lval+3,f
  6151  13AD  0BCC               	decfsz	??___fttol,f
  6152  13AE  2BA8               	goto	u3815
  6153  13AF  3001               	movlw	1
  6154  13B0  02D5               	subwf	___fttol@exp1,f
  6155  13B1                     l798:
  6156  13B1  0855               	movf	___fttol@exp1,w
  6157  13B2  1D03               	btfss	3,2
  6158  13B3  2BB5               	goto	u3821
  6159  13B4  2BB6               	goto	u3820
  6160  13B5                     u3821:
  6161  13B5  2BA6               	goto	l2835
  6162  13B6                     u3820:
  6163  13B6                     l2837:
  6164  13B6  0850               	movf	___fttol@sign1,w
  6165  13B7  1903               	btfsc	3,2
  6166  13B8  2BBA               	goto	u3831
  6167  13B9  2BBB               	goto	u3830
  6168  13BA                     u3831:
  6169  13BA  2BC6               	goto	l2841
  6170  13BB                     u3830:
  6171  13BB                     l2839:
  6172  13BB  09D1               	comf	___fttol@lval,f
  6173  13BC  09D2               	comf	___fttol@lval+1,f
  6174  13BD  09D3               	comf	___fttol@lval+2,f
  6175  13BE  09D4               	comf	___fttol@lval+3,f
  6176  13BF  0AD1               	incf	___fttol@lval,f
  6177  13C0  1903               	skipnz
  6178  13C1  0AD2               	incf	___fttol@lval+1,f
  6179  13C2  1903               	skipnz
  6180  13C3  0AD3               	incf	___fttol@lval+2,f
  6181  13C4  1903               	skipnz
  6182  13C5  0AD4               	incf	___fttol@lval+3,f
  6183  13C6                     l2841:
  6184  13C6  0854               	movf	___fttol@lval+3,w
  6185  13C7  00CB               	movwf	?___fttol+3
  6186  13C8  0853               	movf	___fttol@lval+2,w
  6187  13C9  00CA               	movwf	?___fttol+2
  6188  13CA  0852               	movf	___fttol@lval+1,w
  6189  13CB  00C9               	movwf	?___fttol+1
  6190  13CC  0851               	movf	___fttol@lval,w
  6191  13CD  00C8               	movwf	?___fttol
  6192  13CE                     l791:
  6193  13CE  0008               	return
  6194  13CF                     __end_of___fttol:
  6195                           
  6196                           	psect	text20
  6197  1E3E                     __ptext20:	
  6198 ;; *************** function ___ftsub *****************
  6199 ;; Defined at:
  6200 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  f2              3   60[BANK0 ] float 
  6203 ;;  f1              3   63[BANK0 ] float 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  3   60[BANK0 ] float 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0, pclath, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6215 ;;      Params:         0       6       0       0       0
  6216 ;;      Locals:         0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0
  6218 ;;      Totals:         0       6       0       0       0
  6219 ;;Total ram usage:        6 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    4
  6222 ;; This function calls:
  6223 ;;		___ftadd
  6224 ;; This function is called by:
  6225 ;;		_sprintf
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           
  6230                           ;psect for function ___ftsub
  6231  1E3E                     ___ftsub:
  6232  1E3E                     l3981:	
  6233                           ;incstack = 0
  6234                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6235                           
  6236  1E3E  1283               	bcf	3,5	;RP0=0, select bank0
  6237  1E3F  1303               	bcf	3,6	;RP1=0, select bank0
  6238  1E40  085E               	movf	___ftsub@f2+2,w
  6239  1E41  045D               	iorwf	___ftsub@f2+1,w
  6240  1E42  045C               	iorwf	___ftsub@f2,w
  6241  1E43  1903               	skipnz
  6242  1E44  2E46               	goto	u5931
  6243  1E45  2E47               	goto	u5930
  6244  1E46                     u5931:
  6245  1E46  2E49               	goto	l3985
  6246  1E47                     u5930:
  6247  1E47                     l3983:
  6248  1E47  3080               	movlw	128
  6249  1E48  06DE               	xorwf	___ftsub@f2+2,f
  6250  1E49                     l3985:
  6251  1E49  085F               	movf	___ftsub@f1,w
  6252  1E4A  00CF               	movwf	___ftadd@f1
  6253  1E4B  0860               	movf	___ftsub@f1+1,w
  6254  1E4C  00D0               	movwf	___ftadd@f1+1
  6255  1E4D  0861               	movf	___ftsub@f1+2,w
  6256  1E4E  00D1               	movwf	___ftadd@f1+2
  6257  1E4F  085C               	movf	___ftsub@f2,w
  6258  1E50  00D2               	movwf	___ftadd@f2
  6259  1E51  085D               	movf	___ftsub@f2+1,w
  6260  1E52  00D3               	movwf	___ftadd@f2+1
  6261  1E53  085E               	movf	___ftsub@f2+2,w
  6262  1E54  00D4               	movwf	___ftadd@f2+2
  6263  1E55  160A  118A  26CA  160A  158A  	fcall	___ftadd
  6264  1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  6265  1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  6266  1E5C  084F               	movf	?___ftadd,w
  6267  1E5D  00DC               	movwf	?___ftsub
  6268  1E5E  0850               	movf	?___ftadd+1,w
  6269  1E5F  00DD               	movwf	?___ftsub+1
  6270  1E60  0851               	movf	?___ftadd+2,w
  6271  1E61  00DE               	movwf	?___ftsub+2
  6272  1E62                     l787:
  6273  1E62  0008               	return
  6274  1E63                     __end_of___ftsub:
  6275                           
  6276                           	psect	text21
  6277  16CA                     __ptext21:	
  6278 ;; *************** function ___ftadd *****************
  6279 ;; Defined at:
  6280 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  f1              3   47[BANK0 ] float 
  6283 ;;  f2              3   50[BANK0 ] float 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  exp1            1   59[BANK0 ] unsigned char 
  6286 ;;  exp2            1   58[BANK0 ] unsigned char 
  6287 ;;  sign            1   57[BANK0 ] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  3   47[BANK0 ] float 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0, pclath, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6297 ;;      Params:         0       6       0       0       0
  6298 ;;      Locals:         0       3       0       0       0
  6299 ;;      Temps:          0       4       0       0       0
  6300 ;;      Totals:         0      13       0       0       0
  6301 ;;Total ram usage:       13 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    3
  6304 ;; This function calls:
  6305 ;;		___ftpack
  6306 ;; This function is called by:
  6307 ;;		_sprintf
  6308 ;;		___ftsub
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           
  6313                           ;psect for function ___ftadd
  6314  16CA                     ___ftadd:
  6315  16CA                     l3561:	
  6316                           ;incstack = 0
  6317                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6318                           
  6319  16CA  1283               	bcf	3,5	;RP0=0, select bank0
  6320  16CB  1303               	bcf	3,6	;RP1=0, select bank0
  6321  16CC  084F               	movf	___ftadd@f1,w
  6322  16CD  00D5               	movwf	??___ftadd
  6323  16CE  0850               	movf	___ftadd@f1+1,w
  6324  16CF  00D6               	movwf	??___ftadd+1
  6325  16D0  0851               	movf	___ftadd@f1+2,w
  6326  16D1  00D7               	movwf	??___ftadd+2
  6327  16D2  1003               	clrc
  6328  16D3  0D56               	rlf	??___ftadd+1,w
  6329  16D4  0D57               	rlf	??___ftadd+2,w
  6330  16D5  00D8               	movwf	??___ftadd+3
  6331  16D6  0858               	movf	??___ftadd+3,w
  6332  16D7  00DB               	movwf	___ftadd@exp1
  6333  16D8  0852               	movf	___ftadd@f2,w
  6334  16D9  00D5               	movwf	??___ftadd
  6335  16DA  0853               	movf	___ftadd@f2+1,w
  6336  16DB  00D6               	movwf	??___ftadd+1
  6337  16DC  0854               	movf	___ftadd@f2+2,w
  6338  16DD  00D7               	movwf	??___ftadd+2
  6339  16DE  1003               	clrc
  6340  16DF  0D56               	rlf	??___ftadd+1,w
  6341  16E0  0D57               	rlf	??___ftadd+2,w
  6342  16E1  00D8               	movwf	??___ftadd+3
  6343  16E2  0858               	movf	??___ftadd+3,w
  6344  16E3  00DA               	movwf	___ftadd@exp2
  6345  16E4  085B               	movf	___ftadd@exp1,w
  6346  16E5  1903               	btfsc	3,2
  6347  16E6  2EE8               	goto	u4961
  6348  16E7  2EE9               	goto	u4960
  6349  16E8                     u4961:
  6350  16E8  2EF9               	goto	l3567
  6351  16E9                     u4960:
  6352  16E9                     l3563:
  6353  16E9  085A               	movf	___ftadd@exp2,w
  6354  16EA  025B               	subwf	___ftadd@exp1,w
  6355  16EB  1803               	skipnc
  6356  16EC  2EEE               	goto	u4971
  6357  16ED  2EEF               	goto	u4970
  6358  16EE                     u4971:
  6359  16EE  2F00               	goto	l3571
  6360  16EF                     u4970:
  6361  16EF                     l3565:
  6362  16EF  085A               	movf	___ftadd@exp2,w
  6363  16F0  00D5               	movwf	??___ftadd
  6364  16F1  085B               	movf	___ftadd@exp1,w
  6365  16F2  02D5               	subwf	??___ftadd,f
  6366  16F3  3019               	movlw	25
  6367  16F4  0255               	subwf	??___ftadd,w
  6368  16F5  1C03               	skipc
  6369  16F6  2EF8               	goto	u4981
  6370  16F7  2EF9               	goto	u4980
  6371  16F8                     u4981:
  6372  16F8  2F00               	goto	l3571
  6373  16F9                     u4980:
  6374  16F9                     l3567:
  6375  16F9  0852               	movf	___ftadd@f2,w
  6376  16FA  00CF               	movwf	?___ftadd
  6377  16FB  0853               	movf	___ftadd@f2+1,w
  6378  16FC  00D0               	movwf	?___ftadd+1
  6379  16FD  0854               	movf	___ftadd@f2+2,w
  6380  16FE  00D1               	movwf	?___ftadd+2
  6381  16FF  2FFF               	goto	l707
  6382  1700                     l3571:
  6383  1700  085A               	movf	___ftadd@exp2,w
  6384  1701  1903               	btfsc	3,2
  6385  1702  2F04               	goto	u4991
  6386  1703  2F05               	goto	u4990
  6387  1704                     u4991:
  6388  1704  2F15               	goto	l710
  6389  1705                     u4990:
  6390  1705                     l3573:
  6391  1705  085B               	movf	___ftadd@exp1,w
  6392  1706  025A               	subwf	___ftadd@exp2,w
  6393  1707  1803               	skipnc
  6394  1708  2F0A               	goto	u5001
  6395  1709  2F0B               	goto	u5000
  6396  170A                     u5001:
  6397  170A  2F16               	goto	l3577
  6398  170B                     u5000:
  6399  170B                     l3575:
  6400  170B  085B               	movf	___ftadd@exp1,w
  6401  170C  00D5               	movwf	??___ftadd
  6402  170D  085A               	movf	___ftadd@exp2,w
  6403  170E  02D5               	subwf	??___ftadd,f
  6404  170F  3019               	movlw	25
  6405  1710  0255               	subwf	??___ftadd,w
  6406  1711  1C03               	skipc
  6407  1712  2F14               	goto	u5011
  6408  1713  2F15               	goto	u5010
  6409  1714                     u5011:
  6410  1714  2F16               	goto	l3577
  6411  1715                     u5010:
  6412  1715                     l710:
  6413  1715  2FFF               	goto	l707
  6414  1716                     l3577:
  6415  1716  3006               	movlw	6
  6416  1717  00D5               	movwf	??___ftadd
  6417  1718  0855               	movf	??___ftadd,w
  6418  1719  00D9               	movwf	___ftadd@sign
  6419  171A                     l3579:
  6420  171A  1FD1               	btfss	___ftadd@f1+2,7
  6421  171B  2F1D               	goto	u5021
  6422  171C  2F1E               	goto	u5020
  6423  171D                     u5021:
  6424  171D  2F1F               	goto	l711
  6425  171E                     u5020:
  6426  171E                     l3581:
  6427  171E  17D9               	bsf	___ftadd@sign,7
  6428  171F                     l711:
  6429  171F  1FD4               	btfss	___ftadd@f2+2,7
  6430  1720  2F22               	goto	u5031
  6431  1721  2F23               	goto	u5030
  6432  1722                     u5031:
  6433  1722  2F24               	goto	l712
  6434  1723                     u5030:
  6435  1723                     l3583:
  6436  1723  1759               	bsf	___ftadd@sign,6
  6437  1724                     l712:
  6438  1724  17D0               	bsf	___ftadd@f1+1,7
  6439  1725                     l3585:
  6440  1725  30FF               	movlw	255
  6441  1726  05CF               	andwf	___ftadd@f1,f
  6442  1727  30FF               	movlw	255
  6443  1728  05D0               	andwf	___ftadd@f1+1,f
  6444  1729  3000               	movlw	0
  6445  172A  05D1               	andwf	___ftadd@f1+2,f
  6446  172B                     l3587:
  6447  172B  17D3               	bsf	___ftadd@f2+1,7
  6448  172C  30FF               	movlw	255
  6449  172D  05D2               	andwf	___ftadd@f2,f
  6450  172E  30FF               	movlw	255
  6451  172F  05D3               	andwf	___ftadd@f2+1,f
  6452  1730  3000               	movlw	0
  6453  1731  05D4               	andwf	___ftadd@f2+2,f
  6454  1732  085A               	movf	___ftadd@exp2,w
  6455  1733  025B               	subwf	___ftadd@exp1,w
  6456  1734  1803               	skipnc
  6457  1735  2F37               	goto	u5041
  6458  1736  2F38               	goto	u5040
  6459  1737                     u5041:
  6460  1737  2F64               	goto	l3599
  6461  1738                     u5040:
  6462  1738                     l3589:
  6463  1738  3001               	movlw	1
  6464  1739                     u5055:
  6465  1739  1003               	clrc
  6466  173A  0DD2               	rlf	___ftadd@f2,f
  6467  173B  0DD3               	rlf	___ftadd@f2+1,f
  6468  173C  0DD4               	rlf	___ftadd@f2+2,f
  6469  173D  3EFF               	addlw	-1
  6470  173E  1D03               	skipz
  6471  173F  2F39               	goto	u5055
  6472  1740  3001               	movlw	1
  6473  1741  02DA               	subwf	___ftadd@exp2,f
  6474  1742                     l3591:
  6475  1742  085A               	movf	___ftadd@exp2,w
  6476  1743  065B               	xorwf	___ftadd@exp1,w
  6477  1744  1903               	skipnz
  6478  1745  2F47               	goto	u5061
  6479  1746  2F48               	goto	u5060
  6480  1747                     u5061:
  6481  1747  2F5D               	goto	l3597
  6482  1748                     u5060:
  6483  1748                     l3593:
  6484  1748  3001               	movlw	1
  6485  1749  02D9               	subwf	___ftadd@sign,f
  6486  174A  0859               	movf	___ftadd@sign,w
  6487  174B  3907               	andlw	7
  6488  174C  1D03               	btfss	3,2
  6489  174D  2F4F               	goto	u5071
  6490  174E  2F50               	goto	u5070
  6491  174F                     u5071:
  6492  174F  2F38               	goto	l3589
  6493  1750                     u5070:
  6494  1750  2F5D               	goto	l3597
  6495  1751                     l3595:
  6496  1751  3001               	movlw	1
  6497  1752                     u5085:
  6498  1752  1003               	clrc
  6499  1753  0CD1               	rrf	___ftadd@f1+2,f
  6500  1754  0CD0               	rrf	___ftadd@f1+1,f
  6501  1755  0CCF               	rrf	___ftadd@f1,f
  6502  1756  3EFF               	addlw	-1
  6503  1757  1D03               	skipz
  6504  1758  2F52               	goto	u5085
  6505  1759  3001               	movlw	1
  6506  175A  00D5               	movwf	??___ftadd
  6507  175B  0855               	movf	??___ftadd,w
  6508  175C  07DB               	addwf	___ftadd@exp1,f
  6509  175D                     l3597:
  6510  175D  085B               	movf	___ftadd@exp1,w
  6511  175E  065A               	xorwf	___ftadd@exp2,w
  6512  175F  1D03               	skipz
  6513  1760  2F62               	goto	u5091
  6514  1761  2F63               	goto	u5090
  6515  1762                     u5091:
  6516  1762  2F51               	goto	l3595
  6517  1763                     u5090:
  6518  1763  2F95               	goto	l721
  6519  1764                     l3599:
  6520  1764  085B               	movf	___ftadd@exp1,w
  6521  1765  025A               	subwf	___ftadd@exp2,w
  6522  1766  1803               	skipnc
  6523  1767  2F69               	goto	u5101
  6524  1768  2F6A               	goto	u5100
  6525  1769                     u5101:
  6526  1769  2F95               	goto	l721
  6527  176A                     u5100:
  6528  176A                     l3601:
  6529  176A  3001               	movlw	1
  6530  176B                     u5115:
  6531  176B  1003               	clrc
  6532  176C  0DCF               	rlf	___ftadd@f1,f
  6533  176D  0DD0               	rlf	___ftadd@f1+1,f
  6534  176E  0DD1               	rlf	___ftadd@f1+2,f
  6535  176F  3EFF               	addlw	-1
  6536  1770  1D03               	skipz
  6537  1771  2F6B               	goto	u5115
  6538  1772  3001               	movlw	1
  6539  1773  02DB               	subwf	___ftadd@exp1,f
  6540  1774                     l3603:
  6541  1774  085A               	movf	___ftadd@exp2,w
  6542  1775  065B               	xorwf	___ftadd@exp1,w
  6543  1776  1903               	skipnz
  6544  1777  2F79               	goto	u5121
  6545  1778  2F7A               	goto	u5120
  6546  1779                     u5121:
  6547  1779  2F8F               	goto	l3609
  6548  177A                     u5120:
  6549  177A                     l3605:
  6550  177A  3001               	movlw	1
  6551  177B  02D9               	subwf	___ftadd@sign,f
  6552  177C  0859               	movf	___ftadd@sign,w
  6553  177D  3907               	andlw	7
  6554  177E  1D03               	btfss	3,2
  6555  177F  2F81               	goto	u5131
  6556  1780  2F82               	goto	u5130
  6557  1781                     u5131:
  6558  1781  2F6A               	goto	l3601
  6559  1782                     u5130:
  6560  1782  2F8F               	goto	l3609
  6561  1783                     l3607:
  6562  1783  3001               	movlw	1
  6563  1784                     u5145:
  6564  1784  1003               	clrc
  6565  1785  0CD4               	rrf	___ftadd@f2+2,f
  6566  1786  0CD3               	rrf	___ftadd@f2+1,f
  6567  1787  0CD2               	rrf	___ftadd@f2,f
  6568  1788  3EFF               	addlw	-1
  6569  1789  1D03               	skipz
  6570  178A  2F84               	goto	u5145
  6571  178B  3001               	movlw	1
  6572  178C  00D5               	movwf	??___ftadd
  6573  178D  0855               	movf	??___ftadd,w
  6574  178E  07DA               	addwf	___ftadd@exp2,f
  6575  178F                     l3609:
  6576  178F  085B               	movf	___ftadd@exp1,w
  6577  1790  065A               	xorwf	___ftadd@exp2,w
  6578  1791  1D03               	skipz
  6579  1792  2F94               	goto	u5151
  6580  1793  2F95               	goto	u5150
  6581  1794                     u5151:
  6582  1794  2F83               	goto	l3607
  6583  1795                     u5150:
  6584  1795                     l721:
  6585  1795  1FD9               	btfss	___ftadd@sign,7
  6586  1796  2F98               	goto	u5161
  6587  1797  2F99               	goto	u5160
  6588  1798                     u5161:
  6589  1798  2FA9               	goto	l3613
  6590  1799                     u5160:
  6591  1799                     l3611:
  6592  1799  30FF               	movlw	255
  6593  179A  06CF               	xorwf	___ftadd@f1,f
  6594  179B  30FF               	movlw	255
  6595  179C  06D0               	xorwf	___ftadd@f1+1,f
  6596  179D  30FF               	movlw	255
  6597  179E  06D1               	xorwf	___ftadd@f1+2,f
  6598  179F  3001               	movlw	1
  6599  17A0  07CF               	addwf	___ftadd@f1,f
  6600  17A1  3000               	movlw	0
  6601  17A2  1803               	skipnc
  6602  17A3  3001               	movlw	1
  6603  17A4  07D0               	addwf	___ftadd@f1+1,f
  6604  17A5  3000               	movlw	0
  6605  17A6  1803               	skipnc
  6606  17A7  3001               	movlw	1
  6607  17A8  07D1               	addwf	___ftadd@f1+2,f
  6608  17A9                     l3613:
  6609  17A9  1F59               	btfss	___ftadd@sign,6
  6610  17AA  2FAC               	goto	u5171
  6611  17AB  2FAD               	goto	u5170
  6612  17AC                     u5171:
  6613  17AC  2FBD               	goto	l3617
  6614  17AD                     u5170:
  6615  17AD                     l3615:
  6616  17AD  30FF               	movlw	255
  6617  17AE  06D2               	xorwf	___ftadd@f2,f
  6618  17AF  30FF               	movlw	255
  6619  17B0  06D3               	xorwf	___ftadd@f2+1,f
  6620  17B1  30FF               	movlw	255
  6621  17B2  06D4               	xorwf	___ftadd@f2+2,f
  6622  17B3  3001               	movlw	1
  6623  17B4  07D2               	addwf	___ftadd@f2,f
  6624  17B5  3000               	movlw	0
  6625  17B6  1803               	skipnc
  6626  17B7  3001               	movlw	1
  6627  17B8  07D3               	addwf	___ftadd@f2+1,f
  6628  17B9  3000               	movlw	0
  6629  17BA  1803               	skipnc
  6630  17BB  3001               	movlw	1
  6631  17BC  07D4               	addwf	___ftadd@f2+2,f
  6632  17BD                     l3617:
  6633  17BD  01D9               	clrf	___ftadd@sign
  6634  17BE                     l3619:
  6635  17BE  084F               	movf	___ftadd@f1,w
  6636  17BF  07D2               	addwf	___ftadd@f2,f
  6637  17C0  0850               	movf	___ftadd@f1+1,w
  6638  17C1  1103               	clrz
  6639  17C2  1803               	skipnc
  6640  17C3  0A50               	incf	___ftadd@f1+1,w
  6641  17C4  1903               	skipnz
  6642  17C5  2FC7               	goto	u5181
  6643  17C6  07D3               	addwf	___ftadd@f2+1,f
  6644  17C7                     u5181:
  6645  17C7  0851               	movf	___ftadd@f1+2,w
  6646  17C8  1103               	clrz
  6647  17C9  1803               	skipnc
  6648  17CA  0A51               	incf	___ftadd@f1+2,w
  6649  17CB  1903               	skipnz
  6650  17CC  2FCE               	goto	u5182
  6651  17CD  07D4               	addwf	___ftadd@f2+2,f
  6652  17CE                     u5182:
  6653  17CE                     l3621:
  6654  17CE  1FD4               	btfss	___ftadd@f2+2,7
  6655  17CF  2FD1               	goto	u5191
  6656  17D0  2FD2               	goto	u5190
  6657  17D1                     u5191:
  6658  17D1  2FE4               	goto	l3627
  6659  17D2                     u5190:
  6660  17D2                     l3623:
  6661  17D2  30FF               	movlw	255
  6662  17D3  06D2               	xorwf	___ftadd@f2,f
  6663  17D4  30FF               	movlw	255
  6664  17D5  06D3               	xorwf	___ftadd@f2+1,f
  6665  17D6  30FF               	movlw	255
  6666  17D7  06D4               	xorwf	___ftadd@f2+2,f
  6667  17D8  3001               	movlw	1
  6668  17D9  07D2               	addwf	___ftadd@f2,f
  6669  17DA  3000               	movlw	0
  6670  17DB  1803               	skipnc
  6671  17DC  3001               	movlw	1
  6672  17DD  07D3               	addwf	___ftadd@f2+1,f
  6673  17DE  3000               	movlw	0
  6674  17DF  1803               	skipnc
  6675  17E0  3001               	movlw	1
  6676  17E1  07D4               	addwf	___ftadd@f2+2,f
  6677  17E2                     l3625:
  6678  17E2  01D9               	clrf	___ftadd@sign
  6679  17E3  0AD9               	incf	___ftadd@sign,f
  6680  17E4                     l3627:
  6681  17E4  0852               	movf	___ftadd@f2,w
  6682  17E5  00F3               	movwf	___ftpack@arg
  6683  17E6  0853               	movf	___ftadd@f2+1,w
  6684  17E7  00F4               	movwf	___ftpack@arg+1
  6685  17E8  0854               	movf	___ftadd@f2+2,w
  6686  17E9  00F5               	movwf	___ftpack@arg+2
  6687  17EA  085B               	movf	___ftadd@exp1,w
  6688  17EB  00D5               	movwf	??___ftadd
  6689  17EC  0855               	movf	??___ftadd,w
  6690  17ED  00F6               	movwf	___ftpack@exp
  6691  17EE  0859               	movf	___ftadd@sign,w
  6692  17EF  00D6               	movwf	??___ftadd+1
  6693  17F0  0856               	movf	??___ftadd+1,w
  6694  17F1  00F7               	movwf	___ftpack@sign
  6695  17F2  160A  118A  22C1  160A  118A  	fcall	___ftpack
  6696  17F7  0873               	movf	?___ftpack,w
  6697  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  6698  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  6699  17FA  00CF               	movwf	?___ftadd
  6700  17FB  0874               	movf	?___ftpack+1,w
  6701  17FC  00D0               	movwf	?___ftadd+1
  6702  17FD  0875               	movf	?___ftpack+2,w
  6703  17FE  00D1               	movwf	?___ftadd+2
  6704  17FF                     l707:
  6705  17FF  0008               	return
  6706  1800                     __end_of___ftadd:
  6707                           
  6708                           	psect	text22
  6709  1D83                     __ptext22:	
  6710 ;; *************** function ___ftneg *****************
  6711 ;; Defined at:
  6712 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  f1              3    3[COMMON] float 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  3    3[COMMON] float 
  6719 ;; Registers used:
  6720 ;;		wreg
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6726 ;;      Params:         3       0       0       0       0
  6727 ;;      Locals:         0       0       0       0       0
  6728 ;;      Temps:          0       0       0       0       0
  6729 ;;      Totals:         3       0       0       0       0
  6730 ;;Total ram usage:        3 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    2
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_sprintf
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function ___ftneg
  6742  1D83                     ___ftneg:
  6743  1D83                     l2787:	
  6744                           ;incstack = 0
  6745                           ; Regs used in ___ftneg: [wreg]
  6746                           
  6747  1D83  0875               	movf	___ftneg@f1+2,w
  6748  1D84  0474               	iorwf	___ftneg@f1+1,w
  6749  1D85  0473               	iorwf	___ftneg@f1,w
  6750  1D86  1903               	skipnz
  6751  1D87  2D89               	goto	u3721
  6752  1D88  2D8A               	goto	u3720
  6753  1D89                     u3721:
  6754  1D89  2D8C               	goto	l2791
  6755  1D8A                     u3720:
  6756  1D8A                     l2789:
  6757  1D8A  3080               	movlw	128
  6758  1D8B  06F5               	xorwf	___ftneg@f1+2,f
  6759  1D8C                     l2791:
  6760  1D8C                     l781:
  6761  1D8C  0008               	return
  6762  1D8D                     __end_of___ftneg:
  6763                           
  6764                           	psect	text23
  6765  1F06                     __ptext23:	
  6766 ;; *************** function ___ftge *****************
  6767 ;; Defined at:
  6768 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  ff1             3    0[BANK0 ] float 
  6771 ;;  ff2             3    3[BANK0 ] float 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;		None               void
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6783 ;;      Params:         0       6       0       0       0
  6784 ;;      Locals:         0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0
  6786 ;;      Totals:         0       6       0       0       0
  6787 ;;Total ram usage:        6 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    2
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_sprintf
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function ___ftge
  6799  1F06                     ___ftge:
  6800  1F06                     l3961:	
  6801                           ;incstack = 0
  6802                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6803                           
  6804  1F06  1283               	bcf	3,5	;RP0=0, select bank0
  6805  1F07  1303               	bcf	3,6	;RP1=0, select bank0
  6806  1F08  1FA2               	btfss	___ftge@ff1+2,7
  6807  1F09  2F0B               	goto	u5901
  6808  1F0A  2F0C               	goto	u5900
  6809  1F0B                     u5901:
  6810  1F0B  2F19               	goto	l3965
  6811  1F0C                     u5900:
  6812  1F0C                     l3963:
  6813  1F0C  0820               	movf	___ftge@ff1,w
  6814  1F0D  3C00               	sublw	0
  6815  1F0E  00A0               	movwf	___ftge@ff1
  6816  1F0F  0821               	movf	___ftge@ff1+1,w
  6817  1F10  1C03               	skipc
  6818  1F11  0F21               	incfsz	___ftge@ff1+1,w
  6819  1F12  3C00               	sublw	0
  6820  1F13  00A1               	movwf	___ftge@ff1+1
  6821  1F14  0822               	movf	___ftge@ff1+2,w
  6822  1F15  1C03               	skipc
  6823  1F16  0F22               	incfsz	___ftge@ff1+2,w
  6824  1F17  3C80               	sublw	128
  6825  1F18  00A2               	movwf	___ftge@ff1+2
  6826  1F19                     l3965:
  6827  1F19  1FA5               	btfss	___ftge@ff2+2,7
  6828  1F1A  2F1C               	goto	u5911
  6829  1F1B  2F1D               	goto	u5910
  6830  1F1C                     u5911:
  6831  1F1C  2F2A               	goto	l3969
  6832  1F1D                     u5910:
  6833  1F1D                     l3967:
  6834  1F1D  0823               	movf	___ftge@ff2,w
  6835  1F1E  3C00               	sublw	0
  6836  1F1F  00A3               	movwf	___ftge@ff2
  6837  1F20  0824               	movf	___ftge@ff2+1,w
  6838  1F21  1C03               	skipc
  6839  1F22  0F24               	incfsz	___ftge@ff2+1,w
  6840  1F23  3C00               	sublw	0
  6841  1F24  00A4               	movwf	___ftge@ff2+1
  6842  1F25  0825               	movf	___ftge@ff2+2,w
  6843  1F26  1C03               	skipc
  6844  1F27  0F25               	incfsz	___ftge@ff2+2,w
  6845  1F28  3C80               	sublw	128
  6846  1F29  00A5               	movwf	___ftge@ff2+2
  6847  1F2A                     l3969:
  6848  1F2A  3080               	movlw	128
  6849  1F2B  06A2               	xorwf	___ftge@ff1+2,f
  6850  1F2C                     l3971:
  6851  1F2C  3080               	movlw	128
  6852  1F2D  06A5               	xorwf	___ftge@ff2+2,f
  6853  1F2E                     l3973:
  6854  1F2E  0825               	movf	___ftge@ff2+2,w
  6855  1F2F  0222               	subwf	___ftge@ff1+2,w
  6856  1F30  1D03               	skipz
  6857  1F31  2F38               	goto	u5925
  6858  1F32  0824               	movf	___ftge@ff2+1,w
  6859  1F33  0221               	subwf	___ftge@ff1+1,w
  6860  1F34  1D03               	skipz
  6861  1F35  2F38               	goto	u5925
  6862  1F36  0823               	movf	___ftge@ff2,w
  6863  1F37  0220               	subwf	___ftge@ff1,w
  6864  1F38                     u5925:
  6865  1F38  1803               	skipnc
  6866  1F39  2F3B               	goto	u5921
  6867  1F3A  2F3C               	goto	u5920
  6868  1F3B                     u5921:
  6869  1F3B  2F3E               	goto	l3977
  6870  1F3C                     u5920:
  6871  1F3C                     l3975:
  6872  1F3C  1003               	clrc
  6873  1F3D  2F3F               	goto	l764
  6874  1F3E                     l3977:
  6875  1F3E  1403               	setc
  6876  1F3F                     l764:
  6877  1F3F  0008               	return
  6878  1F40                     __end_of___ftge:
  6879                           
  6880                           	psect	text24
  6881  1DB8                     __ptext24:	
  6882 ;; *************** function _setup *****************
  6883 ;; Defined at:
  6884 ;;		line 132 in file "main.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  1    wreg      void 
  6891 ;; Registers used:
  6892 ;;		status,2
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6898 ;;      Params:         0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0
  6901 ;;      Totals:         0       0       0       0       0
  6902 ;;Total ram usage:        0 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    2
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_main
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function _setup
  6914  1DB8                     _setup:
  6915  1DB8                     l2875:	
  6916                           ;incstack = 0
  6917                           ; Regs used in _setup: [status,2]
  6918                           
  6919                           
  6920                           ;main.c: 133:     ANSEL = 0;
  6921  1DB8  1683               	bsf	3,5	;RP0=1, select bank3
  6922  1DB9  1703               	bsf	3,6	;RP1=1, select bank3
  6923  1DBA  0188               	clrf	8	;volatile
  6924                           
  6925                           ;main.c: 134:     ANSELH = 0;
  6926  1DBB  0189               	clrf	9	;volatile
  6927                           
  6928                           ;main.c: 135:     PORTD = 0;
  6929  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  6930  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  6931  1DBE  0188               	clrf	8	;volatile
  6932                           
  6933                           ;main.c: 136:     PORTE = 0;
  6934  1DBF  0189               	clrf	9	;volatile
  6935                           
  6936                           ;main.c: 137:     PORTC = 0;
  6937  1DC0  0187               	clrf	7	;volatile
  6938                           
  6939                           ;main.c: 138:     TRISA = 0;
  6940  1DC1  1683               	bsf	3,5	;RP0=1, select bank1
  6941  1DC2  1303               	bcf	3,6	;RP1=0, select bank1
  6942  1DC3  0185               	clrf	5	;volatile
  6943                           
  6944                           ;main.c: 140:     TRISD = 0;
  6945  1DC4  0188               	clrf	8	;volatile
  6946                           
  6947                           ;main.c: 141:     TRISE = 0;
  6948  1DC5  0189               	clrf	9	;volatile
  6949  1DC6                     l2877:
  6950                           
  6951                           ;main.c: 143:     INTCONbits.PEIE = 1;
  6952  1DC6  170B               	bsf	11,6	;volatile
  6953  1DC7                     l2879:
  6954                           
  6955                           ;main.c: 144:     PIE1bits.RCIE = 1;
  6956  1DC7  168C               	bsf	12,5	;volatile
  6957  1DC8                     l2881:
  6958                           
  6959                           ;main.c: 145:     PIR1bits.RCIF = 0;
  6960  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  6961  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  6962  1DCA  128C               	bcf	12,5	;volatile
  6963  1DCB                     l2883:
  6964                           
  6965                           ;main.c: 146:     INTCONbits.GIE = 1;
  6966  1DCB  178B               	bsf	11,7	;volatile
  6967  1DCC                     l97:
  6968  1DCC  0008               	return
  6969  1DCD                     __end_of_setup:
  6970                           
  6971                           	psect	text25
  6972  1E63                     __ptext25:	
  6973 ;; *************** function _cursor *****************
  6974 ;; Defined at:
  6975 ;;		line 57 in file "LCD.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  a               1    wreg     unsigned char 
  6978 ;;  b               1    7[COMMON] unsigned char 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  a               1    1[BANK0 ] unsigned char 
  6981 ;;  x               1    2[BANK0 ] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6991 ;;      Params:         1       0       0       0       0
  6992 ;;      Locals:         0       2       0       0       0
  6993 ;;      Temps:          0       1       0       0       0
  6994 ;;      Totals:         1       3       0       0       0
  6995 ;;Total ram usage:        4 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    4
  6998 ;; This function calls:
  6999 ;;		_CMDs
  7000 ;; This function is called by:
  7001 ;;		_main
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function _cursor
  7007  1E63                     _cursor:
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in _cursor: [wreg+status,2+status,0+pclath+cstack]
  7011                           ;cursor@a stored from wreg
  7012  1E63  1283               	bcf	3,5	;RP0=0, select bank0
  7013  1E64  1303               	bcf	3,6	;RP1=0, select bank0
  7014  1E65  00A1               	movwf	cursor@a
  7015  1E66                     l4045:
  7016                           
  7017                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  7018  1E66  0321               	decf	cursor@a,w
  7019  1E67  1D03               	btfss	3,2
  7020  1E68  2E6A               	goto	u6021
  7021  1E69  2E6B               	goto	u6020
  7022  1E6A                     u6021:
  7023  1E6A  2E77               	goto	l4051
  7024  1E6B                     u6020:
  7025  1E6B                     l4047:
  7026                           
  7027                           ;LCD.c: 60:        x = 0x80 + b;
  7028  1E6B  0877               	movf	cursor@b,w
  7029  1E6C  3E80               	addlw	128
  7030  1E6D  00A0               	movwf	??_cursor
  7031  1E6E  0820               	movf	??_cursor,w
  7032  1E6F  00A2               	movwf	cursor@x
  7033  1E70                     l4049:
  7034                           
  7035                           ;LCD.c: 61:        CMDs(x);
  7036  1E70  0822               	movf	cursor@x,w
  7037  1E71  160A  158A  261E  160A  158A  	fcall	_CMDs
  7038                           
  7039                           ;LCD.c: 62:     }
  7040  1E76  2E88               	goto	l162
  7041  1E77                     l4051:
  7042  1E77  3002               	movlw	2
  7043  1E78  0621               	xorwf	cursor@a,w
  7044  1E79  1D03               	btfss	3,2
  7045  1E7A  2E7C               	goto	u6031
  7046  1E7B  2E7D               	goto	u6030
  7047  1E7C                     u6031:
  7048  1E7C  2E88               	goto	l162
  7049  1E7D                     u6030:
  7050  1E7D                     l4053:
  7051                           
  7052                           ;LCD.c: 64:         x = 0xC0 + b;
  7053  1E7D  0877               	movf	cursor@b,w
  7054  1E7E  3EC0               	addlw	192
  7055  1E7F  00A0               	movwf	??_cursor
  7056  1E80  0820               	movf	??_cursor,w
  7057  1E81  00A2               	movwf	cursor@x
  7058  1E82                     l4055:
  7059                           
  7060                           ;LCD.c: 65:         CMDs(x);
  7061  1E82  0822               	movf	cursor@x,w
  7062  1E83  160A  158A  261E  160A  158A  	fcall	_CMDs
  7063  1E88                     l162:
  7064  1E88  0008               	return
  7065  1E89                     __end_of_cursor:
  7066                           
  7067                           	psect	text26
  7068  1D79                     __ptext26:	
  7069 ;; *************** function _config_tx *****************
  7070 ;; Defined at:
  7071 ;;		line 9 in file "USART.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		None
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7085 ;;      Params:         0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    2
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_main
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function _config_tx
  7101  1D79                     _config_tx:
  7102  1D79                     l2887:	
  7103                           ;incstack = 0
  7104                           ; Regs used in _config_tx: []
  7105                           
  7106                           
  7107                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  7108  1D79  1683               	bsf	3,5	;RP0=1, select bank1
  7109  1D7A  1303               	bcf	3,6	;RP1=0, select bank1
  7110  1D7B  1398               	bcf	24,7	;volatile
  7111                           
  7112                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  7113  1D7C  1318               	bcf	24,6	;volatile
  7114                           
  7115                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  7116  1D7D  1698               	bsf	24,5	;volatile
  7117                           
  7118                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  7119  1D7E  1218               	bcf	24,4	;volatile
  7120                           
  7121                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  7122  1D7F  1118               	bcf	24,2	;volatile
  7123                           
  7124                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  7125  1D80  1098               	bcf	24,1	;volatile
  7126                           
  7127                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  7128  1D81  1018               	bcf	24,0	;volatile
  7129  1D82                     l235:
  7130  1D82  0008               	return
  7131  1D83                     __end_of_config_tx:
  7132                           
  7133                           	psect	text27
  7134  1D69                     __ptext27:	
  7135 ;; *************** function _config_rc *****************
  7136 ;; Defined at:
  7137 ;;		line 19 in file "USART.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		status,2
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7151 ;;      Params:         0       0       0       0       0
  7152 ;;      Locals:         0       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0
  7154 ;;      Totals:         0       0       0       0       0
  7155 ;;Total ram usage:        0 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    2
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_main
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _config_rc
  7167  1D69                     _config_rc:
  7168  1D69                     l2889:	
  7169                           ;incstack = 0
  7170                           ; Regs used in _config_rc: [status,2]
  7171                           
  7172                           
  7173                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  7174  1D69  1283               	bcf	3,5	;RP0=0, select bank0
  7175  1D6A  1303               	bcf	3,6	;RP1=0, select bank0
  7176  1D6B  1798               	bsf	24,7	;volatile
  7177                           
  7178                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  7179  1D6C  1318               	bcf	24,6	;volatile
  7180                           
  7181                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  7182  1D6D  1298               	bcf	24,5	;volatile
  7183                           
  7184                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  7185  1D6E  1618               	bsf	24,4	;volatile
  7186  1D6F                     l2891:
  7187                           
  7188                           ;USART.c: 24:     RCREG = 0;
  7189  1D6F  019A               	clrf	26	;volatile
  7190  1D70                     l238:
  7191  1D70  0008               	return
  7192  1D71                     __end_of_config_rc:
  7193                           
  7194                           	psect	text28
  7195  1249                     __ptext28:	
  7196 ;; *************** function _configLCD *****************
  7197 ;; Defined at:
  7198 ;;		line 69 in file "LCD.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      void 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0, pclath, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7212 ;;      Params:         0       0       0       0       0
  7213 ;;      Locals:         0       0       0       0       0
  7214 ;;      Temps:          0       2       0       0       0
  7215 ;;      Totals:         0       2       0       0       0
  7216 ;;Total ram usage:        2 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    4
  7219 ;; This function calls:
  7220 ;;		_CMDs
  7221 ;; This function is called by:
  7222 ;;		_main
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function _configLCD
  7228  1249                     _configLCD:
  7229  1249                     l4019:	
  7230                           ;incstack = 0
  7231                           ; Regs used in _configLCD: [wreg+status,2+status,0+pclath+cstack]
  7232                           
  7233                           
  7234                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7235  1249  301A               	movlw	26
  7236  124A  1283               	bcf	3,5	;RP0=0, select bank0
  7237  124B  1303               	bcf	3,6	;RP1=0, select bank0
  7238  124C  00A1               	movwf	??_configLCD+1
  7239  124D  30F7               	movlw	247
  7240  124E  00A0               	movwf	??_configLCD
  7241  124F                     u6677:
  7242  124F  0BA0               	decfsz	??_configLCD,f
  7243  1250  2A4F               	goto	u6677
  7244  1251  0BA1               	decfsz	??_configLCD+1,f
  7245  1252  2A4F               	goto	u6677
  7246  1253  2A54               	nop2
  7247  1254                     l4021:
  7248                           
  7249                           ;LCD.c: 71:     CMDs (0x30);
  7250  1254  3030               	movlw	48
  7251  1255  160A  158A  261E  160A  118A  	fcall	_CMDs
  7252  125A                     l4023:
  7253                           
  7254                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7255  125A  3007               	movlw	7
  7256  125B  1283               	bcf	3,5	;RP0=0, select bank0
  7257  125C  1303               	bcf	3,6	;RP1=0, select bank0
  7258  125D  00A1               	movwf	??_configLCD+1
  7259  125E  307C               	movlw	124
  7260  125F  00A0               	movwf	??_configLCD
  7261  1260                     u6687:
  7262  1260  0BA0               	decfsz	??_configLCD,f
  7263  1261  2A60               	goto	u6687
  7264  1262  0BA1               	decfsz	??_configLCD+1,f
  7265  1263  2A60               	goto	u6687
  7266  1264  0000               	nop
  7267                           
  7268                           ;LCD.c: 73:     CMDs (0x30);
  7269  1265  3030               	movlw	48
  7270  1266  160A  158A  261E  160A  118A  	fcall	_CMDs
  7271  126B                     l4025:
  7272                           
  7273                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7274  126B  3020               	movlw	32
  7275  126C  1283               	bcf	3,5	;RP0=0, select bank0
  7276  126D  1303               	bcf	3,6	;RP1=0, select bank0
  7277  126E  00A0               	movwf	??_configLCD
  7278  126F                     u6697:
  7279  126F  0BA0               	decfsz	??_configLCD,f
  7280  1270  2A6F               	goto	u6697
  7281  1271  0000               	nop
  7282  1272                     l4027:
  7283                           
  7284                           ;LCD.c: 75:     CMDs (0x30);
  7285  1272  3030               	movlw	48
  7286  1273  160A  158A  261E  160A  118A  	fcall	_CMDs
  7287                           
  7288                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7289  1278  3020               	movlw	32
  7290  1279  1283               	bcf	3,5	;RP0=0, select bank0
  7291  127A  1303               	bcf	3,6	;RP1=0, select bank0
  7292  127B  00A0               	movwf	??_configLCD
  7293  127C                     u6707:
  7294  127C  0BA0               	decfsz	??_configLCD,f
  7295  127D  2A7C               	goto	u6707
  7296  127E  0000               	nop
  7297  127F                     l4029:
  7298                           
  7299                           ;LCD.c: 77:     CMDs (0x38);
  7300  127F  3038               	movlw	56
  7301  1280  160A  158A  261E  160A  118A  	fcall	_CMDs
  7302  1285                     l4031:
  7303                           
  7304                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7305  1285  3013               	movlw	19
  7306  1286  1283               	bcf	3,5	;RP0=0, select bank0
  7307  1287  1303               	bcf	3,6	;RP1=0, select bank0
  7308  1288  00A0               	movwf	??_configLCD
  7309  1289                     u6717:
  7310  1289  0BA0               	decfsz	??_configLCD,f
  7311  128A  2A89               	goto	u6717
  7312                           
  7313                           ;LCD.c: 79:     CMDs (0x08);
  7314  128B  3008               	movlw	8
  7315  128C  160A  158A  261E  160A  118A  	fcall	_CMDs
  7316  1291                     l4033:
  7317                           
  7318                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7319  1291  3013               	movlw	19
  7320  1292  1283               	bcf	3,5	;RP0=0, select bank0
  7321  1293  1303               	bcf	3,6	;RP1=0, select bank0
  7322  1294  00A0               	movwf	??_configLCD
  7323  1295                     u6727:
  7324  1295  0BA0               	decfsz	??_configLCD,f
  7325  1296  2A95               	goto	u6727
  7326  1297                     l4035:
  7327                           
  7328                           ;LCD.c: 81:     CMDs (0x01);
  7329  1297  3001               	movlw	1
  7330  1298  160A  158A  261E  160A  118A  	fcall	_CMDs
  7331                           
  7332                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7333  129D  3007               	movlw	7
  7334  129E  1283               	bcf	3,5	;RP0=0, select bank0
  7335  129F  1303               	bcf	3,6	;RP1=0, select bank0
  7336  12A0  00A1               	movwf	??_configLCD+1
  7337  12A1  307C               	movlw	124
  7338  12A2  00A0               	movwf	??_configLCD
  7339  12A3                     u6737:
  7340  12A3  0BA0               	decfsz	??_configLCD,f
  7341  12A4  2AA3               	goto	u6737
  7342  12A5  0BA1               	decfsz	??_configLCD+1,f
  7343  12A6  2AA3               	goto	u6737
  7344  12A7  0000               	nop
  7345  12A8                     l4037:
  7346                           
  7347                           ;LCD.c: 83:     CMDs (0x06);
  7348  12A8  3006               	movlw	6
  7349  12A9  160A  158A  261E  160A  118A  	fcall	_CMDs
  7350  12AE                     l4039:
  7351                           
  7352                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7353  12AE  3013               	movlw	19
  7354  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  7355  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  7356  12B1  00A0               	movwf	??_configLCD
  7357  12B2                     u6747:
  7358  12B2  0BA0               	decfsz	??_configLCD,f
  7359  12B3  2AB2               	goto	u6747
  7360                           
  7361                           ;LCD.c: 85:     CMDs (0x0C);
  7362  12B4  300C               	movlw	12
  7363  12B5  160A  158A  261E  160A  118A  	fcall	_CMDs
  7364  12BA                     l4041:
  7365                           
  7366                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7367  12BA  3013               	movlw	19
  7368  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  7369  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  7370  12BD  00A0               	movwf	??_configLCD
  7371  12BE                     u6757:
  7372  12BE  0BA0               	decfsz	??_configLCD,f
  7373  12BF  2ABE               	goto	u6757
  7374  12C0                     l165:
  7375  12C0  0008               	return
  7376  12C1                     __end_of_configLCD:
  7377                           
  7378                           	psect	text29
  7379  14B4                     __ptext29:	
  7380 ;; *************** function _configADC *****************
  7381 ;; Defined at:
  7382 ;;		line 7 in file "ADC.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  ch              1    wreg     unsigned char 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  ch              1    5[COMMON] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      unsigned char 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7396 ;;      Params:         0       0       0       0       0
  7397 ;;      Locals:         1       0       0       0       0
  7398 ;;      Temps:          2       0       0       0       0
  7399 ;;      Totals:         3       0       0       0       0
  7400 ;;Total ram usage:        3 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    2
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_main
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function _configADC
  7412  14B4                     _configADC:
  7413                           
  7414                           ;incstack = 0
  7415                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  7416                           ;configADC@ch stored from wreg
  7417  14B4  00F5               	movwf	configADC@ch
  7418  14B5                     l2939:
  7419                           
  7420                           ;ADC.c: 8:     ADCON0bits.ADCS = 1;
  7421  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  7422  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  7423  14B7  081F               	movf	31,w	;volatile
  7424  14B8  393F               	andlw	-193
  7425  14B9  3840               	iorlw	64
  7426  14BA  009F               	movwf	31	;volatile
  7427  14BB                     l2941:
  7428                           
  7429                           ;ADC.c: 9:     ADCON1 = 0;
  7430  14BB  1683               	bsf	3,5	;RP0=1, select bank1
  7431  14BC  1303               	bcf	3,6	;RP1=0, select bank1
  7432  14BD  019F               	clrf	31	;volatile
  7433                           
  7434                           ;ADC.c: 11:     switch (ch) {
  7435  14BE  2D59               	goto	l2977
  7436  14BF                     l196:	
  7437                           ;ADC.c: 12:         case 0:
  7438                           
  7439                           
  7440                           ;ADC.c: 13:             TRISAbits.TRISA0 = 1;
  7441  14BF  1405               	bsf	5,0	;volatile
  7442                           
  7443                           ;ADC.c: 14:             ANSELbits.ANS0 = 1;
  7444  14C0  1683               	bsf	3,5	;RP0=1, select bank3
  7445  14C1  1703               	bsf	3,6	;RP1=1, select bank3
  7446  14C2  1408               	bsf	8,0	;volatile
  7447  14C3                     l2943:
  7448                           
  7449                           ;ADC.c: 15:             ADCON0bits.CHS = 0;
  7450  14C3  30C3               	movlw	-61
  7451  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  7452  14C5  1303               	bcf	3,6	;RP1=0, select bank0
  7453  14C6  059F               	andwf	31,f	;volatile
  7454                           
  7455                           ;ADC.c: 16:             break;
  7456  14C7  2D8D               	goto	l197
  7457  14C8                     l198:	
  7458                           ;ADC.c: 17:         case 1:
  7459                           
  7460                           
  7461                           ;ADC.c: 18:             TRISAbits.TRISA1=1;
  7462  14C8  1485               	bsf	5,1	;volatile
  7463                           
  7464                           ;ADC.c: 19:             ANSELbits.ANS1=1;
  7465  14C9  1683               	bsf	3,5	;RP0=1, select bank3
  7466  14CA  1703               	bsf	3,6	;RP1=1, select bank3
  7467  14CB  1488               	bsf	8,1	;volatile
  7468  14CC                     l2945:
  7469                           
  7470                           ;ADC.c: 20:             ADCON0bits.CHS=1;
  7471  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  7472  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  7473  14CE  081F               	movf	31,w	;volatile
  7474  14CF  39C3               	andlw	-61
  7475  14D0  3804               	iorlw	4
  7476  14D1  009F               	movwf	31	;volatile
  7477                           
  7478                           ;ADC.c: 21:             break;
  7479  14D2  2D8D               	goto	l197
  7480  14D3                     l199:	
  7481                           ;ADC.c: 22:         case 2:
  7482                           
  7483                           
  7484                           ;ADC.c: 23:             TRISAbits.TRISA2=1;
  7485  14D3  1505               	bsf	5,2	;volatile
  7486                           
  7487                           ;ADC.c: 24:             ANSELbits.ANS2=1;
  7488  14D4  1683               	bsf	3,5	;RP0=1, select bank3
  7489  14D5  1703               	bsf	3,6	;RP1=1, select bank3
  7490  14D6  1508               	bsf	8,2	;volatile
  7491  14D7                     l2947:
  7492                           
  7493                           ;ADC.c: 25:             ADCON0bits.CHS=2;
  7494  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  7495  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  7496  14D9  081F               	movf	31,w	;volatile
  7497  14DA  39C3               	andlw	-61
  7498  14DB  3808               	iorlw	8
  7499  14DC  009F               	movwf	31	;volatile
  7500                           
  7501                           ;ADC.c: 26:             break;
  7502  14DD  2D8D               	goto	l197
  7503  14DE                     l200:	
  7504                           ;ADC.c: 27:         case 3:
  7505                           
  7506                           
  7507                           ;ADC.c: 28:             TRISAbits.TRISA3=1;
  7508  14DE  1585               	bsf	5,3	;volatile
  7509                           
  7510                           ;ADC.c: 29:             ANSELbits.ANS3=1;
  7511  14DF  1683               	bsf	3,5	;RP0=1, select bank3
  7512  14E0  1703               	bsf	3,6	;RP1=1, select bank3
  7513  14E1  1588               	bsf	8,3	;volatile
  7514  14E2                     l2949:
  7515                           
  7516                           ;ADC.c: 30:             ADCON0bits.CHS=3;
  7517  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  7518  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  7519  14E4  081F               	movf	31,w	;volatile
  7520  14E5  39C3               	andlw	-61
  7521  14E6  380C               	iorlw	12
  7522  14E7  009F               	movwf	31	;volatile
  7523                           
  7524                           ;ADC.c: 31:             break;
  7525  14E8  2D8D               	goto	l197
  7526  14E9                     l201:	
  7527                           ;ADC.c: 32:         case 4:
  7528                           
  7529                           
  7530                           ;ADC.c: 33:             TRISAbits.TRISA5=1;
  7531  14E9  1685               	bsf	5,5	;volatile
  7532                           
  7533                           ;ADC.c: 34:             ANSELbits.ANS4=1;
  7534  14EA  1683               	bsf	3,5	;RP0=1, select bank3
  7535  14EB  1703               	bsf	3,6	;RP1=1, select bank3
  7536  14EC  1608               	bsf	8,4	;volatile
  7537  14ED                     l2951:
  7538                           
  7539                           ;ADC.c: 35:             ADCON0bits.CHS=4;
  7540  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  7541  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  7542  14EF  081F               	movf	31,w	;volatile
  7543  14F0  39C3               	andlw	-61
  7544  14F1  3810               	iorlw	16
  7545  14F2  009F               	movwf	31	;volatile
  7546                           
  7547                           ;ADC.c: 36:             break;
  7548  14F3  2D8D               	goto	l197
  7549  14F4                     l202:	
  7550                           ;ADC.c: 37:         case 5:
  7551                           
  7552                           
  7553                           ;ADC.c: 38:             TRISEbits.TRISE0=1;
  7554  14F4  1409               	bsf	9,0	;volatile
  7555                           
  7556                           ;ADC.c: 39:             ANSELbits.ANS5=1;
  7557  14F5  1683               	bsf	3,5	;RP0=1, select bank3
  7558  14F6  1703               	bsf	3,6	;RP1=1, select bank3
  7559  14F7  1688               	bsf	8,5	;volatile
  7560  14F8                     l2953:
  7561                           
  7562                           ;ADC.c: 40:             ADCON0bits.CHS=5;
  7563  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  7564  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  7565  14FA  081F               	movf	31,w	;volatile
  7566  14FB  39C3               	andlw	-61
  7567  14FC  3814               	iorlw	20
  7568  14FD  009F               	movwf	31	;volatile
  7569                           
  7570                           ;ADC.c: 41:             break;
  7571  14FE  2D8D               	goto	l197
  7572  14FF                     l203:	
  7573                           ;ADC.c: 42:         case 6:
  7574                           
  7575                           
  7576                           ;ADC.c: 43:             TRISEbits.TRISE1=1;
  7577  14FF  1489               	bsf	9,1	;volatile
  7578                           
  7579                           ;ADC.c: 44:             ANSELbits.ANS6=1;
  7580  1500  1683               	bsf	3,5	;RP0=1, select bank3
  7581  1501  1703               	bsf	3,6	;RP1=1, select bank3
  7582  1502  1708               	bsf	8,6	;volatile
  7583  1503                     l2955:
  7584                           
  7585                           ;ADC.c: 45:             ADCON0bits.CHS=6;
  7586  1503  1283               	bcf	3,5	;RP0=0, select bank0
  7587  1504  1303               	bcf	3,6	;RP1=0, select bank0
  7588  1505  081F               	movf	31,w	;volatile
  7589  1506  39C3               	andlw	-61
  7590  1507  3818               	iorlw	24
  7591  1508  009F               	movwf	31	;volatile
  7592                           
  7593                           ;ADC.c: 46:             break;
  7594  1509  2D8D               	goto	l197
  7595  150A                     l204:	
  7596                           ;ADC.c: 47:         case 7:
  7597                           
  7598                           
  7599                           ;ADC.c: 48:             TRISEbits.TRISE2=1;
  7600  150A  1509               	bsf	9,2	;volatile
  7601                           
  7602                           ;ADC.c: 49:             ANSELbits.ANS7=1;
  7603  150B  1683               	bsf	3,5	;RP0=1, select bank3
  7604  150C  1703               	bsf	3,6	;RP1=1, select bank3
  7605  150D  1788               	bsf	8,7	;volatile
  7606  150E                     l2957:
  7607                           
  7608                           ;ADC.c: 50:             ADCON0bits.CHS=7;
  7609  150E  1283               	bcf	3,5	;RP0=0, select bank0
  7610  150F  1303               	bcf	3,6	;RP1=0, select bank0
  7611  1510  081F               	movf	31,w	;volatile
  7612  1511  39C3               	andlw	-61
  7613  1512  381C               	iorlw	28
  7614  1513  009F               	movwf	31	;volatile
  7615                           
  7616                           ;ADC.c: 51:             break;
  7617  1514  2D8D               	goto	l197
  7618  1515                     l205:	
  7619                           ;ADC.c: 52:         case 8:
  7620                           
  7621                           
  7622                           ;ADC.c: 53:             TRISBbits.TRISB2=1;
  7623  1515  1506               	bsf	6,2	;volatile
  7624                           
  7625                           ;ADC.c: 54:             ANSELHbits.ANS8=1;
  7626  1516  1683               	bsf	3,5	;RP0=1, select bank3
  7627  1517  1703               	bsf	3,6	;RP1=1, select bank3
  7628  1518  1409               	bsf	9,0	;volatile
  7629  1519                     l2959:
  7630                           
  7631                           ;ADC.c: 55:             ADCON0bits.CHS=8;
  7632  1519  1283               	bcf	3,5	;RP0=0, select bank0
  7633  151A  1303               	bcf	3,6	;RP1=0, select bank0
  7634  151B  081F               	movf	31,w	;volatile
  7635  151C  39C3               	andlw	-61
  7636  151D  3820               	iorlw	32
  7637  151E  009F               	movwf	31	;volatile
  7638                           
  7639                           ;ADC.c: 56:             break;
  7640  151F  2D8D               	goto	l197
  7641  1520                     l206:	
  7642                           ;ADC.c: 57:         case 9:
  7643                           
  7644                           
  7645                           ;ADC.c: 58:             TRISBbits.TRISB3=1;
  7646  1520  1586               	bsf	6,3	;volatile
  7647                           
  7648                           ;ADC.c: 59:             ANSELHbits.ANS9=1;
  7649  1521  1683               	bsf	3,5	;RP0=1, select bank3
  7650  1522  1703               	bsf	3,6	;RP1=1, select bank3
  7651  1523  1489               	bsf	9,1	;volatile
  7652  1524                     l2961:
  7653                           
  7654                           ;ADC.c: 60:             ADCON0bits.CHS=9;
  7655  1524  1283               	bcf	3,5	;RP0=0, select bank0
  7656  1525  1303               	bcf	3,6	;RP1=0, select bank0
  7657  1526  081F               	movf	31,w	;volatile
  7658  1527  39C3               	andlw	-61
  7659  1528  3824               	iorlw	36
  7660  1529  009F               	movwf	31	;volatile
  7661                           
  7662                           ;ADC.c: 61:             break;
  7663  152A  2D8D               	goto	l197
  7664  152B                     l207:	
  7665                           ;ADC.c: 62:         case 10:
  7666                           
  7667                           
  7668                           ;ADC.c: 63:             TRISBbits.TRISB1=1;
  7669  152B  1486               	bsf	6,1	;volatile
  7670                           
  7671                           ;ADC.c: 64:             ANSELHbits.ANS10=1;
  7672  152C  1683               	bsf	3,5	;RP0=1, select bank3
  7673  152D  1703               	bsf	3,6	;RP1=1, select bank3
  7674  152E  1509               	bsf	9,2	;volatile
  7675  152F                     l2963:
  7676                           
  7677                           ;ADC.c: 65:             ADCON0bits.CHS=10;
  7678  152F  1283               	bcf	3,5	;RP0=0, select bank0
  7679  1530  1303               	bcf	3,6	;RP1=0, select bank0
  7680  1531  081F               	movf	31,w	;volatile
  7681  1532  39C3               	andlw	-61
  7682  1533  3828               	iorlw	40
  7683  1534  009F               	movwf	31	;volatile
  7684                           
  7685                           ;ADC.c: 66:             break;
  7686  1535  2D8D               	goto	l197
  7687  1536                     l208:	
  7688                           ;ADC.c: 67:         case 11:
  7689                           
  7690                           
  7691                           ;ADC.c: 68:             TRISBbits.TRISB4=1;
  7692  1536  1606               	bsf	6,4	;volatile
  7693                           
  7694                           ;ADC.c: 69:             ANSELHbits.ANS11=1;
  7695  1537  1683               	bsf	3,5	;RP0=1, select bank3
  7696  1538  1703               	bsf	3,6	;RP1=1, select bank3
  7697  1539  1589               	bsf	9,3	;volatile
  7698  153A                     l2965:
  7699                           
  7700                           ;ADC.c: 70:             ADCON0bits.CHS=11;
  7701  153A  1283               	bcf	3,5	;RP0=0, select bank0
  7702  153B  1303               	bcf	3,6	;RP1=0, select bank0
  7703  153C  081F               	movf	31,w	;volatile
  7704  153D  39C3               	andlw	-61
  7705  153E  382C               	iorlw	44
  7706  153F  009F               	movwf	31	;volatile
  7707                           
  7708                           ;ADC.c: 71:             break;
  7709  1540  2D8D               	goto	l197
  7710  1541                     l209:	
  7711                           ;ADC.c: 72:         case 12:
  7712                           
  7713                           
  7714                           ;ADC.c: 73:             TRISBbits.TRISB0=1;
  7715  1541  1406               	bsf	6,0	;volatile
  7716                           
  7717                           ;ADC.c: 74:             ANSELHbits.ANS12=1;
  7718  1542  1683               	bsf	3,5	;RP0=1, select bank3
  7719  1543  1703               	bsf	3,6	;RP1=1, select bank3
  7720  1544  1609               	bsf	9,4	;volatile
  7721  1545                     l2967:
  7722                           
  7723                           ;ADC.c: 75:             ADCON0bits.CHS=12;
  7724  1545  1283               	bcf	3,5	;RP0=0, select bank0
  7725  1546  1303               	bcf	3,6	;RP1=0, select bank0
  7726  1547  081F               	movf	31,w	;volatile
  7727  1548  39C3               	andlw	-61
  7728  1549  3830               	iorlw	48
  7729  154A  009F               	movwf	31	;volatile
  7730                           
  7731                           ;ADC.c: 76:             break;
  7732  154B  2D8D               	goto	l197
  7733  154C                     l210:	
  7734                           ;ADC.c: 77:         case 13:
  7735                           
  7736                           
  7737                           ;ADC.c: 78:             TRISBbits.TRISB5=1;
  7738  154C  1686               	bsf	6,5	;volatile
  7739                           
  7740                           ;ADC.c: 79:             ANSELHbits.ANS13=1;
  7741  154D  1683               	bsf	3,5	;RP0=1, select bank3
  7742  154E  1703               	bsf	3,6	;RP1=1, select bank3
  7743  154F  1689               	bsf	9,5	;volatile
  7744  1550                     l2969:
  7745                           
  7746                           ;ADC.c: 80:             ADCON0bits.CHS=13;
  7747  1550  1283               	bcf	3,5	;RP0=0, select bank0
  7748  1551  1303               	bcf	3,6	;RP1=0, select bank0
  7749  1552  081F               	movf	31,w	;volatile
  7750  1553  39C3               	andlw	-61
  7751  1554  3834               	iorlw	52
  7752  1555  009F               	movwf	31	;volatile
  7753                           
  7754                           ;ADC.c: 81:             break;
  7755  1556  2D8D               	goto	l197
  7756  1557                     l2971:
  7757                           
  7758                           ;ADC.c: 83:             return 0;
  7759  1557  3000               	movlw	0
  7760  1558  2D9C               	goto	l212
  7761  1559                     l2977:
  7762  1559  0875               	movf	configADC@ch,w
  7763  155A  00F3               	movwf	??_configADC
  7764  155B  01F4               	clrf	??_configADC+1
  7765                           
  7766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7767                           ; Switch size 1, requested type "simple"
  7768                           ; Number of cases is 1, Range of values is 0 to 0
  7769                           ; switch strategies available:
  7770                           ; Name         Instructions Cycles
  7771                           ; simple_byte            4     3 (average)
  7772                           ; direct_byte           11     8 (fixed)
  7773                           ; jumptable            260     6 (fixed)
  7774                           ;	Chosen strategy is simple_byte
  7775  155C  0874               	movf	??_configADC+1,w
  7776  155D  3A00               	xorlw	0	; case 0
  7777  155E  1903               	skipnz
  7778  155F  2D61               	goto	l4481
  7779  1560  2D57               	goto	l2971
  7780  1561                     l4481:
  7781                           
  7782                           ; Switch size 1, requested type "simple"
  7783                           ; Number of cases is 14, Range of values is 0 to 13
  7784                           ; switch strategies available:
  7785                           ; Name         Instructions Cycles
  7786                           ; simple_byte           43    22 (average)
  7787                           ; direct_byte           50     8 (fixed)
  7788                           ; jumptable            260     6 (fixed)
  7789                           ;	Chosen strategy is simple_byte
  7790  1561  0873               	movf	??_configADC,w
  7791  1562  3A00               	xorlw	0	; case 0
  7792  1563  1903               	skipnz
  7793  1564  2CBF               	goto	l196
  7794  1565  3A01               	xorlw	1	; case 1
  7795  1566  1903               	skipnz
  7796  1567  2CC8               	goto	l198
  7797  1568  3A03               	xorlw	3	; case 2
  7798  1569  1903               	skipnz
  7799  156A  2CD3               	goto	l199
  7800  156B  3A01               	xorlw	1	; case 3
  7801  156C  1903               	skipnz
  7802  156D  2CDE               	goto	l200
  7803  156E  3A07               	xorlw	7	; case 4
  7804  156F  1903               	skipnz
  7805  1570  2CE9               	goto	l201
  7806  1571  3A01               	xorlw	1	; case 5
  7807  1572  1903               	skipnz
  7808  1573  2CF4               	goto	l202
  7809  1574  3A03               	xorlw	3	; case 6
  7810  1575  1903               	skipnz
  7811  1576  2CFF               	goto	l203
  7812  1577  3A01               	xorlw	1	; case 7
  7813  1578  1903               	skipnz
  7814  1579  2D0A               	goto	l204
  7815  157A  3A0F               	xorlw	15	; case 8
  7816  157B  1903               	skipnz
  7817  157C  2D15               	goto	l205
  7818  157D  3A01               	xorlw	1	; case 9
  7819  157E  1903               	skipnz
  7820  157F  2D20               	goto	l206
  7821  1580  3A03               	xorlw	3	; case 10
  7822  1581  1903               	skipnz
  7823  1582  2D2B               	goto	l207
  7824  1583  3A01               	xorlw	1	; case 11
  7825  1584  1903               	skipnz
  7826  1585  2D36               	goto	l208
  7827  1586  3A07               	xorlw	7	; case 12
  7828  1587  1903               	skipnz
  7829  1588  2D41               	goto	l209
  7830  1589  3A01               	xorlw	1	; case 13
  7831  158A  1903               	skipnz
  7832  158B  2D4C               	goto	l210
  7833  158C  2D57               	goto	l2971
  7834  158D                     l197:
  7835                           
  7836                           ;ADC.c: 86:     ADCON0bits.ADON = 1;
  7837  158D  141F               	bsf	31,0	;volatile
  7838  158E                     l2979:
  7839                           
  7840                           ;ADC.c: 87:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  7841  158E  3053               	movlw	83
  7842  158F  00F3               	movwf	??_configADC
  7843  1590                     u6767:
  7844  1590  0BF3               	decfsz	??_configADC,f
  7845  1591  2D90               	goto	u6767
  7846  1592                     l2981:
  7847                           
  7848                           ;ADC.c: 88:     ADCON0bits.GO = 1;
  7849  1592  1283               	bcf	3,5	;RP0=0, select bank0
  7850  1593  1303               	bcf	3,6	;RP1=0, select bank0
  7851  1594  149F               	bsf	31,1	;volatile
  7852  1595                     l2983:
  7853                           
  7854                           ;ADC.c: 91:     if (ADCON0bits.GO_DONE == 1){
  7855  1595  1C9F               	btfss	31,1	;volatile
  7856  1596  2D98               	goto	u3971
  7857  1597  2D99               	goto	u3970
  7858  1598                     u3971:
  7859  1598  2D9A               	goto	l214
  7860  1599                     u3970:
  7861  1599  2D95               	goto	l2983
  7862  159A                     l214:	
  7863                           ;ADC.c: 94:     else{
  7864                           
  7865                           
  7866                           ;ADC.c: 95:         ADCON0bits.ADON = 0;
  7867  159A  101F               	bcf	31,0	;volatile
  7868  159B                     l2989:
  7869                           
  7870                           ;ADC.c: 96:         return ADRESH;
  7871  159B  081E               	movf	30,w	;volatile
  7872  159C                     l212:
  7873  159C  0008               	return
  7874  159D                     __end_of_configADC:
  7875                           
  7876                           	psect	text30
  7877  1D99                     __ptext30:	
  7878 ;; *************** function _clear_LCD *****************
  7879 ;; Defined at:
  7880 ;;		line 52 in file "LCD.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0, pclath, cstack
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7894 ;;      Params:         0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0
  7897 ;;      Totals:         0       0       0       0       0
  7898 ;;Total ram usage:        0 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    4
  7901 ;; This function calls:
  7902 ;;		_CMDs
  7903 ;; This function is called by:
  7904 ;;		_main
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           
  7909                           ;psect for function _clear_LCD
  7910  1D99                     _clear_LCD:
  7911  1D99                     l4043:	
  7912                           ;incstack = 0
  7913                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  7914                           
  7915                           
  7916                           ;LCD.c: 53:     CMDs(0);
  7917  1D99  3000               	movlw	0
  7918  1D9A  160A  158A  261E  160A  158A  	fcall	_CMDs
  7919                           
  7920                           ;LCD.c: 54:     CMDs(1);
  7921  1D9F  3001               	movlw	1
  7922  1DA0  160A  158A  261E  160A  158A  	fcall	_CMDs
  7923  1DA5                     l156:
  7924  1DA5  0008               	return
  7925  1DA6                     __end_of_clear_LCD:
  7926                           
  7927                           	psect	text31
  7928  1E1E                     __ptext31:	
  7929 ;; *************** function _CMDs *****************
  7930 ;; Defined at:
  7931 ;;		line 42 in file "LCD.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  a               1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  a               1    6[COMMON] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, pclath, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7945 ;;      Params:         0       0       0       0       0
  7946 ;;      Locals:         1       0       0       0       0
  7947 ;;      Temps:          2       0       0       0       0
  7948 ;;      Totals:         3       0       0       0       0
  7949 ;;Total ram usage:        3 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    3
  7952 ;; This function calls:
  7953 ;;		_pin
  7954 ;; This function is called by:
  7955 ;;		_clear_LCD
  7956 ;;		_cursor
  7957 ;;		_configLCD
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function _CMDs
  7963  1E1E                     _CMDs:
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  7967                           ;CMDs@a stored from wreg
  7968  1E1E  00F6               	movwf	CMDs@a
  7969  1E1F                     l3729:
  7970                           
  7971                           ;LCD.c: 43:     RE0 = 0;
  7972  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  7973  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  7974  1E21  1009               	bcf	9,0	;volatile
  7975  1E22                     l3731:
  7976                           
  7977                           ;LCD.c: 44:     pin(a);
  7978  1E22  0876               	movf	CMDs@a,w
  7979  1E23  160A  158A  277C  160A  158A  	fcall	_pin
  7980  1E28                     l3733:
  7981                           
  7982                           ;LCD.c: 45:     RE1 = 1;
  7983  1E28  1283               	bcf	3,5	;RP0=0, select bank0
  7984  1E29  1303               	bcf	3,6	;RP1=0, select bank0
  7985  1E2A  1489               	bsf	9,1	;volatile
  7986  1E2B                     l3735:
  7987                           
  7988                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7989  1E2B  2E2C               	nop2	;2 cycle nop
  7990  1E2C  2E2D               	nop2	;2 cycle nop
  7991  1E2D  0000               	nop
  7992  1E2E                     l3737:
  7993                           
  7994                           ;LCD.c: 47:     RE1 = 0;
  7995  1E2E  1283               	bcf	3,5	;RP0=0, select bank0
  7996  1E2F  1303               	bcf	3,6	;RP1=0, select bank0
  7997  1E30  1089               	bcf	9,1	;volatile
  7998  1E31                     l3739:
  7999                           
  8000                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8001  1E31  2E32               	nop2	;2 cycle nop
  8002  1E32  2E33               	nop2	;2 cycle nop
  8003  1E33  0000               	nop
  8004  1E34                     l3741:
  8005                           
  8006                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8007  1E34  3003               	movlw	3
  8008  1E35  00F5               	movwf	??_CMDs+1
  8009  1E36  3097               	movlw	151
  8010  1E37  00F4               	movwf	??_CMDs
  8011  1E38                     u6777:
  8012  1E38  0BF4               	decfsz	??_CMDs,f
  8013  1E39  2E38               	goto	u6777
  8014  1E3A  0BF5               	decfsz	??_CMDs+1,f
  8015  1E3B  2E38               	goto	u6777
  8016  1E3C  2E3D               	nop2
  8017  1E3D                     l153:
  8018  1E3D  0008               	return
  8019  1E3E                     __end_of_CMDs:
  8020                           
  8021                           	psect	text32
  8022  1F7C                     __ptext32:	
  8023 ;; *************** function _pin *****************
  8024 ;; Defined at:
  8025 ;;		line 7 in file "LCD.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  a               1    wreg     unsigned char 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  a               1    3[COMMON] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8039 ;;      Params:         0       0       0       0       0
  8040 ;;      Locals:         1       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0
  8042 ;;      Totals:         1       0       0       0       0
  8043 ;;Total ram usage:        1 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    2
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_CMDs
  8050 ;;		_write_char
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _pin
  8056  1F7C                     _pin:
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in _pin: [wreg]
  8060                           ;pin@a stored from wreg
  8061  1F7C  00F3               	movwf	pin@a
  8062  1F7D                     l3461:
  8063                           
  8064                           ;LCD.c: 8:     if(a & 1){
  8065  1F7D  1C73               	btfss	pin@a,0
  8066  1F7E  2F80               	goto	u4691
  8067  1F7F  2F81               	goto	u4690
  8068  1F80                     u4691:
  8069  1F80  2F85               	goto	l134
  8070  1F81                     u4690:
  8071  1F81                     l3463:
  8072                           
  8073                           ;LCD.c: 9:         RD0=1;}
  8074  1F81  1283               	bcf	3,5	;RP0=0, select bank0
  8075  1F82  1303               	bcf	3,6	;RP1=0, select bank0
  8076  1F83  1408               	bsf	8,0	;volatile
  8077  1F84  2F88               	goto	l135
  8078  1F85                     l134:	
  8079                           ;LCD.c: 10:     else{
  8080                           
  8081                           
  8082                           ;LCD.c: 11:         RD0=0;}
  8083  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  8084  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  8085  1F87  1008               	bcf	8,0	;volatile
  8086  1F88                     l135:
  8087                           
  8088                           ;LCD.c: 12:     if(a & 2){
  8089  1F88  1CF3               	btfss	pin@a,1
  8090  1F89  2F8B               	goto	u4701
  8091  1F8A  2F8C               	goto	u4700
  8092  1F8B                     u4701:
  8093  1F8B  2F8E               	goto	l136
  8094  1F8C                     u4700:
  8095  1F8C                     l3465:
  8096                           
  8097                           ;LCD.c: 13:         RD1=1;}
  8098  1F8C  1488               	bsf	8,1	;volatile
  8099  1F8D  2F8F               	goto	l137
  8100  1F8E                     l136:	
  8101                           ;LCD.c: 14:     else{
  8102                           
  8103                           
  8104                           ;LCD.c: 15:         RD1=0;}
  8105  1F8E  1088               	bcf	8,1	;volatile
  8106  1F8F                     l137:
  8107                           
  8108                           ;LCD.c: 16:     if(a & 4){
  8109  1F8F  1D73               	btfss	pin@a,2
  8110  1F90  2F92               	goto	u4711
  8111  1F91  2F93               	goto	u4710
  8112  1F92                     u4711:
  8113  1F92  2F95               	goto	l138
  8114  1F93                     u4710:
  8115  1F93                     l3467:
  8116                           
  8117                           ;LCD.c: 17:         RD2=1;}
  8118  1F93  1508               	bsf	8,2	;volatile
  8119  1F94  2F96               	goto	l139
  8120  1F95                     l138:	
  8121                           ;LCD.c: 18:     else{
  8122                           
  8123                           
  8124                           ;LCD.c: 19:         RD2=0;}
  8125  1F95  1108               	bcf	8,2	;volatile
  8126  1F96                     l139:
  8127                           
  8128                           ;LCD.c: 20:     if(a & 8){
  8129  1F96  1DF3               	btfss	pin@a,3
  8130  1F97  2F99               	goto	u4721
  8131  1F98  2F9A               	goto	u4720
  8132  1F99                     u4721:
  8133  1F99  2F9C               	goto	l140
  8134  1F9A                     u4720:
  8135  1F9A                     l3469:
  8136                           
  8137                           ;LCD.c: 21:         RD3=1;}
  8138  1F9A  1588               	bsf	8,3	;volatile
  8139  1F9B  2F9D               	goto	l141
  8140  1F9C                     l140:	
  8141                           ;LCD.c: 22:     else{
  8142                           
  8143                           
  8144                           ;LCD.c: 23:         RD3=0;}
  8145  1F9C  1188               	bcf	8,3	;volatile
  8146  1F9D                     l141:
  8147                           
  8148                           ;LCD.c: 24:     if(a & 16){
  8149  1F9D  1E73               	btfss	pin@a,4
  8150  1F9E  2FA0               	goto	u4731
  8151  1F9F  2FA1               	goto	u4730
  8152  1FA0                     u4731:
  8153  1FA0  2FA3               	goto	l142
  8154  1FA1                     u4730:
  8155  1FA1                     l3471:
  8156                           
  8157                           ;LCD.c: 25:         RD4=1;}
  8158  1FA1  1608               	bsf	8,4	;volatile
  8159  1FA2  2FA4               	goto	l143
  8160  1FA3                     l142:	
  8161                           ;LCD.c: 26:     else{
  8162                           
  8163                           
  8164                           ;LCD.c: 27:         RD4=0;}
  8165  1FA3  1208               	bcf	8,4	;volatile
  8166  1FA4                     l143:
  8167                           
  8168                           ;LCD.c: 28:     if(a & 32){
  8169  1FA4  1EF3               	btfss	pin@a,5
  8170  1FA5  2FA7               	goto	u4741
  8171  1FA6  2FA8               	goto	u4740
  8172  1FA7                     u4741:
  8173  1FA7  2FAA               	goto	l144
  8174  1FA8                     u4740:
  8175  1FA8                     l3473:
  8176                           
  8177                           ;LCD.c: 29:         RD5=1;}
  8178  1FA8  1688               	bsf	8,5	;volatile
  8179  1FA9  2FAB               	goto	l145
  8180  1FAA                     l144:	
  8181                           ;LCD.c: 30:     else{
  8182                           
  8183                           
  8184                           ;LCD.c: 31:         RD5=0;}
  8185  1FAA  1288               	bcf	8,5	;volatile
  8186  1FAB                     l145:
  8187                           
  8188                           ;LCD.c: 32:     if(a & 64){
  8189  1FAB  1F73               	btfss	pin@a,6
  8190  1FAC  2FAE               	goto	u4751
  8191  1FAD  2FAF               	goto	u4750
  8192  1FAE                     u4751:
  8193  1FAE  2FB1               	goto	l146
  8194  1FAF                     u4750:
  8195  1FAF                     l3475:
  8196                           
  8197                           ;LCD.c: 33:         RD6=1;}
  8198  1FAF  1708               	bsf	8,6	;volatile
  8199  1FB0  2FB2               	goto	l147
  8200  1FB1                     l146:	
  8201                           ;LCD.c: 34:     else{
  8202                           
  8203                           
  8204                           ;LCD.c: 35:         RD6=0;}
  8205  1FB1  1308               	bcf	8,6	;volatile
  8206  1FB2                     l147:
  8207                           
  8208                           ;LCD.c: 36:     if(a & 128){
  8209  1FB2  1FF3               	btfss	pin@a,7
  8210  1FB3  2FB5               	goto	u4761
  8211  1FB4  2FB6               	goto	u4760
  8212  1FB5                     u4761:
  8213  1FB5  2FB8               	goto	l148
  8214  1FB6                     u4760:
  8215  1FB6                     l3477:
  8216                           
  8217                           ;LCD.c: 37:         RD7=1;}
  8218  1FB6  1788               	bsf	8,7	;volatile
  8219  1FB7  2FB9               	goto	l150
  8220  1FB8                     l148:	
  8221                           ;LCD.c: 38:     else{
  8222                           
  8223                           
  8224                           ;LCD.c: 39:         RD7=0;}
  8225  1FB8  1388               	bcf	8,7	;volatile
  8226  1FB9                     l150:
  8227  1FB9  0008               	return
  8228  1FBA                     __end_of_pin:
  8229                           
  8230                           	psect	text33
  8231  0802                     __ptext33:	
  8232 ;; *************** function __baudios *****************
  8233 ;; Defined at:
  8234 ;;		line 5 in file "USART.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8248 ;;      Params:         0       0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0
  8251 ;;      Totals:         0       0       0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    2
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_main
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function __baudios
  8264  0802                     __baudios:
  8265  0802                     l2885:	
  8266                           ;incstack = 0
  8267                           ; Regs used in __baudios: [wreg]
  8268                           
  8269                           
  8270                           ;USART.c: 6:     SPBRG = 12;
  8271  0802  300C               	movlw	12
  8272  0803  1683               	bsf	3,5	;RP0=1, select bank1
  8273  0804  1303               	bcf	3,6	;RP1=0, select bank1
  8274  0805  0099               	movwf	25	;volatile
  8275  0806                     l232:
  8276  0806  0008               	return
  8277  0807                     __end_of__baudios:
  8278                           
  8279                           	psect	text34
  8280  1EB2                     __ptext34:	
  8281 ;; *************** function ___awtoft *****************
  8282 ;; Defined at:
  8283 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  c               2    3[BANK0 ] int 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  sign            1    8[BANK0 ] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  3    3[BANK0 ] float 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8297 ;;      Params:         0       3       0       0       0
  8298 ;;      Locals:         0       1       0       0       0
  8299 ;;      Temps:          0       2       0       0       0
  8300 ;;      Totals:         0       6       0       0       0
  8301 ;;Total ram usage:        6 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    3
  8304 ;; This function calls:
  8305 ;;		___ftpack
  8306 ;; This function is called by:
  8307 ;;		_main
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function ___awtoft
  8313  1EB2                     ___awtoft:
  8314  1EB2                     l4357:	
  8315                           ;incstack = 0
  8316                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8317                           
  8318  1EB2  1283               	bcf	3,5	;RP0=0, select bank0
  8319  1EB3  1303               	bcf	3,6	;RP1=0, select bank0
  8320  1EB4  01A8               	clrf	___awtoft@sign
  8321  1EB5                     l4359:
  8322  1EB5  1FA4               	btfss	___awtoft@c+1,7
  8323  1EB6  2EB8               	goto	u6611
  8324  1EB7  2EB9               	goto	u6610
  8325  1EB8                     u6611:
  8326  1EB8  2EC0               	goto	l4365
  8327  1EB9                     u6610:
  8328  1EB9                     l4361:
  8329  1EB9  09A3               	comf	___awtoft@c,f
  8330  1EBA  09A4               	comf	___awtoft@c+1,f
  8331  1EBB  0AA3               	incf	___awtoft@c,f
  8332  1EBC  1903               	skipnz
  8333  1EBD  0AA4               	incf	___awtoft@c+1,f
  8334  1EBE                     l4363:
  8335  1EBE  01A8               	clrf	___awtoft@sign
  8336  1EBF  0AA8               	incf	___awtoft@sign,f
  8337  1EC0                     l4365:
  8338  1EC0  0823               	movf	___awtoft@c,w
  8339  1EC1  00F3               	movwf	___ftpack@arg
  8340  1EC2  0824               	movf	___awtoft@c+1,w
  8341  1EC3  00F4               	movwf	___ftpack@arg+1
  8342  1EC4  01F5               	clrf	___ftpack@arg+2
  8343  1EC5  308E               	movlw	142
  8344  1EC6  00A6               	movwf	??___awtoft
  8345  1EC7  0826               	movf	??___awtoft,w
  8346  1EC8  00F6               	movwf	___ftpack@exp
  8347  1EC9  0828               	movf	___awtoft@sign,w
  8348  1ECA  00A7               	movwf	??___awtoft+1
  8349  1ECB  0827               	movf	??___awtoft+1,w
  8350  1ECC  00F7               	movwf	___ftpack@sign
  8351  1ECD  160A  118A  22C1  160A  158A  	fcall	___ftpack
  8352  1ED2  0873               	movf	?___ftpack,w
  8353  1ED3  1283               	bcf	3,5	;RP0=0, select bank0
  8354  1ED4  1303               	bcf	3,6	;RP1=0, select bank0
  8355  1ED5  00A3               	movwf	?___awtoft
  8356  1ED6  0874               	movf	?___ftpack+1,w
  8357  1ED7  00A4               	movwf	?___awtoft+1
  8358  1ED8  0875               	movf	?___ftpack+2,w
  8359  1ED9  00A5               	movwf	?___awtoft+2
  8360  1EDA                     l663:
  8361  1EDA  0008               	return
  8362  1EDB                     __end_of___awtoft:
  8363                           
  8364                           	psect	text35
  8365  12C1                     __ptext35:	
  8366 ;; *************** function ___ftpack *****************
  8367 ;; Defined at:
  8368 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  arg             3    3[COMMON] unsigned um
  8371 ;;  exp             1    6[COMMON] unsigned char 
  8372 ;;  sign            1    7[COMMON] unsigned char 
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  3    3[COMMON] float 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8384 ;;      Params:         5       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0
  8386 ;;      Temps:          0       3       0       0       0
  8387 ;;      Totals:         5       3       0       0       0
  8388 ;;Total ram usage:        8 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    2
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		___awtoft
  8395 ;;		___ftadd
  8396 ;;		___ftmul
  8397 ;;		___lltoft
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           
  8402                           ;psect for function ___ftpack
  8403  12C1                     ___ftpack:
  8404  12C1                     l3429:	
  8405                           ;incstack = 0
  8406                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8407                           
  8408  12C1  0876               	movf	___ftpack@exp,w
  8409  12C2  1903               	btfsc	3,2
  8410  12C3  2AC5               	goto	u4571
  8411  12C4  2AC6               	goto	u4570
  8412  12C5                     u4571:
  8413  12C5  2ACD               	goto	l3433
  8414  12C6                     u4570:
  8415  12C6                     l3431:
  8416  12C6  0875               	movf	___ftpack@arg+2,w
  8417  12C7  0474               	iorwf	___ftpack@arg+1,w
  8418  12C8  0473               	iorwf	___ftpack@arg,w
  8419  12C9  1D03               	skipz
  8420  12CA  2ACC               	goto	u4581
  8421  12CB  2ACD               	goto	u4580
  8422  12CC                     u4581:
  8423  12CC  2AE2               	goto	l3439
  8424  12CD                     u4580:
  8425  12CD                     l3433:
  8426  12CD  3000               	movlw	0
  8427  12CE  00F3               	movwf	?___ftpack
  8428  12CF  3000               	movlw	0
  8429  12D0  00F4               	movwf	?___ftpack+1
  8430  12D1  3000               	movlw	0
  8431  12D2  00F5               	movwf	?___ftpack+2
  8432  12D3  2B42               	goto	l686
  8433  12D4                     l3437:
  8434  12D4  3001               	movlw	1
  8435  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  8436  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  8437  12D7  00A0               	movwf	??___ftpack
  8438  12D8  0820               	movf	??___ftpack,w
  8439  12D9  07F6               	addwf	___ftpack@exp,f
  8440  12DA  3001               	movlw	1
  8441  12DB                     u4595:
  8442  12DB  1003               	clrc
  8443  12DC  0CF5               	rrf	___ftpack@arg+2,f
  8444  12DD  0CF4               	rrf	___ftpack@arg+1,f
  8445  12DE  0CF3               	rrf	___ftpack@arg,f
  8446  12DF  3EFF               	addlw	-1
  8447  12E0  1D03               	skipz
  8448  12E1  2ADB               	goto	u4595
  8449  12E2                     l3439:
  8450  12E2  30FE               	movlw	254
  8451  12E3  0575               	andwf	___ftpack@arg+2,w
  8452  12E4  1D03               	btfss	3,2
  8453  12E5  2AE7               	goto	u4601
  8454  12E6  2AE8               	goto	u4600
  8455  12E7                     u4601:
  8456  12E7  2AD4               	goto	l3437
  8457  12E8                     u4600:
  8458  12E8  2B01               	goto	l690
  8459  12E9                     l3441:
  8460  12E9  3001               	movlw	1
  8461  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  8462  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  8463  12EC  00A0               	movwf	??___ftpack
  8464  12ED  0820               	movf	??___ftpack,w
  8465  12EE  07F6               	addwf	___ftpack@exp,f
  8466  12EF                     l3443:
  8467  12EF  3001               	movlw	1
  8468  12F0  07F3               	addwf	___ftpack@arg,f
  8469  12F1  3000               	movlw	0
  8470  12F2  1803               	skipnc
  8471  12F3  3001               	movlw	1
  8472  12F4  07F4               	addwf	___ftpack@arg+1,f
  8473  12F5  3000               	movlw	0
  8474  12F6  1803               	skipnc
  8475  12F7  3001               	movlw	1
  8476  12F8  07F5               	addwf	___ftpack@arg+2,f
  8477  12F9                     l3445:
  8478  12F9  3001               	movlw	1
  8479  12FA                     u4615:
  8480  12FA  1003               	clrc
  8481  12FB  0CF5               	rrf	___ftpack@arg+2,f
  8482  12FC  0CF4               	rrf	___ftpack@arg+1,f
  8483  12FD  0CF3               	rrf	___ftpack@arg,f
  8484  12FE  3EFF               	addlw	-1
  8485  12FF  1D03               	skipz
  8486  1300  2AFA               	goto	u4615
  8487  1301                     l690:
  8488  1301  30FF               	movlw	255
  8489  1302  0575               	andwf	___ftpack@arg+2,w
  8490  1303  1D03               	btfss	3,2
  8491  1304  2B06               	goto	u4621
  8492  1305  2B07               	goto	u4620
  8493  1306                     u4621:
  8494  1306  2AE9               	goto	l3441
  8495  1307                     u4620:
  8496  1307  2B12               	goto	l3449
  8497  1308                     l3447:
  8498  1308  3001               	movlw	1
  8499  1309  02F6               	subwf	___ftpack@exp,f
  8500  130A  3001               	movlw	1
  8501  130B                     u4635:
  8502  130B  1003               	clrc
  8503  130C  0DF3               	rlf	___ftpack@arg,f
  8504  130D  0DF4               	rlf	___ftpack@arg+1,f
  8505  130E  0DF5               	rlf	___ftpack@arg+2,f
  8506  130F  3EFF               	addlw	-1
  8507  1310  1D03               	skipz
  8508  1311  2B0B               	goto	u4635
  8509  1312                     l3449:
  8510  1312  1BF4               	btfsc	___ftpack@arg+1,7
  8511  1313  2B15               	goto	u4641
  8512  1314  2B16               	goto	u4640
  8513  1315                     u4641:
  8514  1315  2B1C               	goto	l697
  8515  1316                     u4640:
  8516  1316                     l3451:
  8517  1316  3002               	movlw	2
  8518  1317  0276               	subwf	___ftpack@exp,w
  8519  1318  1803               	skipnc
  8520  1319  2B1B               	goto	u4651
  8521  131A  2B1C               	goto	u4650
  8522  131B                     u4651:
  8523  131B  2B08               	goto	l3447
  8524  131C                     u4650:
  8525  131C                     l697:
  8526  131C  1876               	btfsc	___ftpack@exp,0
  8527  131D  2B1F               	goto	u4661
  8528  131E  2B20               	goto	u4660
  8529  131F                     u4661:
  8530  131F  2B26               	goto	l698
  8531  1320                     u4660:
  8532  1320                     l3453:
  8533  1320  30FF               	movlw	255
  8534  1321  05F3               	andwf	___ftpack@arg,f
  8535  1322  307F               	movlw	127
  8536  1323  05F4               	andwf	___ftpack@arg+1,f
  8537  1324  30FF               	movlw	255
  8538  1325  05F5               	andwf	___ftpack@arg+2,f
  8539  1326                     l698:
  8540  1326  1003               	clrc
  8541  1327  0CF6               	rrf	___ftpack@exp,f
  8542  1328                     l3455:
  8543  1328  0876               	movf	___ftpack@exp,w
  8544  1329  1283               	bcf	3,5	;RP0=0, select bank0
  8545  132A  1303               	bcf	3,6	;RP1=0, select bank0
  8546  132B  00A0               	movwf	??___ftpack
  8547  132C  01A1               	clrf	??___ftpack+1
  8548  132D  01A2               	clrf	??___ftpack+2
  8549  132E  3010               	movlw	16
  8550  132F                     u4675:
  8551  132F  1003               	clrc
  8552  1330  0DA0               	rlf	??___ftpack,f
  8553  1331  0DA1               	rlf	??___ftpack+1,f
  8554  1332  0DA2               	rlf	??___ftpack+2,f
  8555  1333                     u4670:
  8556  1333  3EFF               	addlw	-1
  8557  1334  1D03               	skipz
  8558  1335  2B2F               	goto	u4675
  8559  1336  0820               	movf	??___ftpack,w
  8560  1337  04F3               	iorwf	___ftpack@arg,f
  8561  1338  0821               	movf	??___ftpack+1,w
  8562  1339  04F4               	iorwf	___ftpack@arg+1,f
  8563  133A  0822               	movf	??___ftpack+2,w
  8564  133B  04F5               	iorwf	___ftpack@arg+2,f
  8565  133C                     l3457:
  8566  133C  0877               	movf	___ftpack@sign,w
  8567  133D  1903               	btfsc	3,2
  8568  133E  2B40               	goto	u4681
  8569  133F  2B41               	goto	u4680
  8570  1340                     u4681:
  8571  1340  2B42               	goto	l699
  8572  1341                     u4680:
  8573  1341                     l3459:
  8574  1341  17F5               	bsf	___ftpack@arg+2,7
  8575  1342                     l699:
  8576  1342                     l686:
  8577  1342  0008               	return
  8578  1343                     __end_of___ftpack:
  8579                           
  8580                           	psect	text36
  8581  1E00                     __ptext36:	
  8582 ;; *************** function _Write_USART_String *****************
  8583 ;; Defined at:
  8584 ;;		line 30 in file "USART.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  a               1    wreg     PTR unsigned char 
  8587 ;;		 -> BUFFER(20), 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  a               1    5[COMMON] PTR unsigned char 
  8590 ;;		 -> BUFFER(20), 
  8591 ;;  i               1    6[COMMON] unsigned char 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8601 ;;      Params:         0       0       0       0       0
  8602 ;;      Locals:         2       0       0       0       0
  8603 ;;      Temps:          1       0       0       0       0
  8604 ;;      Totals:         3       0       0       0       0
  8605 ;;Total ram usage:        3 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    3
  8608 ;; This function calls:
  8609 ;;		_Write_USART
  8610 ;; This function is called by:
  8611 ;;		_main
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           
  8616                           ;psect for function _Write_USART_String
  8617  1E00                     _Write_USART_String:
  8618                           
  8619                           ;incstack = 0
  8620                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8621                           ;Write_USART_String@a stored from wreg
  8622  1E00  00F5               	movwf	Write_USART_String@a
  8623  1E01                     l3291:
  8624                           
  8625                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  8626  1E01  01F6               	clrf	Write_USART_String@i
  8627  1E02  2E12               	goto	l3297
  8628  1E03                     l3293:
  8629                           
  8630                           ;USART.c: 33:         Write_USART(a[i]);
  8631  1E03  0876               	movf	Write_USART_String@i,w
  8632  1E04  0775               	addwf	Write_USART_String@a,w
  8633  1E05  00F4               	movwf	??_Write_USART_String
  8634  1E06  0874               	movf	??_Write_USART_String,w
  8635  1E07  0084               	movwf	4
  8636  1E08  0800               	movf	0,w
  8637  1E09  160A  158A  258D  160A  158A  	fcall	_Write_USART
  8638  1E0E                     l3295:
  8639                           
  8640                           ;USART.c: 34:     }
  8641  1E0E  3001               	movlw	1
  8642  1E0F  00F4               	movwf	??_Write_USART_String
  8643  1E10  0874               	movf	??_Write_USART_String,w
  8644  1E11  07F6               	addwf	Write_USART_String@i,f
  8645  1E12                     l3297:
  8646  1E12  0876               	movf	Write_USART_String@i,w
  8647  1E13  0775               	addwf	Write_USART_String@a,w
  8648  1E14  00F4               	movwf	??_Write_USART_String
  8649  1E15  0874               	movf	??_Write_USART_String,w
  8650  1E16  0084               	movwf	4
  8651  1E17  1383               	bcf	3,7	;select IRP bank0
  8652  1E18  0800               	movf	0,w
  8653  1E19  1D03               	btfss	3,2
  8654  1E1A  2E1C               	goto	u4521
  8655  1E1B  2E1D               	goto	u4520
  8656  1E1C                     u4521:
  8657  1E1C  2E03               	goto	l3293
  8658  1E1D                     u4520:
  8659  1E1D                     l250:
  8660  1E1D  0008               	return
  8661  1E1E                     __end_of_Write_USART_String:
  8662                           
  8663                           	psect	text37
  8664  1D8D                     __ptext37:	
  8665 ;; *************** function _Write_USART *****************
  8666 ;; Defined at:
  8667 ;;		line 26 in file "USART.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  a               1    wreg     unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  a               1    3[COMMON] unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8681 ;;      Params:         0       0       0       0       0
  8682 ;;      Locals:         1       0       0       0       0
  8683 ;;      Temps:          0       0       0       0       0
  8684 ;;      Totals:         1       0       0       0       0
  8685 ;;Total ram usage:        1 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    2
  8688 ;; This function calls:
  8689 ;;		Nothing
  8690 ;; This function is called by:
  8691 ;;		_main
  8692 ;;		_Write_USART_String
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           
  8697                           ;psect for function _Write_USART
  8698  1D8D                     _Write_USART:
  8699                           
  8700                           ;incstack = 0
  8701                           ; Regs used in _Write_USART: [wreg]
  8702                           ;Write_USART@a stored from wreg
  8703  1D8D  00F3               	movwf	Write_USART@a
  8704  1D8E                     l2519:
  8705  1D8E                     l241:	
  8706                           ;USART.c: 27:     while(!TRMT);
  8707                           
  8708  1D8E  1683               	bsf	3,5	;RP0=1, select bank1
  8709  1D8F  1303               	bcf	3,6	;RP1=0, select bank1
  8710  1D90  1C98               	btfss	24,1	;volatile
  8711  1D91  2D93               	goto	u3231
  8712  1D92  2D94               	goto	u3230
  8713  1D93                     u3231:
  8714  1D93  2D8E               	goto	l241
  8715  1D94                     u3230:
  8716  1D94                     l2521:
  8717                           
  8718                           ;USART.c: 28:     TXREG=a;
  8719  1D94  0873               	movf	Write_USART@a,w
  8720  1D95  1283               	bcf	3,5	;RP0=0, select bank0
  8721  1D96  1303               	bcf	3,6	;RP1=0, select bank0
  8722  1D97  0099               	movwf	25	;volatile
  8723  1D98                     l244:
  8724  1D98  0008               	return
  8725  1D99                     __end_of_Write_USART:
  8726                           
  8727                           	psect	text38
  8728  1E89                     __ptext38:	
  8729 ;; *************** function _ISR *****************
  8730 ;; Defined at:
  8731 ;;		line 61 in file "main.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      void 
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0, pclath, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8745 ;;      Params:         0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0
  8747 ;;      Temps:          3       0       0       0       0
  8748 ;;      Totals:         3       0       0       0       0
  8749 ;;Total ram usage:        3 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    1
  8752 ;; This function calls:
  8753 ;;		_Read_USART
  8754 ;; This function is called by:
  8755 ;;		Interrupt level 1
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           
  8760                           ;psect for function _ISR
  8761  1E89                     _ISR:
  8762  1E89                     i1l2073:
  8763                           
  8764                           ;main.c: 62:     if (RCIF == 1){
  8765  1E89  1283               	bcf	3,5	;RP0=0, select bank0
  8766  1E8A  1303               	bcf	3,6	;RP1=0, select bank0
  8767  1E8B  1E8C               	btfss	12,5	;volatile
  8768  1E8C  2E8E               	goto	u225_21
  8769  1E8D  2E8F               	goto	u225_20
  8770  1E8E                     u225_21:
  8771  1E8E  2EAB               	goto	i1l83
  8772  1E8F                     u225_20:
  8773  1E8F                     i1l2075:
  8774                           
  8775                           ;main.c: 63:         RCIF = 0;
  8776  1E8F  128C               	bcf	12,5	;volatile
  8777  1E90                     i1l2077:
  8778                           
  8779                           ;main.c: 64:         readUSART = Read_USART();
  8780  1E90  160A  158A  2561  160A  158A  	fcall	_Read_USART
  8781  1E95  00F0               	movwf	??_ISR
  8782  1E96  0870               	movf	??_ISR,w
  8783  1E97  00F9               	movwf	_readUSART
  8784  1E98                     i1l2079:
  8785                           
  8786                           ;main.c: 65:     if (readUSART == '+'){
  8787  1E98  302B               	movlw	43
  8788  1E99  0679               	xorwf	_readUSART,w
  8789  1E9A  1D03               	btfss	3,2
  8790  1E9B  2E9D               	goto	u226_21
  8791  1E9C  2E9E               	goto	u226_20
  8792  1E9D                     u226_21:
  8793  1E9D  2EA3               	goto	i1l2083
  8794  1E9E                     u226_20:
  8795  1E9E                     i1l2081:
  8796                           
  8797                           ;main.c: 66:         contador++;
  8798  1E9E  3001               	movlw	1
  8799  1E9F  00F0               	movwf	??_ISR
  8800  1EA0  0870               	movf	??_ISR,w
  8801  1EA1  07FA               	addwf	_contador,f
  8802                           
  8803                           ;main.c: 67:     }
  8804  1EA2  2EAB               	goto	i1l83
  8805  1EA3                     i1l2083:
  8806  1EA3  302D               	movlw	45
  8807  1EA4  0679               	xorwf	_readUSART,w
  8808  1EA5  1D03               	btfss	3,2
  8809  1EA6  2EA8               	goto	u227_21
  8810  1EA7  2EA9               	goto	u227_20
  8811  1EA8                     u227_21:
  8812  1EA8  2EAB               	goto	i1l83
  8813  1EA9                     u227_20:
  8814  1EA9                     i1l2085:
  8815                           
  8816                           ;main.c: 69:         contador--;
  8817  1EA9  3001               	movlw	1
  8818  1EAA  02FA               	subwf	_contador,f
  8819  1EAB                     i1l83:
  8820  1EAB  0872               	movf	??_ISR+2,w
  8821  1EAC  008A               	movwf	10
  8822  1EAD  0E71               	swapf	??_ISR+1,w
  8823  1EAE  0083               	movwf	3
  8824  1EAF  0EFE               	swapf	btemp,f
  8825  1EB0  0E7E               	swapf	btemp,w
  8826  1EB1  0009               	retfie
  8827  1EB2                     __end_of_ISR:
  8828                           
  8829                           	psect	intentry
  8830  0004                     __pintentry:	
  8831                           ;incstack = 0
  8832                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8833                           
  8834  0004                     interrupt_function:
  8835  007E                     saved_w	set	btemp
  8836  0004  00FE               	movwf	btemp
  8837  0005  0E03               	swapf	3,w
  8838  0006  00F1               	movwf	??_ISR+1
  8839  0007  080A               	movf	10,w
  8840  0008  00F2               	movwf	??_ISR+2
  8841  0009  160A  158A  2E89   	ljmp	_ISR
  8842                           
  8843                           	psect	text39
  8844  1D61                     __ptext39:	
  8845 ;; *************** function _Read_USART *****************
  8846 ;; Defined at:
  8847 ;;		line 36 in file "USART.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      unsigned char 
  8854 ;; Registers used:
  8855 ;;		wreg
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8861 ;;      Params:         0       0       0       0       0
  8862 ;;      Locals:         0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0
  8864 ;;      Totals:         0       0       0       0       0
  8865 ;;Total ram usage:        0 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_ISR
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           
  8875                           ;psect for function _Read_USART
  8876  1D61                     _Read_USART:
  8877  1D61                     i1l1631:	
  8878                           ;incstack = 0
  8879                           ; Regs used in _Read_USART: [wreg]
  8880                           
  8881  1D61                     i1l253:	
  8882                           ;USART.c: 37:   while(!RCIF);
  8883                           
  8884  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  8885  1D62  1303               	bcf	3,6	;RP1=0, select bank0
  8886  1D63  1E8C               	btfss	12,5	;volatile
  8887  1D64  2D66               	goto	u162_21
  8888  1D65  2D67               	goto	u162_20
  8889  1D66                     u162_21:
  8890  1D66  2D61               	goto	i1l253
  8891  1D67                     u162_20:
  8892  1D67                     i1l1633:
  8893                           
  8894                           ;USART.c: 38:   return RCREG;
  8895  1D67  081A               	movf	26,w	;volatile
  8896  1D68                     i1l256:
  8897  1D68  0008               	return
  8898  1D69                     __end_of_Read_USART:
  8899  007E                     btemp	set	126	;btemp
  8900  007E                     wtemp0	set	126
  8901                           
  8902                           	psect	config
  8903                           
  8904                           ;Config register CONFIG1 @ 0x2007
  8905                           ;	Oscillator Selection bits
  8906                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8907                           ;	Watchdog Timer Enable bit
  8908                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8909                           ;	Power-up Timer Enable bit
  8910                           ;	PWRTE = OFF, PWRT disabled
  8911                           ;	RE3/MCLR pin function select bit
  8912                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8913                           ;	Code Protection bit
  8914                           ;	CP = OFF, Program memory code protection is disabled
  8915                           ;	Data Code Protection bit
  8916                           ;	CPD = OFF, Data memory code protection is disabled
  8917                           ;	Brown Out Reset Selection bits
  8918                           ;	BOREN = OFF, BOR disabled
  8919                           ;	Internal External Switchover bit
  8920                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8921                           ;	Fail-Safe Clock Monitor Enabled bit
  8922                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8923                           ;	Low Voltage Programming Enable bit
  8924                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8925                           ;	In-Circuit Debugger Mode bit
  8926                           ;	DEBUG = 0x1, unprogrammed default
  8927  2007                     	org	8199
  8928  2007  20D4               	dw	8404
  8929                           
  8930                           ;Config register CONFIG2 @ 0x2008
  8931                           ;	Brown-out Reset Selection bit
  8932                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8933                           ;	Flash Program Memory Self Write Enable bits
  8934                           ;	WRT = OFF, Write protection off
  8935  2008                     	org	8200
  8936  2008  3FFF               	dw	16383
  8937                           
  8938                           	psect	text3_split_1
  8939  0023                     u6210:
  8940  0023                     l4161:
  8941  0023  1683               	bsf	3,5	;RP0=1, select bank1
  8942  0024  1303               	bcf	3,6	;RP1=0, select bank1
  8943  0025  083A               	movf	(sprintf@fval+2)^(0+128),w
  8944  0026  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  8945  0027  0438               	iorwf	sprintf@fval^(0+128),w
  8946  0028  1903               	skipnz
  8947  0029  282B               	goto	u6221
  8948  002A  282C               	goto	u6220
  8949  002B                     u6221:
  8950  002B  28EA               	goto	l4181
  8951  002C                     u6220:
  8952  002C                     l4163:
  8953  002C  0838               	movf	sprintf@fval^(0+128),w
  8954  002D  1283               	bcf	3,5	;RP0=0, select bank0
  8955  002E  1303               	bcf	3,6	;RP1=0, select bank0
  8956  002F  00C8               	movwf	___fttol@f1
  8957  0030  1683               	bsf	3,5	;RP0=1, select bank1
  8958  0031  1303               	bcf	3,6	;RP1=0, select bank1
  8959  0032  0839               	movf	(sprintf@fval+1)^(0+128),w
  8960  0033  1283               	bcf	3,5	;RP0=0, select bank0
  8961  0034  1303               	bcf	3,6	;RP1=0, select bank0
  8962  0035  00C9               	movwf	___fttol@f1+1
  8963  0036  1683               	bsf	3,5	;RP0=1, select bank1
  8964  0037  1303               	bcf	3,6	;RP1=0, select bank1
  8965  0038  083A               	movf	(sprintf@fval+2)^(0+128),w
  8966  0039  1283               	bcf	3,5	;RP0=0, select bank0
  8967  003A  1303               	bcf	3,6	;RP1=0, select bank0
  8968  003B  00CA               	movwf	___fttol@f1+2
  8969  003C  160A  118A  2343  120A  118A  	fcall	___fttol
  8970  0041  1283               	bcf	3,5	;RP0=0, select bank0
  8971  0042  1303               	bcf	3,6	;RP1=0, select bank0
  8972  0043  084B               	movf	?___fttol+3,w
  8973  0044  044A               	iorwf	?___fttol+2,w
  8974  0045  0449               	iorwf	?___fttol+1,w
  8975  0046  0448               	iorwf	?___fttol,w
  8976  0047  1D03               	skipz
  8977  0048  284A               	goto	u6231
  8978  0049  284B               	goto	u6230
  8979  004A                     u6231:
  8980  004A  28EA               	goto	l4181
  8981  004B                     u6230:
  8982  004B                     l4165:
  8983  004B  1683               	bsf	3,5	;RP0=1, select bank1
  8984  004C  1303               	bcf	3,6	;RP1=0, select bank1
  8985  004D  0837               	movf	(sprintf@eexp+1)^(0+128),w
  8986  004E  3A80               	xorlw	128
  8987  004F  00FF               	movwf	btemp+1
  8988  0050  3080               	movlw	128
  8989  0051  027F               	subwf	btemp+1,w
  8990  0052  1D03               	skipz
  8991  0053  2856               	goto	u6245
  8992  0054  3002               	movlw	2
  8993  0055  0236               	subwf	sprintf@eexp^(0+128),w
  8994  0056                     u6245:
  8995  0056  1C03               	skipc
  8996  0057  2859               	goto	u6241
  8997  0058  285A               	goto	u6240
  8998  0059                     u6241:
  8999  0059  28EA               	goto	l4181
  9000  005A                     u6240:
  9001  005A                     l4167:
  9002                           
  9003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9004  005A  1683               	bsf	3,5	;RP0=1, select bank1
  9005  005B  1303               	bcf	3,6	;RP1=0, select bank1
  9006  005C  082E               	movf	sprintf@tmpval^(0+128),w
  9007  005D  1283               	bcf	3,5	;RP0=0, select bank0
  9008  005E  1303               	bcf	3,6	;RP1=0, select bank0
  9009  005F  00A0               	movwf	___ftge@ff1
  9010  0060  1683               	bsf	3,5	;RP0=1, select bank1
  9011  0061  1303               	bcf	3,6	;RP1=0, select bank1
  9012  0062  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9013  0063  1283               	bcf	3,5	;RP0=0, select bank0
  9014  0064  1303               	bcf	3,6	;RP1=0, select bank0
  9015  0065  00A1               	movwf	___ftge@ff1+1
  9016  0066  1683               	bsf	3,5	;RP0=1, select bank1
  9017  0067  1303               	bcf	3,6	;RP1=0, select bank1
  9018  0068  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9019  0069  1283               	bcf	3,5	;RP0=0, select bank0
  9020  006A  1303               	bcf	3,6	;RP1=0, select bank0
  9021  006B  00A2               	movwf	___ftge@ff1+2
  9022  006C  3070               	movlw	112
  9023  006D  00A3               	movwf	___ftge@ff2
  9024  006E  3089               	movlw	137
  9025  006F  00A4               	movwf	___ftge@ff2+1
  9026  0070  3040               	movlw	64
  9027  0071  00A5               	movwf	___ftge@ff2+2
  9028  0072  160A  158A  2706  120A  118A  	fcall	___ftge
  9029  0077  1803               	btfsc	3,0
  9030  0078  287A               	goto	u6251
  9031  0079  287B               	goto	u6250
  9032  007A                     u6251:
  9033  007A  2884               	goto	l4171
  9034  007B                     u6250:
  9035  007B                     l4169:
  9036                           
  9037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9038  007B  30F7               	movlw	247
  9039  007C  1683               	bsf	3,5	;RP0=1, select bank1
  9040  007D  1303               	bcf	3,6	;RP1=0, select bank1
  9041  007E  07B6               	addwf	sprintf@eexp^(0+128),f
  9042  007F  1803               	skipnc
  9043  0080  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9044  0081  30FF               	movlw	255
  9045  0082  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9046                           
  9047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9048  0083  288C               	goto	l4173
  9049  0084                     l4171:
  9050                           
  9051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9052  0084  30F8               	movlw	248
  9053  0085  1683               	bsf	3,5	;RP0=1, select bank1
  9054  0086  1303               	bcf	3,6	;RP1=0, select bank1
  9055  0087  07B6               	addwf	sprintf@eexp^(0+128),f
  9056  0088  1803               	skipnc
  9057  0089  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9058  008A  30FF               	movlw	255
  9059  008B  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9060  008C                     l4173:
  9061                           
  9062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  9063  008C  0836               	movf	sprintf@eexp^(0+128),w
  9064  008D  120A  158A  226D  120A  118A  	fcall	_scale
  9065  0092  1283               	bcf	3,5	;RP0=0, select bank0
  9066  0093  1303               	bcf	3,6	;RP1=0, select bank0
  9067  0094  083F               	movf	?_scale,w
  9068  0095  1683               	bsf	3,5	;RP0=1, select bank1
  9069  0096  1303               	bcf	3,6	;RP1=0, select bank1
  9070  0097  00AE               	movwf	sprintf@tmpval^(0+128)
  9071  0098  1283               	bcf	3,5	;RP0=0, select bank0
  9072  0099  1303               	bcf	3,6	;RP1=0, select bank0
  9073  009A  0840               	movf	?_scale+1,w
  9074  009B  1683               	bsf	3,5	;RP0=1, select bank1
  9075  009C  1303               	bcf	3,6	;RP1=0, select bank1
  9076  009D  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9077  009E  1283               	bcf	3,5	;RP0=0, select bank0
  9078  009F  1303               	bcf	3,6	;RP1=0, select bank0
  9079  00A0  0841               	movf	?_scale+2,w
  9080  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  9081  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  9082  00A3  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9083  00A4                     l4177:	
  9084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9085                           
  9086  00A4  0838               	movf	sprintf@fval^(0+128),w
  9087  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  9088  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  9089  00A7  00A0               	movwf	__tdiv_to_l_@f1
  9090  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  9091  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  9092  00AA  0839               	movf	(sprintf@fval+1)^(0+128),w
  9093  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  9094  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  9095  00AD  00A1               	movwf	__tdiv_to_l_@f1+1
  9096  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  9097  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  9098  00B0  083A               	movf	(sprintf@fval+2)^(0+128),w
  9099  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  9100  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  9101  00B3  00A2               	movwf	__tdiv_to_l_@f1+2
  9102  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  9103  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  9104  00B6  082E               	movf	sprintf@tmpval^(0+128),w
  9105  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  9106  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  9107  00B9  00A3               	movwf	__tdiv_to_l_@f2
  9108  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  9109  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  9110  00BC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9111  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9112  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9113  00BF  00A4               	movwf	__tdiv_to_l_@f2+1
  9114  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9115  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9116  00C2  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9117  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9118  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9119  00C5  00A5               	movwf	__tdiv_to_l_@f2+2
  9120  00C6  120A  158A  2007  120A  118A  	fcall	__tdiv_to_l_
  9121  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  9122  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  9123  00CD  0823               	movf	?__tdiv_to_l_+3,w
  9124  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  9125  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  9126  00D0  00B5               	movwf	(sprintf@val+3)^(0+128)
  9127  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9128  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9129  00D3  0822               	movf	?__tdiv_to_l_+2,w
  9130  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  9131  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  9132  00D6  00B4               	movwf	(sprintf@val+2)^(0+128)
  9133  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9134  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9135  00D9  0821               	movf	?__tdiv_to_l_+1,w
  9136  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9137  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9138  00DC  00B3               	movwf	(sprintf@val+1)^(0+128)
  9139  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  9140  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  9141  00DF  0820               	movf	?__tdiv_to_l_,w
  9142  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9143  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9144  00E2  00B2               	movwf	sprintf@val^(0+128)
  9145  00E3                     l4179:
  9146                           
  9147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9148  00E3  3000               	movlw	0
  9149  00E4  00B8               	movwf	sprintf@fval^(0+128)
  9150  00E5  3000               	movlw	0
  9151  00E6  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9152  00E7  3000               	movlw	0
  9153  00E8  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9154                           
  9155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9156  00E9  2967               	goto	l4185
  9157  00EA                     l4181:
  9158                           
  9159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9160  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  9161  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  9162  00EC  0838               	movf	sprintf@fval^(0+128),w
  9163  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  9164  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  9165  00EF  00C8               	movwf	___fttol@f1
  9166  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  9167  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  9168  00F2  0839               	movf	(sprintf@fval+1)^(0+128),w
  9169  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  9170  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  9171  00F5  00C9               	movwf	___fttol@f1+1
  9172  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  9173  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  9174  00F8  083A               	movf	(sprintf@fval+2)^(0+128),w
  9175  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  9176  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  9177  00FB  00CA               	movwf	___fttol@f1+2
  9178  00FC  160A  118A  2343  120A  118A  	fcall	___fttol
  9179  0101  1283               	bcf	3,5	;RP0=0, select bank0
  9180  0102  1303               	bcf	3,6	;RP1=0, select bank0
  9181  0103  084B               	movf	?___fttol+3,w
  9182  0104  1683               	bsf	3,5	;RP0=1, select bank1
  9183  0105  1303               	bcf	3,6	;RP1=0, select bank1
  9184  0106  00B5               	movwf	(sprintf@val+3)^(0+128)
  9185  0107  1283               	bcf	3,5	;RP0=0, select bank0
  9186  0108  1303               	bcf	3,6	;RP1=0, select bank0
  9187  0109  084A               	movf	?___fttol+2,w
  9188  010A  1683               	bsf	3,5	;RP0=1, select bank1
  9189  010B  1303               	bcf	3,6	;RP1=0, select bank1
  9190  010C  00B4               	movwf	(sprintf@val+2)^(0+128)
  9191  010D  1283               	bcf	3,5	;RP0=0, select bank0
  9192  010E  1303               	bcf	3,6	;RP1=0, select bank0
  9193  010F  0849               	movf	?___fttol+1,w
  9194  0110  1683               	bsf	3,5	;RP0=1, select bank1
  9195  0111  1303               	bcf	3,6	;RP1=0, select bank1
  9196  0112  00B3               	movwf	(sprintf@val+1)^(0+128)
  9197  0113  1283               	bcf	3,5	;RP0=0, select bank0
  9198  0114  1303               	bcf	3,6	;RP1=0, select bank0
  9199  0115  0848               	movf	?___fttol,w
  9200  0116  1683               	bsf	3,5	;RP0=1, select bank1
  9201  0117  1303               	bcf	3,6	;RP1=0, select bank1
  9202  0118  00B2               	movwf	sprintf@val^(0+128)
  9203                           
  9204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9205  0119  0835               	movf	(sprintf@val+3)^(0+128),w
  9206  011A  1283               	bcf	3,5	;RP0=0, select bank0
  9207  011B  1303               	bcf	3,6	;RP1=0, select bank0
  9208  011C  00A6               	movwf	___lltoft@c+3
  9209  011D  1683               	bsf	3,5	;RP0=1, select bank1
  9210  011E  1303               	bcf	3,6	;RP1=0, select bank1
  9211  011F  0834               	movf	(sprintf@val+2)^(0+128),w
  9212  0120  1283               	bcf	3,5	;RP0=0, select bank0
  9213  0121  1303               	bcf	3,6	;RP1=0, select bank0
  9214  0122  00A5               	movwf	___lltoft@c+2
  9215  0123  1683               	bsf	3,5	;RP0=1, select bank1
  9216  0124  1303               	bcf	3,6	;RP1=0, select bank1
  9217  0125  0833               	movf	(sprintf@val+1)^(0+128),w
  9218  0126  1283               	bcf	3,5	;RP0=0, select bank0
  9219  0127  1303               	bcf	3,6	;RP1=0, select bank0
  9220  0128  00A4               	movwf	___lltoft@c+1
  9221  0129  1683               	bsf	3,5	;RP0=1, select bank1
  9222  012A  1303               	bcf	3,6	;RP1=0, select bank1
  9223  012B  0832               	movf	sprintf@val^(0+128),w
  9224  012C  1283               	bcf	3,5	;RP0=0, select bank0
  9225  012D  1303               	bcf	3,6	;RP1=0, select bank0
  9226  012E  00A3               	movwf	___lltoft@c
  9227  012F  160A  118A  20A9  120A  118A  	fcall	___lltoft
  9228  0134  1283               	bcf	3,5	;RP0=0, select bank0
  9229  0135  1303               	bcf	3,6	;RP1=0, select bank0
  9230  0136  0823               	movf	?___lltoft,w
  9231  0137  00DC               	movwf	___ftsub@f2
  9232  0138  0824               	movf	?___lltoft+1,w
  9233  0139  00DD               	movwf	___ftsub@f2+1
  9234  013A  0825               	movf	?___lltoft+2,w
  9235  013B  00DE               	movwf	___ftsub@f2+2
  9236  013C  1683               	bsf	3,5	;RP0=1, select bank1
  9237  013D  1303               	bcf	3,6	;RP1=0, select bank1
  9238  013E  0838               	movf	sprintf@fval^(0+128),w
  9239  013F  1283               	bcf	3,5	;RP0=0, select bank0
  9240  0140  1303               	bcf	3,6	;RP1=0, select bank0
  9241  0141  00DF               	movwf	___ftsub@f1
  9242  0142  1683               	bsf	3,5	;RP0=1, select bank1
  9243  0143  1303               	bcf	3,6	;RP1=0, select bank1
  9244  0144  0839               	movf	(sprintf@fval+1)^(0+128),w
  9245  0145  1283               	bcf	3,5	;RP0=0, select bank0
  9246  0146  1303               	bcf	3,6	;RP1=0, select bank0
  9247  0147  00E0               	movwf	___ftsub@f1+1
  9248  0148  1683               	bsf	3,5	;RP0=1, select bank1
  9249  0149  1303               	bcf	3,6	;RP1=0, select bank1
  9250  014A  083A               	movf	(sprintf@fval+2)^(0+128),w
  9251  014B  1283               	bcf	3,5	;RP0=0, select bank0
  9252  014C  1303               	bcf	3,6	;RP1=0, select bank0
  9253  014D  00E1               	movwf	___ftsub@f1+2
  9254  014E  160A  158A  263E  120A  118A  	fcall	___ftsub
  9255  0153  1283               	bcf	3,5	;RP0=0, select bank0
  9256  0154  1303               	bcf	3,6	;RP1=0, select bank0
  9257  0155  085C               	movf	?___ftsub,w
  9258  0156  1683               	bsf	3,5	;RP0=1, select bank1
  9259  0157  1303               	bcf	3,6	;RP1=0, select bank1
  9260  0158  00B8               	movwf	sprintf@fval^(0+128)
  9261  0159  1283               	bcf	3,5	;RP0=0, select bank0
  9262  015A  1303               	bcf	3,6	;RP1=0, select bank0
  9263  015B  085D               	movf	?___ftsub+1,w
  9264  015C  1683               	bsf	3,5	;RP0=1, select bank1
  9265  015D  1303               	bcf	3,6	;RP1=0, select bank1
  9266  015E  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9267  015F  1283               	bcf	3,5	;RP0=0, select bank0
  9268  0160  1303               	bcf	3,6	;RP1=0, select bank0
  9269  0161  085E               	movf	?___ftsub+2,w
  9270  0162  1683               	bsf	3,5	;RP0=1, select bank1
  9271  0163  1303               	bcf	3,6	;RP1=0, select bank1
  9272  0164  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9273  0165                     l4183:
  9274                           
  9275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9276  0165  01B6               	clrf	sprintf@eexp^(0+128)
  9277  0166  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9278  0167                     l4185:
  9279                           
  9280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9281  0167  01BE               	clrf	sprintf@c^(0+128)
  9282  0168  0ABE               	incf	sprintf@c^(0+128),f
  9283  0169                     l4191:
  9284                           
  9285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9286  0169  083E               	movf	sprintf@c^(0+128),w
  9287  016A  00A0               	movwf	??_sprintf^(0+128)
  9288  016B  3001               	movlw	1
  9289  016C                     u6265:
  9290  016C  1003               	clrc
  9291  016D  0DA0               	rlf	??_sprintf^(0+128),f
  9292  016E  3EFF               	addlw	-1
  9293  016F  1D03               	skipz
  9294  0170  296C               	goto	u6265
  9295  0171  1003               	clrc
  9296  0172  0D20               	rlf	??_sprintf^(0+128),w
  9297  0173  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9298  0174  0084               	movwf	4
  9299  0175  160A  118A  200A  120A  118A  	fcall	stringdir
  9300  017A  00A1               	movwf	(??_sprintf+1)^(0+128)
  9301  017B  160A  118A  200A  120A  118A  	fcall	stringdir
  9302  0180  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9303  0181  160A  118A  200A  120A  118A  	fcall	stringdir
  9304  0186  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9305  0187  160A  118A  200A  120A  118A  	fcall	stringdir
  9306  018C  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9307  018D  0824               	movf	(??_sprintf+4)^(0+128),w
  9308  018E  0235               	subwf	(sprintf@val+3)^(0+128),w
  9309  018F  1D03               	skipz
  9310  0190  299B               	goto	u6275
  9311  0191  0823               	movf	(??_sprintf+3)^(0+128),w
  9312  0192  0234               	subwf	(sprintf@val+2)^(0+128),w
  9313  0193  1D03               	skipz
  9314  0194  299B               	goto	u6275
  9315  0195  0822               	movf	(??_sprintf+2)^(0+128),w
  9316  0196  0233               	subwf	(sprintf@val+1)^(0+128),w
  9317  0197  1D03               	skipz
  9318  0198  299B               	goto	u6275
  9319  0199  0821               	movf	(??_sprintf+1)^(0+128),w
  9320  019A  0232               	subwf	sprintf@val^(0+128),w
  9321  019B                     u6275:
  9322  019B  1803               	skipnc
  9323  019C  299E               	goto	u6271
  9324  019D  299F               	goto	u6270
  9325  019E                     u6271:
  9326  019E  29A0               	goto	l4195
  9327  019F                     u6270:
  9328  019F  29AA               	goto	l4197
  9329  01A0                     l4195:
  9330  01A0  3001               	movlw	1
  9331  01A1  00A0               	movwf	??_sprintf^(0+128)
  9332  01A2  0820               	movf	??_sprintf^(0+128),w
  9333  01A3  07BE               	addwf	sprintf@c^(0+128),f
  9334  01A4  300A               	movlw	10
  9335  01A5  063E               	xorwf	sprintf@c^(0+128),w
  9336  01A6  1D03               	btfss	3,2
  9337  01A7  29A9               	goto	u6281
  9338  01A8  29AA               	goto	u6280
  9339  01A9                     u6281:
  9340  01A9  2969               	goto	l4191
  9341  01AA                     u6280:
  9342  01AA                     l4197:
  9343                           
  9344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9345  01AA  083E               	movf	sprintf@c^(0+128),w
  9346  01AB  073C               	addwf	sprintf@prec^(0+128),w
  9347  01AC  00A0               	movwf	??_sprintf^(0+128)
  9348  01AD  083D               	movf	(sprintf@prec+1)^(0+128),w
  9349  01AE  1803               	skipnc
  9350  01AF  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9351  01B0  00A1               	movwf	(??_sprintf^(0+128)+1)
  9352  01B1  0836               	movf	sprintf@eexp^(0+128),w
  9353  01B2  0720               	addwf	??_sprintf^(0+128),w
  9354  01B3  00A2               	movwf	(??_sprintf+2)^(0+128)
  9355  01B4  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9356  01B5  1803               	skipnc
  9357  01B6  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9358  01B7  0721               	addwf	(??_sprintf+1)^(0+128),w
  9359  01B8  00A3               	movwf	(??_sprintf+3)^(0+128)
  9360  01B9  0822               	movf	(??_sprintf+2)^(0+128),w
  9361  01BA  02AC               	subwf	sprintf@width^(0+128),f
  9362  01BB  0823               	movf	(??_sprintf+3)^(0+128),w
  9363  01BC  1C03               	skipc
  9364  01BD  03AD               	decf	(sprintf@width+1)^(0+128),f
  9365  01BE  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9366                           
  9367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9368  01BF  083C               	movf	sprintf@prec^(0+128),w
  9369  01C0  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9370  01C1  1903               	btfsc	3,2
  9371  01C2  29C4               	goto	u6291
  9372  01C3  29C5               	goto	u6290
  9373  01C4                     u6291:
  9374  01C4  29CB               	goto	l4201
  9375  01C5                     u6290:
  9376  01C5                     l4199:
  9377                           
  9378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9379  01C5  30FF               	movlw	255
  9380  01C6  07AC               	addwf	sprintf@width^(0+128),f
  9381  01C7  1803               	skipnc
  9382  01C8  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9383  01C9  30FF               	movlw	255
  9384  01CA  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9385  01CB                     l4201:
  9386                           
  9387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9388  01CB  3003               	movlw	3
  9389  01CC  052A               	andwf	sprintf@flag^(0+128),w
  9390  01CD  00A0               	movwf	??_sprintf^(0+128)
  9391  01CE  3000               	movlw	0
  9392  01CF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9393  01D0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9394  01D1  0820               	movf	??_sprintf^(0+128),w
  9395  01D2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9396  01D3  1903               	btfsc	3,2
  9397  01D4  29D6               	goto	u6301
  9398  01D5  29D7               	goto	u6300
  9399  01D6                     u6301:
  9400  01D6  29EC               	goto	l4211
  9401  01D7                     u6300:
  9402  01D7                     l4203:
  9403                           
  9404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9405  01D7  30FF               	movlw	255
  9406  01D8  07AC               	addwf	sprintf@width^(0+128),f
  9407  01D9  1803               	skipnc
  9408  01DA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9409  01DB  30FF               	movlw	255
  9410  01DC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9411  01DD  29EC               	goto	l4211
  9412  01DE                     l4205:
  9413                           
  9414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9415  01DE  3020               	movlw	32
  9416  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  9417  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  9418  01E1  00A0               	movwf	??_sprintf^(0+128)
  9419  01E2  083B               	movf	sprintf@sp^(0+128),w
  9420  01E3  0084               	movwf	4
  9421  01E4  0820               	movf	??_sprintf^(0+128),w
  9422  01E5  1383               	bcf	3,7	;select IRP bank0
  9423  01E6  0080               	movwf	0
  9424  01E7                     l4207:
  9425  01E7  3001               	movlw	1
  9426  01E8  00A0               	movwf	??_sprintf^(0+128)
  9427  01E9  0820               	movf	??_sprintf^(0+128),w
  9428  01EA  07BB               	addwf	sprintf@sp^(0+128),f
  9429  01EB  29D7               	goto	l4203
  9430  01EC                     l4211:
  9431                           
  9432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9433  01EC  082D               	movf	(sprintf@width+1)^(0+128),w
  9434  01ED  3A80               	xorlw	128
  9435  01EE  00FF               	movwf	btemp+1
  9436  01EF  3080               	movlw	128
  9437  01F0  027F               	subwf	btemp+1,w
  9438  01F1  1D03               	skipz
  9439  01F2  29F5               	goto	u6315
  9440  01F3  3001               	movlw	1
  9441  01F4  022C               	subwf	sprintf@width^(0+128),w
  9442  01F5                     u6315:
  9443  01F5  1803               	skipnc
  9444  01F6  29F8               	goto	u6311
  9445  01F7  29F9               	goto	u6310
  9446  01F8                     u6311:
  9447  01F8  29DE               	goto	l4205
  9448  01F9                     u6310:
  9449  01F9                     l4213:
  9450                           
  9451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9452  01F9  3003               	movlw	3
  9453  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  9454  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  9455  01FC  052A               	andwf	sprintf@flag^(0+128),w
  9456  01FD  00A0               	movwf	??_sprintf^(0+128)
  9457  01FE  3000               	movlw	0
  9458  01FF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9459  0200  00A1               	movwf	(??_sprintf+1)^(0+128)
  9460  0201  0820               	movf	??_sprintf^(0+128),w
  9461  0202  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9462  0203  1903               	btfsc	3,2
  9463  0204  2A06               	goto	u6321
  9464  0205  2A07               	goto	u6320
  9465  0206                     u6321:
  9466  0206  2AB9               	goto	l420
  9467  0207                     u6320:
  9468  0207                     l4215:
  9469                           
  9470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9471  0207  302D               	movlw	45
  9472  0208  00A0               	movwf	??_sprintf^(0+128)
  9473  0209  083B               	movf	sprintf@sp^(0+128),w
  9474  020A  0084               	movwf	4
  9475  020B  0820               	movf	??_sprintf^(0+128),w
  9476  020C  1383               	bcf	3,7	;select IRP bank0
  9477  020D  0080               	movwf	0
  9478  020E                     l4217:
  9479  020E  3001               	movlw	1
  9480  020F  00A0               	movwf	??_sprintf^(0+128)
  9481  0210  0820               	movf	??_sprintf^(0+128),w
  9482  0211  07BB               	addwf	sprintf@sp^(0+128),f
  9483  0212  2AB9               	goto	l420
  9484  0213                     l4219:
  9485                           
  9486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9487  0213  083E               	movf	sprintf@c^(0+128),w
  9488  0214  00A0               	movwf	??_sprintf^(0+128)
  9489  0215  3001               	movlw	1
  9490  0216                     u6335:
  9491  0216  1003               	clrc
  9492  0217  0DA0               	rlf	??_sprintf^(0+128),f
  9493  0218  3EFF               	addlw	-1
  9494  0219  1D03               	skipz
  9495  021A  2A16               	goto	u6335
  9496  021B  1003               	clrc
  9497  021C  0D20               	rlf	??_sprintf^(0+128),w
  9498  021D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9499  021E  0084               	movwf	4
  9500  021F  160A  118A  200A  120A  118A  	fcall	stringdir
  9501  0224  1283               	bcf	3,5	;RP0=0, select bank0
  9502  0225  1303               	bcf	3,6	;RP1=0, select bank0
  9503  0226  00A0               	movwf	___lldiv@divisor
  9504  0227  160A  118A  200A  120A  118A  	fcall	stringdir
  9505  022C  00A1               	movwf	___lldiv@divisor+1
  9506  022D  160A  118A  200A  120A  118A  	fcall	stringdir
  9507  0232  00A2               	movwf	___lldiv@divisor+2
  9508  0233  160A  118A  200A  120A  118A  	fcall	stringdir
  9509  0238  00A3               	movwf	___lldiv@divisor+3
  9510  0239  1683               	bsf	3,5	;RP0=1, select bank1
  9511  023A  1303               	bcf	3,6	;RP1=0, select bank1
  9512  023B  0835               	movf	(sprintf@val+3)^(0+128),w
  9513  023C  1283               	bcf	3,5	;RP0=0, select bank0
  9514  023D  1303               	bcf	3,6	;RP1=0, select bank0
  9515  023E  00A7               	movwf	___lldiv@dividend+3
  9516  023F  1683               	bsf	3,5	;RP0=1, select bank1
  9517  0240  1303               	bcf	3,6	;RP1=0, select bank1
  9518  0241  0834               	movf	(sprintf@val+2)^(0+128),w
  9519  0242  1283               	bcf	3,5	;RP0=0, select bank0
  9520  0243  1303               	bcf	3,6	;RP1=0, select bank0
  9521  0244  00A6               	movwf	___lldiv@dividend+2
  9522  0245  1683               	bsf	3,5	;RP0=1, select bank1
  9523  0246  1303               	bcf	3,6	;RP1=0, select bank1
  9524  0247  0833               	movf	(sprintf@val+1)^(0+128),w
  9525  0248  1283               	bcf	3,5	;RP0=0, select bank0
  9526  0249  1303               	bcf	3,6	;RP1=0, select bank0
  9527  024A  00A5               	movwf	___lldiv@dividend+1
  9528  024B  1683               	bsf	3,5	;RP0=1, select bank1
  9529  024C  1303               	bcf	3,6	;RP1=0, select bank1
  9530  024D  0832               	movf	sprintf@val^(0+128),w
  9531  024E  1283               	bcf	3,5	;RP0=0, select bank0
  9532  024F  1303               	bcf	3,6	;RP1=0, select bank0
  9533  0250  00A4               	movwf	___lldiv@dividend
  9534  0251  160A  118A  2178  120A  118A  	fcall	___lldiv
  9535  0256  1283               	bcf	3,5	;RP0=0, select bank0
  9536  0257  1303               	bcf	3,6	;RP1=0, select bank0
  9537  0258  0823               	movf	?___lldiv+3,w
  9538  0259  1683               	bsf	3,5	;RP0=1, select bank1
  9539  025A  1303               	bcf	3,6	;RP1=0, select bank1
  9540  025B  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9541  025C  1283               	bcf	3,5	;RP0=0, select bank0
  9542  025D  1303               	bcf	3,6	;RP1=0, select bank0
  9543  025E  0822               	movf	?___lldiv+2,w
  9544  025F  1683               	bsf	3,5	;RP0=1, select bank1
  9545  0260  1303               	bcf	3,6	;RP1=0, select bank1
  9546  0261  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9547  0262  1283               	bcf	3,5	;RP0=0, select bank0
  9548  0263  1303               	bcf	3,6	;RP1=0, select bank0
  9549  0264  0821               	movf	?___lldiv+1,w
  9550  0265  1683               	bsf	3,5	;RP0=1, select bank1
  9551  0266  1303               	bcf	3,6	;RP1=0, select bank1
  9552  0267  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9553  0268  1283               	bcf	3,5	;RP0=0, select bank0
  9554  0269  1303               	bcf	3,6	;RP1=0, select bank0
  9555  026A  0820               	movf	?___lldiv,w
  9556  026B  1683               	bsf	3,5	;RP0=1, select bank1
  9557  026C  1303               	bcf	3,6	;RP1=0, select bank1
  9558  026D  00AE               	movwf	sprintf@tmpval^(0+128)
  9559  026E                     l4221:
  9560                           
  9561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9562  026E  3000               	movlw	0
  9563  026F  1283               	bcf	3,5	;RP0=0, select bank0
  9564  0270  1303               	bcf	3,6	;RP1=0, select bank0
  9565  0271  00B0               	movwf	___llmod@divisor+3
  9566  0272  3000               	movlw	0
  9567  0273  00AF               	movwf	___llmod@divisor+2
  9568  0274  3000               	movlw	0
  9569  0275  00AE               	movwf	___llmod@divisor+1
  9570  0276  300A               	movlw	10
  9571  0277  00AD               	movwf	___llmod@divisor
  9572  0278  1683               	bsf	3,5	;RP0=1, select bank1
  9573  0279  1303               	bcf	3,6	;RP1=0, select bank1
  9574  027A  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9575  027B  1283               	bcf	3,5	;RP0=0, select bank0
  9576  027C  1303               	bcf	3,6	;RP1=0, select bank0
  9577  027D  00B4               	movwf	___llmod@dividend+3
  9578  027E  1683               	bsf	3,5	;RP0=1, select bank1
  9579  027F  1303               	bcf	3,6	;RP1=0, select bank1
  9580  0280  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9581  0281  1283               	bcf	3,5	;RP0=0, select bank0
  9582  0282  1303               	bcf	3,6	;RP1=0, select bank0
  9583  0283  00B3               	movwf	___llmod@dividend+2
  9584  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9585  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9586  0286  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9587  0287  1283               	bcf	3,5	;RP0=0, select bank0
  9588  0288  1303               	bcf	3,6	;RP1=0, select bank0
  9589  0289  00B2               	movwf	___llmod@dividend+1
  9590  028A  1683               	bsf	3,5	;RP0=1, select bank1
  9591  028B  1303               	bcf	3,6	;RP1=0, select bank1
  9592  028C  082E               	movf	sprintf@tmpval^(0+128),w
  9593  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9594  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9595  028F  00B1               	movwf	___llmod@dividend
  9596  0290  160A  118A  2122  120A  118A  	fcall	___llmod
  9597  0295  1283               	bcf	3,5	;RP0=0, select bank0
  9598  0296  1303               	bcf	3,6	;RP1=0, select bank0
  9599  0297  0830               	movf	?___llmod+3,w
  9600  0298  1683               	bsf	3,5	;RP0=1, select bank1
  9601  0299  1303               	bcf	3,6	;RP1=0, select bank1
  9602  029A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9603  029B  1283               	bcf	3,5	;RP0=0, select bank0
  9604  029C  1303               	bcf	3,6	;RP1=0, select bank0
  9605  029D  082F               	movf	?___llmod+2,w
  9606  029E  1683               	bsf	3,5	;RP0=1, select bank1
  9607  029F  1303               	bcf	3,6	;RP1=0, select bank1
  9608  02A0  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9609  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  9610  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  9611  02A3  082E               	movf	?___llmod+1,w
  9612  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9613  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9614  02A6  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9615  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  9616  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  9617  02A9  082D               	movf	?___llmod,w
  9618  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  9619  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  9620  02AC  00AE               	movwf	sprintf@tmpval^(0+128)
  9621  02AD                     l4223:
  9622                           
  9623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9624  02AD  082E               	movf	sprintf@tmpval^(0+128),w
  9625  02AE  3E30               	addlw	48
  9626  02AF  00A0               	movwf	??_sprintf^(0+128)
  9627  02B0  083B               	movf	sprintf@sp^(0+128),w
  9628  02B1  0084               	movwf	4
  9629  02B2  0820               	movf	??_sprintf^(0+128),w
  9630  02B3  1383               	bcf	3,7	;select IRP bank0
  9631  02B4  0080               	movwf	0
  9632  02B5  3001               	movlw	1
  9633  02B6  00A0               	movwf	??_sprintf^(0+128)
  9634  02B7  0820               	movf	??_sprintf^(0+128),w
  9635  02B8  07BB               	addwf	sprintf@sp^(0+128),f
  9636  02B9                     l420:	
  9637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9638                           
  9639                           
  9640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9641  02B9  3001               	movlw	1
  9642  02BA  02BE               	subwf	sprintf@c^(0+128),f
  9643  02BB  0A3E               	incf	sprintf@c^(0+128),w
  9644  02BC  1D03               	btfss	3,2
  9645  02BD  2ABF               	goto	u6341
  9646  02BE  2AC0               	goto	u6340
  9647  02BF                     u6341:
  9648  02BF  2A13               	goto	l4219
  9649  02C0                     u6340:
  9650  02C0  2AD4               	goto	l4231
  9651  02C1                     l4225:
  9652                           
  9653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9654  02C1  3030               	movlw	48
  9655  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  9656  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  9657  02C4  00A0               	movwf	??_sprintf^(0+128)
  9658  02C5  083B               	movf	sprintf@sp^(0+128),w
  9659  02C6  0084               	movwf	4
  9660  02C7  0820               	movf	??_sprintf^(0+128),w
  9661  02C8  1383               	bcf	3,7	;select IRP bank0
  9662  02C9  0080               	movwf	0
  9663  02CA                     l4227:
  9664  02CA  3001               	movlw	1
  9665  02CB  00A0               	movwf	??_sprintf^(0+128)
  9666  02CC  0820               	movf	??_sprintf^(0+128),w
  9667  02CD  07BB               	addwf	sprintf@sp^(0+128),f
  9668  02CE                     l4229:
  9669                           
  9670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9671  02CE  30FF               	movlw	255
  9672  02CF  07B6               	addwf	sprintf@eexp^(0+128),f
  9673  02D0  1803               	skipnc
  9674  02D1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9675  02D2  30FF               	movlw	255
  9676  02D3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9677  02D4                     l4231:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9680  02D4  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9681  02D5  3A80               	xorlw	128
  9682  02D6  00FF               	movwf	btemp+1
  9683  02D7  3080               	movlw	128
  9684  02D8  027F               	subwf	btemp+1,w
  9685  02D9  1D03               	skipz
  9686  02DA  2ADD               	goto	u6355
  9687  02DB  3001               	movlw	1
  9688  02DC  0236               	subwf	sprintf@eexp^(0+128),w
  9689  02DD                     u6355:
  9690  02DD  1803               	skipnc
  9691  02DE  2AE0               	goto	u6351
  9692  02DF  2AE1               	goto	u6350
  9693  02E0                     u6351:
  9694  02E0  2AC1               	goto	l4225
  9695  02E1                     u6350:
  9696  02E1                     l4233:
  9697                           
  9698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9699  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  9700  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  9701  02E3  083D               	movf	(sprintf@prec+1)^(0+128),w
  9702  02E4  3A80               	xorlw	128
  9703  02E5  00FF               	movwf	btemp+1
  9704  02E6  3080               	movlw	128
  9705  02E7  027F               	subwf	btemp+1,w
  9706  02E8  1D03               	skipz
  9707  02E9  2AEC               	goto	u6365
  9708  02EA  3009               	movlw	9
  9709  02EB  023C               	subwf	sprintf@prec^(0+128),w
  9710  02EC                     u6365:
  9711  02EC  1C03               	skipc
  9712  02ED  2AEF               	goto	u6361
  9713  02EE  2AF0               	goto	u6360
  9714  02EF                     u6361:
  9715  02EF  2AF7               	goto	l4237
  9716  02F0                     u6360:
  9717  02F0                     l4235:
  9718                           
  9719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9720  02F0  3008               	movlw	8
  9721  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  9722  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  9723  02F3  00A0               	movwf	??_sprintf^(0+128)
  9724  02F4  0820               	movf	??_sprintf^(0+128),w
  9725  02F5  00BE               	movwf	sprintf@c^(0+128)
  9726  02F6  2AFD               	goto	l427
  9727  02F7                     l4237:
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9730  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  9731  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  9732  02F9  083C               	movf	sprintf@prec^(0+128),w
  9733  02FA  00A0               	movwf	??_sprintf^(0+128)
  9734  02FB  0820               	movf	??_sprintf^(0+128),w
  9735  02FC  00BE               	movwf	sprintf@c^(0+128)
  9736  02FD                     l427:
  9737                           
  9738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9739  02FD  083E               	movf	sprintf@c^(0+128),w
  9740  02FE  00A0               	movwf	??_sprintf^(0+128)
  9741  02FF  01A1               	clrf	(??_sprintf^(0+128)+1)
  9742  0300  0820               	movf	??_sprintf^(0+128),w
  9743  0301  02BC               	subwf	sprintf@prec^(0+128),f
  9744  0302  0821               	movf	(??_sprintf+1)^(0+128),w
  9745  0303  1C03               	skipc
  9746  0304  03BD               	decf	(sprintf@prec+1)^(0+128),f
  9747  0305  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  9748  0306                     l4239:
  9749                           
  9750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9751  0306  083E               	movf	sprintf@c^(0+128),w
  9752  0307  1903               	btfsc	3,2
  9753  0308  2B0A               	goto	u6371
  9754  0309  2B0B               	goto	u6370
  9755  030A                     u6371:
  9756  030A  2B16               	goto	l4245
  9757  030B                     u6370:
  9758  030B                     l4241:
  9759                           
  9760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9761  030B  302E               	movlw	46
  9762  030C  00A0               	movwf	??_sprintf^(0+128)
  9763  030D  083B               	movf	sprintf@sp^(0+128),w
  9764  030E  0084               	movwf	4
  9765  030F  0820               	movf	??_sprintf^(0+128),w
  9766  0310  1383               	bcf	3,7	;select IRP bank0
  9767  0311  0080               	movwf	0
  9768  0312                     l4243:
  9769  0312  3001               	movlw	1
  9770  0313  00A0               	movwf	??_sprintf^(0+128)
  9771  0314  0820               	movf	??_sprintf^(0+128),w
  9772  0315  07BB               	addwf	sprintf@sp^(0+128),f
  9773  0316                     l4245:
  9774                           
  9775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9776  0316  083E               	movf	sprintf@c^(0+128),w
  9777  0317  120A  158A  226D  120A  118A  	fcall	_scale
  9778  031C  1283               	bcf	3,5	;RP0=0, select bank0
  9779  031D  1303               	bcf	3,6	;RP1=0, select bank0
  9780  031E  083F               	movf	?_scale,w
  9781  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9782  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9783  0321  00A6               	movwf	_sprintf$1185^(0+128)
  9784  0322  1283               	bcf	3,5	;RP0=0, select bank0
  9785  0323  1303               	bcf	3,6	;RP1=0, select bank0
  9786  0324  0840               	movf	?_scale+1,w
  9787  0325  1683               	bsf	3,5	;RP0=1, select bank1
  9788  0326  1303               	bcf	3,6	;RP1=0, select bank1
  9789  0327  00A7               	movwf	(_sprintf$1185+1)^(0+128)
  9790  0328  1283               	bcf	3,5	;RP0=0, select bank0
  9791  0329  1303               	bcf	3,6	;RP1=0, select bank0
  9792  032A  0841               	movf	?_scale+2,w
  9793  032B  1683               	bsf	3,5	;RP0=1, select bank1
  9794  032C  1303               	bcf	3,6	;RP1=0, select bank1
  9795  032D  00A8               	movwf	(_sprintf$1185+2)^(0+128)
  9796  032E                     l4247:
  9797                           
  9798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9799  032E  0826               	movf	_sprintf$1185^(0+128),w
  9800  032F  1283               	bcf	3,5	;RP0=0, select bank0
  9801  0330  1303               	bcf	3,6	;RP1=0, select bank0
  9802  0331  00B2               	movwf	___ftmul@f2
  9803  0332  1683               	bsf	3,5	;RP0=1, select bank1
  9804  0333  1303               	bcf	3,6	;RP1=0, select bank1
  9805  0334  0827               	movf	(_sprintf$1185+1)^(0+128),w
  9806  0335  1283               	bcf	3,5	;RP0=0, select bank0
  9807  0336  1303               	bcf	3,6	;RP1=0, select bank0
  9808  0337  00B3               	movwf	___ftmul@f2+1
  9809  0338  1683               	bsf	3,5	;RP0=1, select bank1
  9810  0339  1303               	bcf	3,6	;RP1=0, select bank1
  9811  033A  0828               	movf	(_sprintf$1185+2)^(0+128),w
  9812  033B  1283               	bcf	3,5	;RP0=0, select bank0
  9813  033C  1303               	bcf	3,6	;RP1=0, select bank0
  9814  033D  00B4               	movwf	___ftmul@f2+2
  9815  033E  1683               	bsf	3,5	;RP0=1, select bank1
  9816  033F  1303               	bcf	3,6	;RP1=0, select bank1
  9817  0340  0838               	movf	sprintf@fval^(0+128),w
  9818  0341  1283               	bcf	3,5	;RP0=0, select bank0
  9819  0342  1303               	bcf	3,6	;RP1=0, select bank0
  9820  0343  00AF               	movwf	___ftmul@f1
  9821  0344  1683               	bsf	3,5	;RP0=1, select bank1
  9822  0345  1303               	bcf	3,6	;RP1=0, select bank1
  9823  0346  0839               	movf	(sprintf@fval+1)^(0+128),w
  9824  0347  1283               	bcf	3,5	;RP0=0, select bank0
  9825  0348  1303               	bcf	3,6	;RP1=0, select bank0
  9826  0349  00B0               	movwf	___ftmul@f1+1
  9827  034A  1683               	bsf	3,5	;RP0=1, select bank1
  9828  034B  1303               	bcf	3,6	;RP1=0, select bank1
  9829  034C  083A               	movf	(sprintf@fval+2)^(0+128),w
  9830  034D  1283               	bcf	3,5	;RP0=0, select bank0
  9831  034E  1303               	bcf	3,6	;RP1=0, select bank0
  9832  034F  00B1               	movwf	___ftmul@f1+2
  9833  0350  160A  118A  23CF  120A  118A  	fcall	___ftmul
  9834  0355  1283               	bcf	3,5	;RP0=0, select bank0
  9835  0356  1303               	bcf	3,6	;RP1=0, select bank0
  9836  0357  082F               	movf	?___ftmul,w
  9837  0358  00C8               	movwf	___fttol@f1
  9838  0359  0830               	movf	?___ftmul+1,w
  9839  035A  00C9               	movwf	___fttol@f1+1
  9840  035B  0831               	movf	?___ftmul+2,w
  9841  035C  00CA               	movwf	___fttol@f1+2
  9842  035D  160A  118A  2343  120A  118A  	fcall	___fttol
  9843  0362  1283               	bcf	3,5	;RP0=0, select bank0
  9844  0363  1303               	bcf	3,6	;RP1=0, select bank0
  9845  0364  084B               	movf	?___fttol+3,w
  9846  0365  1683               	bsf	3,5	;RP0=1, select bank1
  9847  0366  1303               	bcf	3,6	;RP1=0, select bank1
  9848  0367  00B5               	movwf	(sprintf@val+3)^(0+128)
  9849  0368  1283               	bcf	3,5	;RP0=0, select bank0
  9850  0369  1303               	bcf	3,6	;RP1=0, select bank0
  9851  036A  084A               	movf	?___fttol+2,w
  9852  036B  1683               	bsf	3,5	;RP0=1, select bank1
  9853  036C  1303               	bcf	3,6	;RP1=0, select bank1
  9854  036D  00B4               	movwf	(sprintf@val+2)^(0+128)
  9855  036E  1283               	bcf	3,5	;RP0=0, select bank0
  9856  036F  1303               	bcf	3,6	;RP1=0, select bank0
  9857  0370  0849               	movf	?___fttol+1,w
  9858  0371  1683               	bsf	3,5	;RP0=1, select bank1
  9859  0372  1303               	bcf	3,6	;RP1=0, select bank1
  9860  0373  00B3               	movwf	(sprintf@val+1)^(0+128)
  9861  0374  1283               	bcf	3,5	;RP0=0, select bank0
  9862  0375  1303               	bcf	3,6	;RP1=0, select bank0
  9863  0376  0848               	movf	?___fttol,w
  9864  0377  1683               	bsf	3,5	;RP0=1, select bank1
  9865  0378  1303               	bcf	3,6	;RP1=0, select bank1
  9866  0379  00B2               	movwf	sprintf@val^(0+128)
  9867                           
  9868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9869  037A  2C7C               	goto	l4257
  9870  037B                     l4249:
  9871                           
  9872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9873  037B  083E               	movf	sprintf@c^(0+128),w
  9874  037C  00A0               	movwf	??_sprintf^(0+128)
  9875  037D  3001               	movlw	1
  9876  037E                     u6385:
  9877  037E  1003               	clrc
  9878  037F  0DA0               	rlf	??_sprintf^(0+128),f
  9879  0380  3EFF               	addlw	-1
  9880  0381  1D03               	skipz
  9881  0382  2B7E               	goto	u6385
  9882  0383  1003               	clrc
  9883  0384  0D20               	rlf	??_sprintf^(0+128),w
  9884  0385  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9885  0386  0084               	movwf	4
  9886  0387  160A  118A  200A  120A  118A  	fcall	stringdir
  9887  038C  1283               	bcf	3,5	;RP0=0, select bank0
  9888  038D  1303               	bcf	3,6	;RP1=0, select bank0
  9889  038E  00A0               	movwf	___lldiv@divisor
  9890  038F  160A  118A  200A  120A  118A  	fcall	stringdir
  9891  0394  00A1               	movwf	___lldiv@divisor+1
  9892  0395  160A  118A  200A  120A  118A  	fcall	stringdir
  9893  039A  00A2               	movwf	___lldiv@divisor+2
  9894  039B  160A  118A  200A  120A  118A  	fcall	stringdir
  9895  03A0  00A3               	movwf	___lldiv@divisor+3
  9896  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  9897  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  9898  03A3  0835               	movf	(sprintf@val+3)^(0+128),w
  9899  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  9900  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  9901  03A6  00A7               	movwf	___lldiv@dividend+3
  9902  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  9903  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  9904  03A9  0834               	movf	(sprintf@val+2)^(0+128),w
  9905  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  9906  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  9907  03AC  00A6               	movwf	___lldiv@dividend+2
  9908  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  9909  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  9910  03AF  0833               	movf	(sprintf@val+1)^(0+128),w
  9911  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  9912  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  9913  03B2  00A5               	movwf	___lldiv@dividend+1
  9914  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  9915  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  9916  03B5  0832               	movf	sprintf@val^(0+128),w
  9917  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  9918  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  9919  03B8  00A4               	movwf	___lldiv@dividend
  9920  03B9  160A  118A  2178  120A  118A  	fcall	___lldiv
  9921  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  9922  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  9923  03C0  0823               	movf	?___lldiv+3,w
  9924  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  9925  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  9926  03C3  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9927  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  9928  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  9929  03C6  0822               	movf	?___lldiv+2,w
  9930  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  9931  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  9932  03C9  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9933  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  9934  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  9935  03CC  0821               	movf	?___lldiv+1,w
  9936  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  9937  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  9938  03CF  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9939  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  9940  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  9941  03D2  0820               	movf	?___lldiv,w
  9942  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  9943  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  9944  03D5  00AE               	movwf	sprintf@tmpval^(0+128)
  9945  03D6                     l4251:
  9946                           
  9947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9948  03D6  3000               	movlw	0
  9949  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  9950  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  9951  03D9  00B0               	movwf	___llmod@divisor+3
  9952  03DA  3000               	movlw	0
  9953  03DB  00AF               	movwf	___llmod@divisor+2
  9954  03DC  3000               	movlw	0
  9955  03DD  00AE               	movwf	___llmod@divisor+1
  9956  03DE  300A               	movlw	10
  9957  03DF  00AD               	movwf	___llmod@divisor
  9958  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  9959  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  9960  03E2  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9961  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  9962  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  9963  03E5  00B4               	movwf	___llmod@dividend+3
  9964  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  9965  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  9966  03E8  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9967  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  9968  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  9969  03EB  00B3               	movwf	___llmod@dividend+2
  9970  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  9971  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  9972  03EE  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9973  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  9974  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  9975  03F1  00B2               	movwf	___llmod@dividend+1
  9976  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  9977  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  9978  03F4  082E               	movf	sprintf@tmpval^(0+128),w
  9979  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  9980  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  9981  03F7  00B1               	movwf	___llmod@dividend
  9982  03F8  160A  118A  2122  120A  118A  	fcall	___llmod
  9983  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  9984  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  9985  03FF  0830               	movf	?___llmod+3,w
  9986  0400  1683               	bsf	3,5	;RP0=1, select bank1
  9987  0401  1303               	bcf	3,6	;RP1=0, select bank1
  9988  0402  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9989  0403  1283               	bcf	3,5	;RP0=0, select bank0
  9990  0404  1303               	bcf	3,6	;RP1=0, select bank0
  9991  0405  082F               	movf	?___llmod+2,w
  9992  0406  1683               	bsf	3,5	;RP0=1, select bank1
  9993  0407  1303               	bcf	3,6	;RP1=0, select bank1
  9994  0408  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9995  0409  1283               	bcf	3,5	;RP0=0, select bank0
  9996  040A  1303               	bcf	3,6	;RP1=0, select bank0
  9997  040B  082E               	movf	?___llmod+1,w
  9998  040C  1683               	bsf	3,5	;RP0=1, select bank1
  9999  040D  1303               	bcf	3,6	;RP1=0, select bank1
 10000  040E  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10001  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10002  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10003  0411  082D               	movf	?___llmod,w
 10004  0412  1683               	bsf	3,5	;RP0=1, select bank1
 10005  0413  1303               	bcf	3,6	;RP1=0, select bank1
 10006  0414  00AE               	movwf	sprintf@tmpval^(0+128)
 10007  0415                     l4253:
 10008                           
 10009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10010  0415  082E               	movf	sprintf@tmpval^(0+128),w
 10011  0416  3E30               	addlw	48
 10012  0417  00A0               	movwf	??_sprintf^(0+128)
 10013  0418  083B               	movf	sprintf@sp^(0+128),w
 10014  0419  0084               	movwf	4
 10015  041A  0820               	movf	??_sprintf^(0+128),w
 10016  041B  1383               	bcf	3,7	;select IRP bank0
 10017  041C  0080               	movwf	0
 10018  041D  3001               	movlw	1
 10019  041E  00A0               	movwf	??_sprintf^(0+128)
 10020  041F  0820               	movf	??_sprintf^(0+128),w
 10021  0420  07BB               	addwf	sprintf@sp^(0+128),f
 10022  0421                     l4255:
 10023                           
 10024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10025  0421  083E               	movf	sprintf@c^(0+128),w
 10026  0422  00A0               	movwf	??_sprintf^(0+128)
 10027  0423  3001               	movlw	1
 10028  0424                     u6395:
 10029  0424  1003               	clrc
 10030  0425  0DA0               	rlf	??_sprintf^(0+128),f
 10031  0426  3EFF               	addlw	-1
 10032  0427  1D03               	skipz
 10033  0428  2C24               	goto	u6395
 10034  0429  1003               	clrc
 10035  042A  0D20               	rlf	??_sprintf^(0+128),w
 10036  042B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10037  042C  0084               	movwf	4
 10038  042D  160A  118A  200A  120A  118A  	fcall	stringdir
 10039  0432  1283               	bcf	3,5	;RP0=0, select bank0
 10040  0433  1303               	bcf	3,6	;RP1=0, select bank0
 10041  0434  00AD               	movwf	___llmod@divisor
 10042  0435  160A  118A  200A  120A  118A  	fcall	stringdir
 10043  043A  00AE               	movwf	___llmod@divisor+1
 10044  043B  160A  118A  200A  120A  118A  	fcall	stringdir
 10045  0440  00AF               	movwf	___llmod@divisor+2
 10046  0441  160A  118A  200A  120A  118A  	fcall	stringdir
 10047  0446  00B0               	movwf	___llmod@divisor+3
 10048  0447  1683               	bsf	3,5	;RP0=1, select bank1
 10049  0448  1303               	bcf	3,6	;RP1=0, select bank1
 10050  0449  0835               	movf	(sprintf@val+3)^(0+128),w
 10051  044A  1283               	bcf	3,5	;RP0=0, select bank0
 10052  044B  1303               	bcf	3,6	;RP1=0, select bank0
 10053  044C  00B4               	movwf	___llmod@dividend+3
 10054  044D  1683               	bsf	3,5	;RP0=1, select bank1
 10055  044E  1303               	bcf	3,6	;RP1=0, select bank1
 10056  044F  0834               	movf	(sprintf@val+2)^(0+128),w
 10057  0450  1283               	bcf	3,5	;RP0=0, select bank0
 10058  0451  1303               	bcf	3,6	;RP1=0, select bank0
 10059  0452  00B3               	movwf	___llmod@dividend+2
 10060  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10061  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10062  0455  0833               	movf	(sprintf@val+1)^(0+128),w
 10063  0456  1283               	bcf	3,5	;RP0=0, select bank0
 10064  0457  1303               	bcf	3,6	;RP1=0, select bank0
 10065  0458  00B2               	movwf	___llmod@dividend+1
 10066  0459  1683               	bsf	3,5	;RP0=1, select bank1
 10067  045A  1303               	bcf	3,6	;RP1=0, select bank1
 10068  045B  0832               	movf	sprintf@val^(0+128),w
 10069  045C  1283               	bcf	3,5	;RP0=0, select bank0
 10070  045D  1303               	bcf	3,6	;RP1=0, select bank0
 10071  045E  00B1               	movwf	___llmod@dividend
 10072  045F  160A  118A  2122  120A  118A  	fcall	___llmod
 10073  0464  1283               	bcf	3,5	;RP0=0, select bank0
 10074  0465  1303               	bcf	3,6	;RP1=0, select bank0
 10075  0466  0830               	movf	?___llmod+3,w
 10076  0467  1683               	bsf	3,5	;RP0=1, select bank1
 10077  0468  1303               	bcf	3,6	;RP1=0, select bank1
 10078  0469  00B5               	movwf	(sprintf@val+3)^(0+128)
 10079  046A  1283               	bcf	3,5	;RP0=0, select bank0
 10080  046B  1303               	bcf	3,6	;RP1=0, select bank0
 10081  046C  082F               	movf	?___llmod+2,w
 10082  046D  1683               	bsf	3,5	;RP0=1, select bank1
 10083  046E  1303               	bcf	3,6	;RP1=0, select bank1
 10084  046F  00B4               	movwf	(sprintf@val+2)^(0+128)
 10085  0470  1283               	bcf	3,5	;RP0=0, select bank0
 10086  0471  1303               	bcf	3,6	;RP1=0, select bank0
 10087  0472  082E               	movf	?___llmod+1,w
 10088  0473  1683               	bsf	3,5	;RP0=1, select bank1
 10089  0474  1303               	bcf	3,6	;RP1=0, select bank1
 10090  0475  00B3               	movwf	(sprintf@val+1)^(0+128)
 10091  0476  1283               	bcf	3,5	;RP0=0, select bank0
 10092  0477  1303               	bcf	3,6	;RP1=0, select bank0
 10093  0478  082D               	movf	?___llmod,w
 10094  0479  1683               	bsf	3,5	;RP0=1, select bank1
 10095  047A  1303               	bcf	3,6	;RP1=0, select bank1
 10096  047B  00B2               	movwf	sprintf@val^(0+128)
 10097  047C                     l4257:
 10098                           
 10099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10100  047C  3001               	movlw	1
 10101  047D  02BE               	subwf	sprintf@c^(0+128),f
 10102  047E  0A3E               	incf	sprintf@c^(0+128),w
 10103  047F  1D03               	btfss	3,2
 10104  0480  2C82               	goto	u6401
 10105  0481  2C83               	goto	u6400
 10106  0482                     u6401:
 10107  0482  2B7B               	goto	l4249
 10108  0483                     u6400:
 10109  0483  2C95               	goto	l4265
 10110  0484                     l4259:
 10111                           
 10112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10113  0484  3030               	movlw	48
 10114  0485  00A0               	movwf	??_sprintf^(0+128)
 10115  0486  083B               	movf	sprintf@sp^(0+128),w
 10116  0487  0084               	movwf	4
 10117  0488  0820               	movf	??_sprintf^(0+128),w
 10118  0489  1383               	bcf	3,7	;select IRP bank0
 10119  048A  0080               	movwf	0
 10120  048B                     l4261:
 10121  048B  3001               	movlw	1
 10122  048C  00A0               	movwf	??_sprintf^(0+128)
 10123  048D  0820               	movf	??_sprintf^(0+128),w
 10124  048E  07BB               	addwf	sprintf@sp^(0+128),f
 10125  048F                     l4263:
 10126                           
 10127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10128  048F  30FF               	movlw	255
 10129  0490  07BC               	addwf	sprintf@prec^(0+128),f
 10130  0491  1803               	skipnc
 10131  0492  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10132  0493  30FF               	movlw	255
 10133  0494  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10134  0495                     l4265:
 10135                           
 10136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10137  0495  083C               	movf	sprintf@prec^(0+128),w
 10138  0496  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10139  0497  1D03               	btfss	3,2
 10140  0498  2C9A               	goto	u6411
 10141  0499  2C9B               	goto	u6410
 10142  049A                     u6411:
 10143  049A  2C84               	goto	l4259
 10144  049B                     u6410:
 10145  049B  2E4B               	goto	l4345
 10146  049C                     l4267:
 10147                           
 10148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10149  049C  0829               	movf	sprintf@ap^(0+128),w
 10150  049D  0084               	movwf	4
 10151  049E  1383               	bcf	3,7	;select IRP bank0
 10152  049F  0800               	movf	0,w
 10153  04A0  00A0               	movwf	??_sprintf^(0+128)
 10154  04A1  0A84               	incf	4,f
 10155  04A2  0800               	movf	0,w
 10156  04A3  00A1               	movwf	(??_sprintf^(0+128)+1)
 10157  04A4  0820               	movf	??_sprintf^(0+128),w
 10158  04A5  00B2               	movwf	sprintf@val^(0+128)
 10159  04A6  0821               	movf	(??_sprintf+1)^(0+128),w
 10160  04A7  00B3               	movwf	(sprintf@val+1)^(0+128)
 10161  04A8  3000               	movlw	0
 10162  04A9  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
 10163  04AA  30FF               	movlw	255
 10164  04AB  00B4               	movwf	(sprintf@val+2)^(0+128)
 10165  04AC  00B5               	movwf	(sprintf@val+3)^(0+128)
 10166  04AD                     l4269:
 10167  04AD  3002               	movlw	2
 10168  04AE  00A0               	movwf	??_sprintf^(0+128)
 10169  04AF  0820               	movf	??_sprintf^(0+128),w
 10170  04B0  07A9               	addwf	sprintf@ap^(0+128),f
 10171  04B1                     l4271:
 10172                           
 10173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10174  04B1  1FB5               	btfss	(sprintf@val+3)^(0+128),7
 10175  04B2  2CB4               	goto	u6421
 10176  04B3  2CB5               	goto	u6420
 10177  04B4                     u6421:
 10178  04B4  2CC4               	goto	l4277
 10179  04B5                     u6420:
 10180  04B5                     l4273:
 10181                           
 10182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10183  04B5  3003               	movlw	3
 10184  04B6  04AA               	iorwf	sprintf@flag^(0+128),f
 10185  04B7  3000               	movlw	0
 10186  04B8  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
 10187  04B9                     l4275:
 10188                           
 10189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10190  04B9  09B2               	comf	sprintf@val^(0+128),f
 10191  04BA  09B3               	comf	(sprintf@val+1)^(0+128),f
 10192  04BB  09B4               	comf	(sprintf@val+2)^(0+128),f
 10193  04BC  09B5               	comf	(sprintf@val+3)^(0+128),f
 10194  04BD  0AB2               	incf	sprintf@val^(0+128),f
 10195  04BE  1903               	skipnz
 10196  04BF  0AB3               	incf	(sprintf@val+1)^(0+128),f
 10197  04C0  1903               	skipnz
 10198  04C1  0AB4               	incf	(sprintf@val+2)^(0+128),f
 10199  04C2  1903               	skipnz
 10200  04C3  0AB5               	incf	(sprintf@val+3)^(0+128),f
 10201  04C4                     l4277:
 10202                           
 10203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10204  04C4  083C               	movf	sprintf@prec^(0+128),w
 10205  04C5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10206  04C6  1D03               	btfss	3,2
 10207  04C7  2CC9               	goto	u6431
 10208  04C8  2CCA               	goto	u6430
 10209  04C9                     u6431:
 10210  04C9  2CD8               	goto	l4283
 10211  04CA                     u6430:
 10212  04CA                     l4279:
 10213  04CA  0835               	movf	(sprintf@val+3)^(0+128),w
 10214  04CB  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10215  04CC  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10216  04CD  0432               	iorwf	sprintf@val^(0+128),w
 10217  04CE  1D03               	skipz
 10218  04CF  2CD1               	goto	u6441
 10219  04D0  2CD2               	goto	u6440
 10220  04D1                     u6441:
 10221  04D1  2CD8               	goto	l4283
 10222  04D2                     u6440:
 10223  04D2                     l4281:
 10224                           
 10225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10226  04D2  3001               	movlw	1
 10227  04D3  07BC               	addwf	sprintf@prec^(0+128),f
 10228  04D4  1803               	skipnc
 10229  04D5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10230  04D6  3000               	movlw	0
 10231  04D7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10232  04D8                     l4283:
 10233                           
 10234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10235  04D8  01BE               	clrf	sprintf@c^(0+128)
 10236  04D9  0ABE               	incf	sprintf@c^(0+128),f
 10237  04DA                     l4289:
 10238                           
 10239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10240  04DA  083E               	movf	sprintf@c^(0+128),w
 10241  04DB  00A0               	movwf	??_sprintf^(0+128)
 10242  04DC  3001               	movlw	1
 10243  04DD                     u6455:
 10244  04DD  1003               	clrc
 10245  04DE  0DA0               	rlf	??_sprintf^(0+128),f
 10246  04DF  3EFF               	addlw	-1
 10247  04E0  1D03               	skipz
 10248  04E1  2CDD               	goto	u6455
 10249  04E2  1003               	clrc
 10250  04E3  0D20               	rlf	??_sprintf^(0+128),w
 10251  04E4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10252  04E5  0084               	movwf	4
 10253  04E6  160A  118A  200A  120A  118A  	fcall	stringdir
 10254  04EB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10255  04EC  160A  118A  200A  120A  118A  	fcall	stringdir
 10256  04F1  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
 10257  04F2  160A  118A  200A  120A  118A  	fcall	stringdir
 10258  04F7  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
 10259  04F8  160A  118A  200A  120A  118A  	fcall	stringdir
 10260  04FD  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
 10261  04FE  0824               	movf	(??_sprintf+4)^(0+128),w
 10262  04FF  0235               	subwf	(sprintf@val+3)^(0+128),w
 10263  0500  1D03               	skipz
 10264  0501  2D0C               	goto	u6465
 10265  0502  0823               	movf	(??_sprintf+3)^(0+128),w
 10266  0503  0234               	subwf	(sprintf@val+2)^(0+128),w
 10267  0504  1D03               	skipz
 10268  0505  2D0C               	goto	u6465
 10269  0506  0822               	movf	(??_sprintf+2)^(0+128),w
 10270  0507  0233               	subwf	(sprintf@val+1)^(0+128),w
 10271  0508  1D03               	skipz
 10272  0509  2D0C               	goto	u6465
 10273  050A  0821               	movf	(??_sprintf+1)^(0+128),w
 10274  050B  0232               	subwf	sprintf@val^(0+128),w
 10275  050C                     u6465:
 10276  050C  1803               	skipnc
 10277  050D  2D0F               	goto	u6461
 10278  050E  2D10               	goto	u6460
 10279  050F                     u6461:
 10280  050F  2D11               	goto	l4293
 10281  0510                     u6460:
 10282  0510  2D1B               	goto	l4295
 10283  0511                     l4293:
 10284  0511  3001               	movlw	1
 10285  0512  00A0               	movwf	??_sprintf^(0+128)
 10286  0513  0820               	movf	??_sprintf^(0+128),w
 10287  0514  07BE               	addwf	sprintf@c^(0+128),f
 10288  0515  300A               	movlw	10
 10289  0516  063E               	xorwf	sprintf@c^(0+128),w
 10290  0517  1D03               	btfss	3,2
 10291  0518  2D1A               	goto	u6471
 10292  0519  2D1B               	goto	u6470
 10293  051A                     u6471:
 10294  051A  2CDA               	goto	l4289
 10295  051B                     u6470:
 10296  051B                     l4295:
 10297                           
 10298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10299  051B  083D               	movf	(sprintf@prec+1)^(0+128),w
 10300  051C  3A80               	xorlw	128
 10301  051D  3C80               	sublw	128
 10302  051E  1D03               	skipz
 10303  051F  2D22               	goto	u6485
 10304  0520  083C               	movf	sprintf@prec^(0+128),w
 10305  0521  023E               	subwf	sprintf@c^(0+128),w
 10306  0522                     u6485:
 10307  0522  1803               	skipnc
 10308  0523  2D25               	goto	u6481
 10309  0524  2D26               	goto	u6480
 10310  0525                     u6481:
 10311  0525  2D2D               	goto	l4299
 10312  0526                     u6480:
 10313  0526                     l4297:
 10314                           
 10315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10316  0526  1683               	bsf	3,5	;RP0=1, select bank1
 10317  0527  1303               	bcf	3,6	;RP1=0, select bank1
 10318  0528  083C               	movf	sprintf@prec^(0+128),w
 10319  0529  00A0               	movwf	??_sprintf^(0+128)
 10320  052A  0820               	movf	??_sprintf^(0+128),w
 10321  052B  00BE               	movwf	sprintf@c^(0+128)
 10322  052C  2D45               	goto	l4303
 10323  052D                     l4299:
 10324  052D  1683               	bsf	3,5	;RP0=1, select bank1
 10325  052E  1303               	bcf	3,6	;RP1=0, select bank1
 10326  052F  083D               	movf	(sprintf@prec+1)^(0+128),w
 10327  0530  3A80               	xorlw	128
 10328  0531  00A0               	movwf	??_sprintf^(0+128)
 10329  0532  3080               	movlw	128
 10330  0533  0220               	subwf	??_sprintf^(0+128),w
 10331  0534  1D03               	skipz
 10332  0535  2D38               	goto	u6495
 10333  0536  083E               	movf	sprintf@c^(0+128),w
 10334  0537  023C               	subwf	sprintf@prec^(0+128),w
 10335  0538                     u6495:
 10336  0538  1803               	skipnc
 10337  0539  2D3B               	goto	u6491
 10338  053A  2D3C               	goto	u6490
 10339  053B                     u6491:
 10340  053B  2D45               	goto	l4303
 10341  053C                     u6490:
 10342  053C                     l4301:
 10343                           
 10344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10345  053C  1683               	bsf	3,5	;RP0=1, select bank1
 10346  053D  1303               	bcf	3,6	;RP1=0, select bank1
 10347  053E  083E               	movf	sprintf@c^(0+128),w
 10348  053F  00A0               	movwf	??_sprintf^(0+128)
 10349  0540  01A1               	clrf	(??_sprintf^(0+128)+1)
 10350  0541  0820               	movf	??_sprintf^(0+128),w
 10351  0542  00BC               	movwf	sprintf@prec^(0+128)
 10352  0543  0821               	movf	(??_sprintf+1)^(0+128),w
 10353  0544  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10354  0545                     l4303:
 10355                           
 10356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10357  0545  1683               	bsf	3,5	;RP0=1, select bank1
 10358  0546  1303               	bcf	3,6	;RP1=0, select bank1
 10359  0547  082C               	movf	sprintf@width^(0+128),w
 10360  0548  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10361  0549  1903               	btfsc	3,2
 10362  054A  2D4C               	goto	u6501
 10363  054B  2D4D               	goto	u6500
 10364  054C                     u6501:
 10365  054C  2D5F               	goto	l4309
 10366  054D                     u6500:
 10367  054D                     l4305:
 10368  054D  3003               	movlw	3
 10369  054E  052A               	andwf	sprintf@flag^(0+128),w
 10370  054F  00A0               	movwf	??_sprintf^(0+128)
 10371  0550  3000               	movlw	0
 10372  0551  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10373  0552  00A1               	movwf	(??_sprintf+1)^(0+128)
 10374  0553  0820               	movf	??_sprintf^(0+128),w
 10375  0554  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10376  0555  1903               	btfsc	3,2
 10377  0556  2D58               	goto	u6511
 10378  0557  2D59               	goto	u6510
 10379  0558                     u6511:
 10380  0558  2D5F               	goto	l4309
 10381  0559                     u6510:
 10382  0559                     l4307:
 10383                           
 10384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10385  0559  30FF               	movlw	255
 10386  055A  07AC               	addwf	sprintf@width^(0+128),f
 10387  055B  1803               	skipnc
 10388  055C  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10389  055D  30FF               	movlw	255
 10390  055E  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10391  055F                     l4309:
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10394  055F  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 10395  0560  2D62               	goto	u6521
 10396  0561  2D63               	goto	u6520
 10397  0562                     u6521:
 10398  0562  2D7E               	goto	l4317
 10399  0563                     u6520:
 10400  0563                     l4311:
 10401                           
 10402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10403  0563  083D               	movf	(sprintf@prec+1)^(0+128),w
 10404  0564  3A80               	xorlw	128
 10405  0565  00A0               	movwf	??_sprintf^(0+128)
 10406  0566  082D               	movf	(sprintf@width+1)^(0+128),w
 10407  0567  3A80               	xorlw	128
 10408  0568  0220               	subwf	??_sprintf^(0+128),w
 10409  0569  1D03               	skipz
 10410  056A  2D6D               	goto	u6535
 10411  056B  082C               	movf	sprintf@width^(0+128),w
 10412  056C  023C               	subwf	sprintf@prec^(0+128),w
 10413  056D                     u6535:
 10414  056D  1803               	skipnc
 10415  056E  2D70               	goto	u6531
 10416  056F  2D71               	goto	u6530
 10417  0570                     u6531:
 10418  0570  2D7A               	goto	l4315
 10419  0571                     u6530:
 10420  0571                     l4313:
 10421                           
 10422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10423  0571  1683               	bsf	3,5	;RP0=1, select bank1
 10424  0572  1303               	bcf	3,6	;RP1=0, select bank1
 10425  0573  083C               	movf	sprintf@prec^(0+128),w
 10426  0574  02AC               	subwf	sprintf@width^(0+128),f
 10427  0575  083D               	movf	(sprintf@prec+1)^(0+128),w
 10428  0576  1C03               	skipc
 10429  0577  03AD               	decf	(sprintf@width+1)^(0+128),f
 10430  0578  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10431  0579  2D7E               	goto	l4317
 10432  057A                     l4315:
 10433                           
 10434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10435  057A  1683               	bsf	3,5	;RP0=1, select bank1
 10436  057B  1303               	bcf	3,6	;RP1=0, select bank1
 10437  057C  01AC               	clrf	sprintf@width^(0+128)
 10438  057D  01AD               	clrf	(sprintf@width+1)^(0+128)
 10439  057E                     l4317:
 10440                           
 10441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10442  057E  082D               	movf	(sprintf@width+1)^(0+128),w
 10443  057F  3A80               	xorlw	128
 10444  0580  3C80               	sublw	128
 10445  0581  1D03               	skipz
 10446  0582  2D85               	goto	u6545
 10447  0583  082C               	movf	sprintf@width^(0+128),w
 10448  0584  023E               	subwf	sprintf@c^(0+128),w
 10449  0585                     u6545:
 10450  0585  1803               	skipnc
 10451  0586  2D88               	goto	u6541
 10452  0587  2D89               	goto	u6540
 10453  0588                     u6541:
 10454  0588  2D95               	goto	l4321
 10455  0589                     u6540:
 10456  0589                     l4319:
 10457                           
 10458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10459  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10460  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10461  058B  083E               	movf	sprintf@c^(0+128),w
 10462  058C  00A0               	movwf	??_sprintf^(0+128)
 10463  058D  01A1               	clrf	(??_sprintf^(0+128)+1)
 10464  058E  0820               	movf	??_sprintf^(0+128),w
 10465  058F  02AC               	subwf	sprintf@width^(0+128),f
 10466  0590  0821               	movf	(??_sprintf+1)^(0+128),w
 10467  0591  1C03               	skipc
 10468  0592  03AD               	decf	(sprintf@width+1)^(0+128),f
 10469  0593  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10470  0594  2D99               	goto	l4323
 10471  0595                     l4321:
 10472                           
 10473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10474  0595  1683               	bsf	3,5	;RP0=1, select bank1
 10475  0596  1303               	bcf	3,6	;RP1=0, select bank1
 10476  0597  01AC               	clrf	sprintf@width^(0+128)
 10477  0598  01AD               	clrf	(sprintf@width+1)^(0+128)
 10478  0599                     l4323:
 10479                           
 10480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10481  0599  082C               	movf	sprintf@width^(0+128),w
 10482  059A  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10483  059B  1903               	btfsc	3,2
 10484  059C  2D9E               	goto	u6551
 10485  059D  2D9F               	goto	u6550
 10486  059E                     u6551:
 10487  059E  2DB6               	goto	l4331
 10488  059F                     u6550:
 10489  059F                     l4325:
 10490                           
 10491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10492  059F  3020               	movlw	32
 10493  05A0  00A0               	movwf	??_sprintf^(0+128)
 10494  05A1  083B               	movf	sprintf@sp^(0+128),w
 10495  05A2  0084               	movwf	4
 10496  05A3  0820               	movf	??_sprintf^(0+128),w
 10497  05A4  1383               	bcf	3,7	;select IRP bank0
 10498  05A5  0080               	movwf	0
 10499  05A6                     l4327:
 10500  05A6  3001               	movlw	1
 10501  05A7  00A0               	movwf	??_sprintf^(0+128)
 10502  05A8  0820               	movf	??_sprintf^(0+128),w
 10503  05A9  07BB               	addwf	sprintf@sp^(0+128),f
 10504  05AA                     l4329:
 10505  05AA  30FF               	movlw	255
 10506  05AB  07AC               	addwf	sprintf@width^(0+128),f
 10507  05AC  1803               	skipnc
 10508  05AD  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10509  05AE  30FF               	movlw	255
 10510  05AF  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10511  05B0  082C               	movf	sprintf@width^(0+128),w
 10512  05B1  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10513  05B2  1D03               	btfss	3,2
 10514  05B3  2DB5               	goto	u6561
 10515  05B4  2DB6               	goto	u6560
 10516  05B5                     u6561:
 10517  05B5  2D9F               	goto	l4325
 10518  05B6                     u6560:
 10519  05B6                     l4331:
 10520                           
 10521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10522  05B6  3003               	movlw	3
 10523  05B7  052A               	andwf	sprintf@flag^(0+128),w
 10524  05B8  00A0               	movwf	??_sprintf^(0+128)
 10525  05B9  3000               	movlw	0
 10526  05BA  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10527  05BB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10528  05BC  0820               	movf	??_sprintf^(0+128),w
 10529  05BD  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10530  05BE  1903               	btfsc	3,2
 10531  05BF  2DC1               	goto	u6571
 10532  05C0  2DC2               	goto	u6570
 10533  05C1                     u6571:
 10534  05C1  2E3D               	goto	l4343
 10535  05C2                     u6570:
 10536  05C2                     l4333:
 10537                           
 10538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10539  05C2  302D               	movlw	45
 10540  05C3  00A0               	movwf	??_sprintf^(0+128)
 10541  05C4  083B               	movf	sprintf@sp^(0+128),w
 10542  05C5  0084               	movwf	4
 10543  05C6  0820               	movf	??_sprintf^(0+128),w
 10544  05C7  1383               	bcf	3,7	;select IRP bank0
 10545  05C8  0080               	movwf	0
 10546  05C9                     l4335:
 10547  05C9  3001               	movlw	1
 10548  05CA  00A0               	movwf	??_sprintf^(0+128)
 10549  05CB  0820               	movf	??_sprintf^(0+128),w
 10550  05CC  07BB               	addwf	sprintf@sp^(0+128),f
 10551  05CD  2E3D               	goto	l4343
 10552  05CE                     l4337:
 10553                           
 10554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10555  05CE  3000               	movlw	0
 10556  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 10557  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 10558  05D1  00B0               	movwf	___llmod@divisor+3
 10559  05D2  3000               	movlw	0
 10560  05D3  00AF               	movwf	___llmod@divisor+2
 10561  05D4  3000               	movlw	0
 10562  05D5  00AE               	movwf	___llmod@divisor+1
 10563  05D6  300A               	movlw	10
 10564  05D7  00AD               	movwf	___llmod@divisor
 10565  05D8  1683               	bsf	3,5	;RP0=1, select bank1
 10566  05D9  1303               	bcf	3,6	;RP1=0, select bank1
 10567  05DA  083C               	movf	sprintf@prec^(0+128),w
 10568  05DB  00A0               	movwf	??_sprintf^(0+128)
 10569  05DC  3001               	movlw	1
 10570  05DD                     u6585:
 10571  05DD  1003               	clrc
 10572  05DE  0DA0               	rlf	??_sprintf^(0+128),f
 10573  05DF  3EFF               	addlw	-1
 10574  05E0  1D03               	skipz
 10575  05E1  2DDD               	goto	u6585
 10576  05E2  1003               	clrc
 10577  05E3  0D20               	rlf	??_sprintf^(0+128),w
 10578  05E4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10579  05E5  0084               	movwf	4
 10580  05E6  160A  118A  200A  120A  118A  	fcall	stringdir
 10581  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 10582  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 10583  05ED  00A0               	movwf	___lldiv@divisor
 10584  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
 10585  05F3  00A1               	movwf	___lldiv@divisor+1
 10586  05F4  160A  118A  200A  120A  118A  	fcall	stringdir
 10587  05F9  00A2               	movwf	___lldiv@divisor+2
 10588  05FA  160A  118A  200A  120A  118A  	fcall	stringdir
 10589  05FF  00A3               	movwf	___lldiv@divisor+3
 10590  0600  1683               	bsf	3,5	;RP0=1, select bank1
 10591  0601  1303               	bcf	3,6	;RP1=0, select bank1
 10592  0602  0835               	movf	(sprintf@val+3)^(0+128),w
 10593  0603  1283               	bcf	3,5	;RP0=0, select bank0
 10594  0604  1303               	bcf	3,6	;RP1=0, select bank0
 10595  0605  00A7               	movwf	___lldiv@dividend+3
 10596  0606  1683               	bsf	3,5	;RP0=1, select bank1
 10597  0607  1303               	bcf	3,6	;RP1=0, select bank1
 10598  0608  0834               	movf	(sprintf@val+2)^(0+128),w
 10599  0609  1283               	bcf	3,5	;RP0=0, select bank0
 10600  060A  1303               	bcf	3,6	;RP1=0, select bank0
 10601  060B  00A6               	movwf	___lldiv@dividend+2
 10602  060C  1683               	bsf	3,5	;RP0=1, select bank1
 10603  060D  1303               	bcf	3,6	;RP1=0, select bank1
 10604  060E  0833               	movf	(sprintf@val+1)^(0+128),w
 10605  060F  1283               	bcf	3,5	;RP0=0, select bank0
 10606  0610  1303               	bcf	3,6	;RP1=0, select bank0
 10607  0611  00A5               	movwf	___lldiv@dividend+1
 10608  0612  1683               	bsf	3,5	;RP0=1, select bank1
 10609  0613  1303               	bcf	3,6	;RP1=0, select bank1
 10610  0614  0832               	movf	sprintf@val^(0+128),w
 10611  0615  1283               	bcf	3,5	;RP0=0, select bank0
 10612  0616  1303               	bcf	3,6	;RP1=0, select bank0
 10613  0617  00A4               	movwf	___lldiv@dividend
 10614  0618  160A  118A  2178  120A  118A  	fcall	___lldiv
 10615  061D  1283               	bcf	3,5	;RP0=0, select bank0
 10616  061E  1303               	bcf	3,6	;RP1=0, select bank0
 10617  061F  0823               	movf	?___lldiv+3,w
 10618  0620  00B4               	movwf	___llmod@dividend+3
 10619  0621  0822               	movf	?___lldiv+2,w
 10620  0622  00B3               	movwf	___llmod@dividend+2
 10621  0623  0821               	movf	?___lldiv+1,w
 10622  0624  00B2               	movwf	___llmod@dividend+1
 10623  0625  0820               	movf	?___lldiv,w
 10624  0626  00B1               	movwf	___llmod@dividend
 10625  0627  160A  118A  2122  120A  118A  	fcall	___llmod
 10626  062C  1283               	bcf	3,5	;RP0=0, select bank0
 10627  062D  1303               	bcf	3,6	;RP1=0, select bank0
 10628  062E  082D               	movf	?___llmod,w
 10629  062F  3E30               	addlw	48
 10630  0630  1683               	bsf	3,5	;RP0=1, select bank1
 10631  0631  1303               	bcf	3,6	;RP1=0, select bank1
 10632  0632  00A1               	movwf	(??_sprintf+1)^(0+128)
 10633  0633  0821               	movf	(??_sprintf+1)^(0+128),w
 10634  0634  00BE               	movwf	sprintf@c^(0+128)
 10635  0635                     l4339:
 10636                           
 10637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10638  0635  083E               	movf	sprintf@c^(0+128),w
 10639  0636  00A0               	movwf	??_sprintf^(0+128)
 10640  0637  083B               	movf	sprintf@sp^(0+128),w
 10641  0638  0084               	movwf	4
 10642  0639  0820               	movf	??_sprintf^(0+128),w
 10643  063A  1383               	bcf	3,7	;select IRP bank0
 10644  063B  0080               	movwf	0
 10645  063C  2DC9               	goto	l4335
 10646  063D                     l4343:
 10647                           
 10648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10649  063D  30FF               	movlw	255
 10650  063E  07BC               	addwf	sprintf@prec^(0+128),f
 10651  063F  1803               	skipnc
 10652  0640  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10653  0641  30FF               	movlw	255
 10654  0642  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10655  0643  0A3C               	incf	sprintf@prec^(0+128),w
 10656  0644  1D03               	skipz
 10657  0645  2E4A               	goto	u6591
 10658  0646  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 10659  0647  1D03               	btfss	3,2
 10660  0648  2E4A               	goto	u6591
 10661  0649  2E4B               	goto	u6590
 10662  064A                     u6591:
 10663  064A  2DCE               	goto	l4337
 10664  064B                     u6590:
 10665  064B                     l4345:
 10666                           
 10667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10668  064B  3001               	movlw	1
 10669  064C  1283               	bcf	3,5	;RP0=0, select bank0
 10670  064D  1303               	bcf	3,6	;RP1=0, select bank0
 10671  064E  07E2               	addwf	sprintf@f,f
 10672  064F  30FF               	movlw	-1
 10673  0650  0762               	addwf	sprintf@f,w
 10674  0651  0084               	movwf	4
 10675  0652  160A  118A  200A  120A  118A  	fcall	stringdir
 10676  0657  1683               	bsf	3,5	;RP0=1, select bank1
 10677  0658  1303               	bcf	3,6	;RP1=0, select bank1
 10678  0659  00A0               	movwf	??_sprintf^(0+128)
 10679  065A  0820               	movf	??_sprintf^(0+128),w
 10680  065B  00BE               	movwf	sprintf@c^(0+128)
 10681  065C  083E               	movf	sprintf@c^(0+128),w
 10682  065D  1D03               	btfss	3,2
 10683  065E  2E60               	goto	u6601
 10684  065F  2E63               	goto	u6600
 10685  0660                     u6601:
 10686  0660  120A  158A  2D32   	goto	l4067
 10687  0663                     u6600:
 10688  0663                     l4347:
 10689                           
 10690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10691  0663  083B               	movf	sprintf@sp^(0+128),w
 10692  0664  0084               	movwf	4
 10693  0665  1383               	bcf	3,7	;select IRP bank0
 10694  0666  0180               	clrf	0
 10695  0667                     l457:
 10696  0667  0008               	return
 10697  0668                     __end_of_sprintf:

Data Sizes:
    Strings     32
    Constant    118
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     78      80
    BANK1            80     31      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_cursor
    _main->_write_string
    _write_string->_write_char
    _write_char->_pin
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftadd->___ftpack
    _cursor->_CMDs
    _configLCD->_CMDs
    _clear_LCD->_CMDs
    _CMDs->_pin
    ___awtoft->___ftpack
    _Write_USART_String->_Write_USART

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___awtoft->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   51552
                                             75 BANK0      3     3      0
                        _Write_USART
                 _Write_USART_String
                           ___awtoft
                            ___ftmul
                           __baudios
                          _clear_LCD
                          _configADC
                          _configLCD
                          _config_rc
                          _config_tx
                             _cursor
                              _setup
                            _sprintf
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     539
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     279
                                              4 COMMON     2     2      0
                                _pin
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   42164
                                             66 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8663
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1213
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    7069
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4906
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              3 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2505
                                              3 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4049
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3823
                                             47 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cursor                                               4     3      1     601
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _config_tx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configLCD                                            2     2      0     279
                                              0 BANK0      2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     279
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     279
                                              4 COMMON     3     3      0
                                _pin
 ---------------------------------------------------------------------------------
 (3) _pin                                                  1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2601
                                              3 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     139
                                              4 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Write_USART
   _Write_USART_String
     _Write_USART
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   __baudios
   _clear_LCD
     _CMDs
       _pin
   _configADC
   _configLCD
     _CMDs
       _pin
   _config_rc
   _config_tx
   _cursor
     _CMDs
       _pin
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _write_string
     _write_char
       _pin

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      39       7       71.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 12:18:26 2021

                          pc 0002               ___bmul@product 002D                           l90 0785  
                         l97 1DCC                           _V1 00C2                           _V2 00BF  
               ___awdiv@sign 0028                           fsr 0004          ___wmul@multiplicand 0075  
               ___ftadd@exp1 005B                 ___ftadd@exp2 005A         __size_of_Write_USART 000C  
               ___ftadd@sign 0059                          l200 14DE                          l201 14E9  
                        l210 154C                          l202 14F4                          l203 14FF  
                        l140 1F9C                          l212 159C                          l204 150A  
                        l141 1F9D                          l205 1515                          l150 1FB9  
                        l142 1FA3                          l134 1F85                          l214 159A  
                        l206 1520                          l143 1FA4                          l135 1F88  
                        l207 152B                          l232 0806                          l144 1FAA  
                        l136 1F8E                          l208 1536                          l241 1D8E  
                        l145 1FAB                          l137 1F8F                          l153 1E3D  
                        l209 1541                          l250 1E1D                          l146 1FB1  
                        l138 1F95                          l162 1E88                          l147 1FB2  
                        l139 1F96                          l235 1D82                          l244 1D98  
                        l148 1FB8                          l156 1DA5                          l420 02B9  
                        l165 12C0                          l238 1D70                          l174 1121  
                        l168 1DFF                          l427 02FD                          l196 14BF  
                        l197 158D                          l461 1EEB                          l365 0D27  
                        l198 14C8                          l710 1715                          l358 0A6C  
                        l199 14D3                          l711 171F                          l463 1F05  
                        l712 1724                          l721 1795                          l457 0667  
                        l707 17FF                          l387 0E06                          l644 1248  
                        l670 1679                          l750 0886                          l663 1EDA  
                        l671 168C                          l487 1DE3                          l903 1FFF  
                        l832 1177                          l840 10DB                          l497 11DF  
                        l913 1F7B                          l657 07FC                          l690 1301  
                        l746 08C3                          l770 14B3                          l667 16C9  
                        l747 0835                          l923 1DB7                          l764 1F3F  
                        l781 1D8C                          l757 08B6                          l686 1342  
                        l678 16BC                          l791 13CE                          l697 131C  
                        l698 1326                          l699 1342                          l787 1E62  
                        l798 13B1                          _RD0 0040                          _RD1 0041  
                        _RD2 0042                          _RE0 0048                          _RD3 0043  
                        _RE1 0049                          _RD4 0044                          _RD5 0045  
                        _RD6 0046                          _RD7 0047                          _ISR 1E89  
                        _pin 1F7C                          fsr0 0004                          indf 0000  
               ___awmod@sign 0021  __size_of_Write_USART_String 001E                         ?_ISR 0070  
                       l4001 1160                         l4003 1169                         l4011 10B0  
                       l4021 1254                         l4005 116F                         l4013 10BD  
                       l2261 1DD9                         l4101 0DEE                         l4031 1285  
                       l4023 125A                         l4015 10C3                         l2263 1DDB  
                       l2255 1DD0                         l4111 0E2C                         l4103 0E00  
                       l2521 1D94                         l4041 12BA                         l4033 1291  
                       l4025 126B                         l4009 10A9                         l2265 1DE2  
                       l2257 1DD1                         l4201 01CB                         l4121 0E51  
                       l4113 0E3A                         l4105 0E04                         l4043 1D99  
                       l4035 1297                         l4027 1272                         l4019 1249  
                       l4051 1E77                         l2259 1DD5                         l4203 01D7  
                       l4211 01EC                         l4131 0E94                         l4123 0E70  
                       l4115 0E3E                         l4037 12A8                         l4029 127F  
                       l4053 1E7D                         l4045 1E66                         l2621 1DB6  
                       l2613 1DA7                         l3501 120D                         l4301 053C  
                       l4221 026E                         l4213 01F9                         l4205 01DE  
                       l4141 0EF9                         l4133 0EB9                         l4125 0E85  
                       l4117 0E42                         l4109 0E08                         l4061 10FD  
                       _ADC0 006F                         l2519 1D8E                         l3431 12C6  
                       l4039 12AE                         l4055 1E82                         l4047 1E6B  
                       l2615 1DA8                         l3511 122D                         l3503 1211  
                       l4311 0563                         l4303 0545                         l4231 02D4  
                       l4223 02AD                         l4215 0207                         l4207 01E7  
                       l4151 0F79                         l4143 0EFF                         l4135 0EBF  
                       l4127 0E89                         l4119 0E4D                         l4071 0D3F  
                       l4063 1105                         _ADC1 006E                         l3441 12E9  
                       l3433 12CD                         l4049 1E70                         l3601 176A  
                       l2617 1DAE                         l3513 1234                         l3505 1215  
                       l4321 0595                         l4313 0571                         l4305 054D  
                       l4241 030B                         l4233 02E1                         l4225 02C1  
                       l4217 020E                         l4161 0023                         l4153 0F9A  
                       l4145 0F18                         l4137 0ED2                         l4129 0E8D  
                       l4081 0D73                         l4073 0D44                         l4065 0D2B  
                       l4057 10DC                         l4401 075E                         l3291 1E01  
                       l3451 1316                         l3443 12EF                         l3611 1799  
                       l3603 1774                         l2811 1371                         l2803 1343  
                       l2619 1DB4                         l3507 1226                         l3515 123A  
                       l3531 07B0                         l3523 07A2                         l4331 05B6  
                       l4323 0599                         l4315 057A                         l4307 0559  
                       l4251 03D6                         l4243 0312                         l4235 02F0  
                       l4227 02CA                         l4219 0213                         l4171 0084  
                       l4163 002C                         l4147 0F51                         l4139 0EF5  
                       l4155 0FA2                         l4091 0DB1                         l4083 0D8A  
                       l4075 0D48                         l4067 0D32                         l4059 10E1  
                       l4411 077A                         l4403 0764                         l3293 1E03  
                       l3453 1320                         l3445 12F9                         l3437 12D4  
                       l3429 12C1                         l3461 1F7D                         l3621 17CE  
                       l3613 17A9                         l3605 177A                         l2821 1385  
                       l2813 1372                         l2805 1356                         l3701 1FF5  
                       l3517 123F                         l3509 122C                         l3541 07C9  
                       l3533 07B4                         l3525 07A5                         l4333 05C2  
                       l4325 059F                         l4317 057E                         l4309 055F  
                       l4261 048B                         l4253 0415                         l4245 0316  
                       l4237 02F7                         l4229 02CE                         l4173 008C  
                       l4165 004B                         l4181 00EA                         l4157 0FB1  
                       l4149 0F70                         l4093 0DB7                         l4085 0D90  
                       l4077 0D5A                         l4069 0D38                         l4413 0780  
                       l4405 076A                         l3295 1E0E                         l3455 1328  
                       l3447 1308                         l3439 12E2                         l3471 1FA1  
                       l3463 1F81                         l3623 17D2                         l3615 17AD  
                       l3607 1783                         l2815 1378                         l3631 13CF  
                       l3703 1FFB                         l3711 1F4B                         l3519 1244  
                       l3551 07E8                         l3543 07CD                         l3535 07B9  
                       l3527 07A9                         l4335 05C9                         l4343 063D  
                       l4327 05A6                         l4319 0589                         l4271 04B1  
                       l4263 048F                         l4255 0421                         l4247 032E  
                       l4239 0306                         l4191 0169                         l4183 0165  
                       l4167 005A                         l4159 0FEA                         l4095 0DBC  
                       l4079 0D5E                         l4087 0DA0                         l4415 078B  
                       l4407 0770                         l3297 1E12                         l3457 133C  
                       l3449 1312                         l4361 1EB9                         l3473 1FA8  
                       l3465 1F8C                         l3625 17E2                         l3617 17BD  
                       l3609 178F                         l3561 16CA                         l2841 13C6  
                       l2817 137F                         l2809 135F                         l3633 13E2  
                       l3721 1F6A                         l3713 1F52                         l3481 11E3  
                       l3545 07D1                         l3537 07BF                         l3553 07EE  
                       l3529 07AE                         l3801 0BCF                         l4337 05CE  
                       l4329 05AA                         l4281 04D2                         l4273 04B5  
                       l4265 0495                         l4249 037B                         l4257 047C  
                       l4185 0167                         l4177 00A4                         l4169 007B  
                       l4097 0DD1                         l4089 0DAE                         l4345 064B  
                       l4409 0776                         l4417 0790                         l3459 1341  
                       l4363 1EBE                         l3475 1FAF                         l3467 1F93  
                       l3731 1E22                         l3627 17E4                         l3619 17BE  
                       l3571 1700                         l3563 16E9                         l2835 13A6  
                       l2827 138D                         l2819 1381                         l3651 1436  
                       l3643 1401                         l3723 1F71                         l3715 1F56  
                       l3707 1F40                         l3491 11F7                         l3483 11E7  
                       l3555 07F3                         l3547 07DB                         l3539 07C2  
                       l3811 0C9B                         l3803 0BD6                         l4339 0635  
                       l4283 04D8                         l4275 04B9                         l4259 0484  
                       l4195 01A0                         l4179 00E3                         l4267 049C  
                       l4347 0663                         l4099 0DE8                         l4371 066D  
                       l4365 1EC0                         l4357 1EB2                         l3477 1FB6  
                       l3469 1F9A                         l3741 1E34                         l3733 1E28  
                       l2941 14BB                         l3581 171E                         l3573 1705  
                       l3565 16EF                         l2837 13B6                         l2829 139F  
                       l3901 1686                         l3821 081A                         l3661 145C  
                       l3653 143C                         l3645 142E                         l3637 13E9  
                       l3717 1F5A                         l3709 1F46                         l3725 1F77  
                       l3493 11FB                         l3485 11EC                         l3557 07F8  
                       l3549 07E1                         l4293 0511                         l4277 04C4  
                       l4269 04AD                         l4197 01AA                         l4381 0686  
                       l4373 0672                         l4359 1EB5                         l3735 1E2B  
                       l2951 14ED                         l2943 14C3                         l2791 1D8C  
                       l3591 1742                         l3583 1723                         l3575 170B  
                       l3567 16F9                         l2839 13BB                         l3903 1690  
                       l3911 16AA                         l3831 0836                         l3671 1482  
                       l3663 1464                         l3655 1440                         l3647 142F  
                       l3639 13FA                         l3719 1F64                         l3495 11FD  
                       l3487 11EE                         l3479 11E0                         l3815 0D07  
                       l4295 051B                         l4279 04CA                         l4199 01C5  
                       l3751 1DF4                         l3743 1DE5                         l4391 06B2  
                       l4383 068B                         l4375 0677                         l3737 1E2E  
                       l3729 1E1F                         l4481 1561                         l2961 1524  
                       l2953 14F8                         l2945 14CC                         l2881 1DC8  
                       l3593 1748                         l3585 1725                         l3577 1716  
                       l3841 085F                         l3833 083C                         l3825 0823  
                       l3673 148A                         l3665 146A                         l3657 1444  
                       l3649 1430                         l3681 1FBA                         l3761 0990  
                       l3497 1203                         l3489 11F2                         l3809 0C94  
                       l4297 0526                         l4289 04DA                         l3753 1DF7  
                       l3745 1DE8                         l4393 06E3                         l4385 0693  
                       l4377 067C                         l4369 0668                         l3739 1E31  
                       l2971 1557                         l2963 152F                         l2955 1503  
                       l2947 14D7                         l2939 14B5                         l2891 1D6F  
                       l2883 1DCB                         l2875 1DB8                         l2787 1D83  
                       l3595 1751                         l3587 172B                         l3579 171A  
                       l3931 1EF9                         l3923 1EDB                         l3851 088A  
                       l3843 086D                         l3835 084B                         l3819 0807  
                       l3675 1492                         l3667 146E                         l3659 1454  
                       l3691 1FD2                         l3683 1FBE                         l3771 0A1F  
                       l3499 1206                         l4299 052D                         l3755 1DFA  
                       l3747 1DEE                         l4395 0716                         l4387 069C  
                       l4379 0681                         l2885 0802                         l2981 1592  
                       l2965 153A                         l2957 150E                         l2949 14E2  
                       l2877 1DC6                         l2789 1D8A                         l3597 175D  
                       l3589 1738                         l3941 118D                         l3933 1EFF  
                       l3925 1EDF                         l3917 16B1                         l3909 1698  
                       l3845 0877                         l3837 084D                         l3677 1498  
                       l3669 1472                         l3693 1FD6                         l3685 1FC4  
                       l3757 08C7                         l3781 0A74                         l3749 1DF1  
                       l4397 074D                         l4389 06A7                         l2983 1595  
                       l2967 1545                         l2959 1519                         l2887 1D79  
                       l2879 1DC7                         l3599 1764                         l3951 11C7  
                       l3943 119A                         l3927 1EE3                         l3919 16C1  
                       l3871 159D                         l3847 0878                         l3839 0856  
                       l3695 1FE7                         l3687 1FC7                         l3775 0A39  
                       l3759 08CD                         l3767 09AA                         l3791 0B3B  
                       l3783 0A76                         l4479 0E1E                         l4399 0755  
                       l2969 1550                         l2977 1559                         l2889 1D69  
                       l3961 1F06                         l3953 11C8                         l3945 119E  
                       l3937 1178                         l3929 1EF2                         l3873 15B8  
                       l3865 08AB                         l3857 0892                         l3849 0880  
                       l3697 1FED                         l3689 1FCE                         l3769 09B0  
                       l3793 0B42                         l3785 0A7D                         l2979 158E  
                       l3971 1F2C                         l3963 1F0C                         l3955 11D1  
                       l3947 11A7                         l3939 118A                         l3891 161D  
                       l3883 15DA                         l3867 08BB                         l3859 08A4  
                       l3699 1FEE                         l3779 0A70                         l2989 159B  
                       l3973 1F2E                         l3965 1F19                         l3981 1E3E  
                       l3949 11B9                         l3957 11D7                         l3893 1621  
                       l3885 160E                         l3877 15C1                         l3797 0BAE  
                       l3975 1F3C                         l3967 1F1D                         l3983 1E47  
                       l3991 112C                         l3895 162A                         l3887 1616  
                       l3977 1F3E                         l3969 1F2A                         l3985 1E49  
                       l3993 112F                         l3897 1656                         l3889 1618  
                       l3995 113C                         l3899 1678                         l3997 1140  
                       l3989 1122                         l3999 1152                         ?_pin 0070  
                       STR_1 1097                         STR_2 1086                         _CMDs 1E1E  
                       u3230 1D94                         u2510 1DD5                         u3310 1DAE  
                       u3231 1D93                         u2511 1DD4                         u3311 1DAD  
                       u5000 170B                         u2520 1DE2                         u3320 1DB4  
                       u5001 170A                         u2521 1DE1                         u3321 1DB3  
                       u5010 1715                         u5011 1714                         u5100 176A  
                       u5020 171E                         u5101 1769                         u5021 171D  
                       u5030 1723                         u5031 1722                         u5120 177A  
                       u5040 1738                         u5200 13E2                         u5121 1779  
                       u5041 1737                         u5201 13E1                         u5130 1782  
                       u6010 10C3                         u5210 13FA                         u5131 1781  
                       u5115 176B                         u6011 10C2                         u5211 13F9  
                       u6020 1E6B                         u5060 1748                         u5220 1411  
                       u6100 0DAE                         u6021 1E6A                         u5061 1747  
                       u6005 10B1                         u5301 147B                         u6101 0DAD  
                       u6030 1E7D                         u5150 1795                         u5070 1750  
                       u5302 1482                         u5230 1423                         u6110 0DFF  
                       u6031 1E7C                         u5151 1794                         u5071 174F  
                       u5055 1739                         u6111 0DFE                         u4520 1E1D  
                       u4600 12E8                         u3720 1D8A                         u5160 1799  
                       u3800 13A5                         u5240 1444                         u5400 1FFB  
                       u6200 0FB1                         u6120 0E3A                         u6040 10EB  
                       u4521 1E1C                         u4601 12E7                         u3721 1D89  
                       u5161 1798                         u5145 1784                         u3801 13A4  
                       u5241 1443                         u5225 140D                         u5401 1FFA  
                       u6201 0FB0                         u6121 0E37                         u5170 17AD  
                       u5090 1763                         u5330 1498                         u5410 1F46  
                       u6210 0023                         u6130 0E3E                         u6050 110F  
                       u5171 17AC                         u5091 1762                         u5331 1497  
                       u5315 1483                         u5251 144D                         u5235 141F  
                       u5411 1F45                         u6211 0FFA                         u6131 0E3D  
                       u4620 1307                         u4700 1F8C                         u3820 13B6  
                       u3740 1356                         u5252 1454                         u5340 1FC4  
                       u5500 0A7D                         u6300 01D7                         u6220 002C  
                       u6140 0E70                         u6060 1121                         u4621 1306  
                       u4701 1F8B                         u5181 17C7                         u5085 1752  
                       u3821 13B5                         u3741 1355                         u5325 148B  
                       u5341 1FC3                         u5501 0A7C                         u6301 01D6  
                       u6221 002B                         u6205 0FAD                         u6141 0E6F  
                       u6061 1120                         u4710 1F93                         u5190 17D2  
                       u5182 17CE                         u3830 13BB                         u3750 136A  
                       u5430 1F5A                         u5510 0B42                         u6310 01F9  
                       u6230 004B                         u6150 0E94                         u6070 0D38  
                       u4615 12FA                         u4711 1F92                         u5191 17D1  
                       u3831 13BA                         u3815 13A8                         u5431 1F59  
                       u5511 0B41                         u6311 01F8                         u6231 004A  
                       u6215 0FF5                         u6151 0E93                         u6071 0D37  
                       u4640 1316                         u4720 1F9A                         u3760 1385  
                       u5600 088A                         u5280 146A                         u5360 1FD6  
                       u5440 1F64                         u5520 0BD6                         u6400 0483  
                       u6320 0207                         u6240 005A                         u6160 0EA8  
                       u6080 0D5A                         u4641 1315                         u4721 1F99  
                       u3761 1384                         u5601 0889                         u5281 1469  
                       u5265 1455                         u5361 1FD5                         u5441 1F63  
                       u5425 1F4C                         u5521 0BD5                         u6401 0482  
                       u6321 0206                         u6241 0059                         u6081 0D59  
                       u4650 131C                         u4570 12C6                         u4730 1FA1  
                       u3770 138C                         u5610 0891                         u5290 1472  
                       u4810 1215                         u5530 0C9B                         u6410 049B  
                       u6250 007B                         u6170 0EF9                         u6090 0DA0  
                       u4651 131B                         u4635 130B                         u4571 12C5  
                       u4731 1FA0                         u3771 138B                         u3755 1366  
                       u5611 0890                         u5291 1471                         u5275 145D  
                       u5355 1FC8                         u4811 1214                         u5531 0C9A  
                       u6411 049A                         u6315 01F5                         u6251 007A  
                       u6171 0EF8                         u6091 0D9F                         u4660 1320  
                       u4580 12CD                         u4740 1FA8                         u5700 1656  
                       u5540 081A                         u5380 1FE7                         u5460 1F77  
                       u6500 054D                         u6420 04B5                         u6340 02C0  
                       u6180 0F70                         _RCIF 0065                         u4661 131F  
                       u4581 12CC                         u4741 1FA7                         u5701 1655  
                       u5541 0819                         u5381 1FE6                         u5461 1F76  
                       u5445 1F60                         u4805 1207                         u6501 054C  
                       u6421 04B4                         u6341 02BF                         u6245 0056  
                       u6181 0F6F                         u6165 0EA3                         u4670 1333  
                       u4750 1FAF                         u3790 139E                         u5710 168C  
                       u5630 08A3                         u5550 0834                         u5470 08CD  
                       u4830 1226                         u4910 07D1                         u6510 0559  
                       u6430 04CA                         u6350 02E1                         u6270 019F  
                       u6190 0F9A                         u4751 1FAE                         u3791 139D  
                       u5711 168B                         u5631 08A2                         u5551 0833  
                       u5375 1FD7                         u5455 1F6B                         u5471 08CC  
                       u4831 1225                         u4911 07D0                         u6511 0558  
                       u6431 04C9                         u6351 02E0                         u6335 0216  
                       u6271 019E                         u6191 0F99                         u4680 1341  
                       u4760 1FB6                         u5720 1690                         u5640 08AA  
                       u5480 09B0                         u4920 07DB                         u6600 0663  
                       u6520 0563                         u6440 04D2                         u6360 02F0  
                       u6280 01AA                         u4681 1340                         u4761 1FB5  
                       u3785 138E                         u5721 168F                         u5705 1652  
                       u5641 08A9                         u5625 0893                         u5385 1FE3  
                       u5481 09AF                         u4825 1216                         u4921 07DA  
                       u4905 07C3                         u6601 0660                         u6521 0562  
                       u6441 04D1                         u6361 02EF                         u6281 01A9  
                       u6265 016C                         u6610 1EB9                         u4690 1F81  
                       u3970 1599                         u5730 1697                         u5570 086D  
                       u4850 123A                         u4770 11E7                         u5490 0A74  
                       u6530 0571                         u6370 030B                         u6290 01C5  
                       i1l83 1EAB                         u4675 132F                         u4595 12DB  
                       u6611 1EB8                         u4691 1F80                         u3971 1598  
                       u5731 1696                         u5571 086C                         u5395 1FEF  
                       u4851 1239                         u4835 1222                         u4771 11E6  
                       u5491 0A73                         u6531 0570                         u6371 030A  
                       u6355 02DD                         u6291 01C4                         u6275 019B  
                       u5900 1F0C                         u5820 1EFF                         u5660 08BB  
                       u4860 123F                         u4780 11F2                         u4940 07EE  
                       u6540 0589                         u6460 0510                         u6620 0776  
                       u5901 1F0B                         u5821 1EFE                         u5805 1EEC  
                       u5661 08BA                         u5565 0858                         u4861 123E  
                       u4845 122E                         u4781 11F1                         u4941 07ED  
                       u4925 07D7                         u6541 0588                         u6461 050F  
                       u6365 02EC                         u6621 0775                         u5910 1F1D  
                       u5830 118A                         u5750 16A9                         u5670 15B8  
                       u5590 0886                         u4790 1203                         u4950 07F3  
                       u4870 07A9                         u6550 059F                         u6470 051B  
                       u6630 0780                         u5911 1F1C                         u5831 1189  
                       u5815 1EF3                         u5751 16A8                         u5671 15B7  
                       u5655 08AD                         u5591 0885                         u5575 0869  
                       u4791 1202                         u4951 07F2                         u4935 07E2  
                       u4871 07A8                         u6551 059E                         u6535 056D  
                       u6471 051A                         u6455 04DD                         u6631 077F  
                       u5920 1F3C                         u4960 16E9                         u5760 16B0  
                       u5680 15D9                         u4880 07B4                         u6560 05B6  
                       u6480 0526                         u6640 078B                         u5921 1F3B  
                       u4961 16E8                         u5761 16AF                         u5745 1699  
                       u5681 15D8                         u5585 0879                         u4881 07B3  
                       u6561 05B5                         u6545 0585                         u6481 0525  
                       u6465 050C                         u6385 037E                         u6641 078A  
                       u4970 16EF                         u5930 1E47                         u5850 119E  
                       u4890 07BF                         u6570 05C2                         u6490 053C  
                       u6707 127C                         u4971 16EE                         u5931 1E46  
                       u5851 119D                         u4891 07BE                         u6571 05C1  
                       u6491 053B                         u6395 0424                         u4980 16F9  
                       u5940 112C                         u5780 16C1                         u6717 1289  
                       u5925 1F38                         u4981 16F8                         u5845 118F  
                       u5941 112B                         u5781 16C0                         u6485 0522  
                       u4990 1705                         u5870 11B9                         u5790 1EE3  
                       u6590 064B                         u6727 1295                         u4991 1704  
                       u5871 11B8                         u5791 1EE2                         u5775 16B3  
                       u5695 1623                         u6591 064A                         u6495 0538  
                       u5960 1140                         u6737 12A3                         u5865 11A0  
                       u5961 113F                         u6585 05DD                         u6657 0798  
                       u5890 11D7                         u5970 1152                         u6747 12B2  
                       u5891 11D6                         u5875 11B5                         u5971 1151  
                       u5955 1131                         u6667 1DFC                         u6757 12BE  
                       u6677 124F                         u5885 11C9                         u5990 116F  
                       u6767 1590                         u6687 1260                         u5991 116E  
                       u5975 114E                         u6777 1E38                         u6697 126F  
                       u5985 1161                         _TRMT 04C1                         _main 0668  
               ___ftpack@arg 0073                 ___ftpack@exp 0076                         btemp 007E  
                       pin@a 0073                         start 000C                 _sprintf$1185 00A6  
          ___bmul@multiplier 002E                 ___ftmul@cntr 003D                 ___ftmul@sign 003E  
                      ??_ISR 0070                 ___fttol@exp1 0055                 ___fttol@lval 0051  
                      ??_pin 0073                        CMDs@a 0076                        ?_CMDs 0070  
                      ?_main 0070              __end_of___awdiv 1249              __end_of___ftadd 1800  
            __end_of___awmod 07FD              __end_of___ftneg 1D8D                        _ANSEL 0188  
            __end_of___lldiv 11E0              __end_of___ftmul 14B4              ___awdiv@divisor 0022  
            __end_of___llmod 1178              __end_of___ftsub 1E63              __end_of___fttol 13CF  
            __end_of___lwdiv 2000                write_string@a 0076                write_string@i 0023  
                      i1l253 1D61                        i1l256 1D68              __end_of___lwmod 1F7C  
            ___awdiv@counter 0027                        _RCREG 001A                        _SPBRG 0099  
                      _PORTC 0007                        _PORTD 0008                        _PORTE 0009  
                      _TRISA 0085                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019                 ___lltoft@exp 0028                ___awtoft@sign 0028  
            __end_of_dpowers 1086                        _scale 0A6D              __end_of_isdigit 1DB8  
              ___ftpack@sign 0077                        _setup 1DB8                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0668  
               __end_of_CMDs 1E3E              __initialization 000F                   _Read_USART 1D61  
               __end_of_main 07A2                       ??_CMDs 0074                       ??_main 006B  
              ___fttol@sign1 0050        __size_of_write_string 0046         __size_of__tdiv_to_l_ 00BD  
                     _ADCON1 009F             ___llmod@dividend 0031                       ?_scale 003F  
                     _ADRESH 001E             ___awdiv@dividend 0024                       ?_setup 0070  
           __end_of___awtoft 1EDB             __end_of___ftpack 1343                       _ANSELH 0189  
           __end_of__baudios 0807                       _BUFFER 00C5             __end_of___lltoft 10DC  
                     i1l2081 1E9E                       i1l2073 1E89                       i1l2083 1EA3  
                     i1l2075 1E8F                       i1l2085 1EA9                       i1l2077 1E90  
                     i1l1631 1D61                       i1l2079 1E98                       i1l1633 1D67  
                     u225_20 1E8F                       u225_21 1E8E                       u162_20 1D67  
                     u226_20 1E9E                       u162_21 1D66                       u226_21 1E9D  
                     u227_20 1EA9                       u227_21 1EA8             __end_of__powers_ 1037  
                     ___bmul 1DCD                       ___ftge 1F06                 _write_string 10DC  
                     ___wmul 1EDB                    ??___awdiv 0026                    ??___ftadd 0055  
                  ??___awmod 0077                    ??___ftneg 0076                    ??___lldiv 0073  
                  ??___ftmul 0035                    ??___llmod 0074                    ??___ftsub 0078  
                  ??___fttol 004C                    ??___lwdiv 0025                    ??___lwmod 0077  
                     _cursor 1E63                       _fround 08C4             ___awdiv@quotient 0029  
            ___awmod@divisor 0073              ___awmod@counter 0020        ___ftmul@f3_as_product 003A  
                  ??_isdigit 0073                       saved_w 007E                    ??_sprintf 00A0  
    __end_of__initialization 001F                   ___ftadd@f1 004F                   ___ftadd@f2 0052  
                 ___ftge@ff1 0020                   ___ftge@ff2 0023                   ___ftneg@f1 0073  
                 ___awtoft@c 0023          ___bmul@multiplicand 002B                   ___ftmul@f1 002F  
                 ___ftmul@f2 0032                  ?_Read_USART 0070                   ___ftsub@f1 005F  
                 ___ftsub@f2 005C                   ___fttol@f1 0048               __pcstackCOMMON 0070  
                 ___lltoft@c 0023                __end_of_scale 0D28                __end_of_setup 1DCD  
         __size_of_clear_LCD 000D                   __div_to_l_ 159D           __size_of_configADC 00E9  
         __size_of_configLCD 0078           __size_of_config_rc 0008           __size_of_config_tx 000A  
            __div_to_l_@exp1 0033              __div_to_l_@cntr 0032                      ??_scale 0042  
            __div_to_l_@quot 002E                 sprintf@width 00AC                      ??_setup 0073  
               Write_USART@a 0073                   __pbssBANK0 006E                   __pbssBANK1 00BF  
              __div_to_l_@f1 0020                __div_to_l_@f2 0023                   __pmaintext 0668  
                    ?___bmul 002B                      ?___ftge 0020                      ?___wmul 0073  
              ??_Write_USART 0073                   __pintentry 0004                      ?_cursor 0077  
                    ?_fround 003F                    ?___awtoft 0023                    ?___ftpack 0073  
                  ?__baudios 0070                    ?___lltoft 0023   __end_of_Write_USART_String 1E1E  
        __size_of_Read_USART 0008                   __stringtab 1000            __end_of_clear_LCD 1DA6  
          __end_of__npowers_ 105E                   _scale$1184 0044            __end_of_configADC 159D  
          __end_of_configLCD 12C1            __end_of_config_rc 1D71            __end_of_config_tx 1D83  
            __size_of___bmul 0017              __size_of___ftge 003A                      ___awdiv 11E0  
                    ___ftadd 16CA                      ___awmod 07A2                      ___ftneg 1D83  
                    ___lldiv 1178              __size_of___wmul 002B                      ___ftmul 13CF  
                    ___llmod 1122                      ___ftsub 1E3E                      ___fttol 1343  
                    ___lwdiv 1FBA                      ___lwmod 1F40                   ??___awtoft 0026  
                 ??___ftpack 0020                    _ANSELbits 0188                   ??__baudios 0073  
            __size_of_cursor 0026              __size_of_fround 01A9                   ??___lltoft 0027  
                    __ptext1 10DC                      __ptext2 1DE4                      __ptext3 0D28  
                    __ptext4 0A6D                      __ptext5 07A2                      __ptext6 11E0  
                    __ptext7 1DA6                      __ptext8 08C4                      __ptext9 1F40  
               __size_of_ISR 0029                  ?__div_to_l_ 0020                      _dpowers 105E  
        __end_of_Write_USART 1D99                      _isdigit 1DA6                 __size_of_pin 003E  
           ___awmod@dividend 0075                      _sprintf 0D28                      clrloop0 1D72  
       end_of_initialization 001F                      cursor@a 0021                      cursor@b 0077  
                    cursor@x 0022              ___lldiv@divisor 0020              ___lldiv@counter 002C  
                  _RCSTAbits 0018                      psplit$0 E0035               __tdiv_to_l_@f1 0020  
             __tdiv_to_l_@f2 0023                ??__tdiv_to_l_ 0073                    _TRISAbits 0085  
                  _TRISBbits 0086                    _TRISEbits 0089                    _TXSTAbits 0098  
        __size_of__div_to_l_ 012D                 ??_Read_USART 0070                  ___ftmul@exp 0039  
             __end_of___bmul 1DE4               __end_of___ftge 1F40                  _Write_USART 1D8D  
             __end_of___wmul 1F06                   _write_char 1DE4               __end_of_cursor 1E89  
             __end_of_fround 0A6D            pnum$text3_split_1 0035          start_initialization 000F  
                __end_of_ISR 1EB2          __end_of__tdiv_to_l_ 08C4                  __end_of_pin 1FBA  
         __end_of_Read_USART 1D69              ___llmod@divisor 002D              ___llmod@counter 0075  
                   ??___bmul 002C                     ??___ftge 0073                     ??___wmul 0077  
                   ??_cursor 0020                     ??_fround 0042                sprintf@tmpval 00AE  
                 fround@prec 004E            __size_of___awtoft 0029            __size_of___ftpack 0082  
          __size_of__baudios 0005            __size_of___lltoft 0033                  __pbssCOMMON 0078  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
                sprintf@flag 00AA                  sprintf@eexp 00B6                  sprintf@fval 00B8  
         _Write_USART_String 1E00                  sprintf@prec 00BC                    _clear_LCD 1D99  
           ___lwdiv@dividend 0023          ?_Write_USART_String 0070                     ?___awdiv 0022  
                   ?___ftadd 004F                     ?___awmod 0073                     ?___ftneg 0073  
                   ?___lldiv 0020                     ?___ftmul 002F                     ?___llmod 002D  
                   ?___ftsub 005C                    __npowers_ 1037                     ?___fttol 0048  
                   ?___lwdiv 0021                     ?___lwmod 0073                    _configADC 14B4  
                  _configLCD 1249                  ?_write_char 0070                    _config_rc 1D69  
                  _config_tx 1D79                    __pstrings 1000                  __tdiv_to_l_ 0807  
               ??__div_to_l_ 0026                     ?_isdigit 0070                    _readUSART 0079  
                  _entregado 0078         ??_Write_USART_String 0074             ___lwdiv@quotient 0027  
                   ?_sprintf 0062               __size_of_scale 02BB               __size_of_setup 0015  
          interrupt_function 0004               ___wmul@product 0020                    clear_ram0 1D71  
                   _PIE1bits 008C                   ?_clear_LCD 0070                     _PIR1bits 000C  
         __end_of__div_to_l_ 16CA                ?_write_string 0076                   ?_configADC 0070  
                 ?_configLCD 0070                   ?_config_rc 0070                   ?_config_tx 0070  
                 _ADCON0bits 001F                  __stringbase 100F            ___wmul@multiplier 0073  
                write_char@a 0075          __size_of_write_char 001C               ??_write_string 0020  
               ?_Write_USART 0070             __size_of___awdiv 0069             __size_of___ftadd 0136  
           __size_of___awmod 005B             __size_of___ftneg 000A             __size_of___lldiv 0068  
           __size_of___ftmul 00E5             __size_of___llmod 0056             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0046             __size_of___lwmod 003C  
                   ___awtoft 1EB2                     ___ftpack 12C1                     __baudios 0802  
                _fround$1182 004B                  _fround$1183 0048           __end_of__stringtab 1010  
                   ___lltoft 10A9                  _isdigit$986 0073                   _ANSELHbits 0189  
                 sprintf@val 00B2             __size_of_isdigit 0012              ___lwdiv@divisor 0021  
            ___lwdiv@counter 0026                     __ptext10 1FBA                     __ptext11 13CF  
                   __ptext20 1E3E                     __ptext12 1DCD                     __ptext21 16CA  
                   __ptext13 0807                     __ptext30 1D99                     __ptext22 1D83  
                   __ptext14 159D                     __ptext31 1E1E                     __ptext23 1F06  
                   __ptext15 1EDB                     __ptext32 1F7C                     __ptext24 1DB8  
                   __ptext16 10A9                     __ptext33 0802                     __ptext25 1E63  
                   __ptext17 1122                     __ptext34 1EB2                     __ptext26 1D79  
                   __ptext18 1178                     __ptext35 12C1                     __ptext27 1D69  
                   __ptext19 1343                     __ptext36 1E00                     __ptext28 1249  
                   __ptext37 1D8D                     __ptext29 14B4                     __ptext38 1E89  
                   __ptext39 1D61                     __powers_ 1010                     _contador 007A  
           __size_of_sprintf F940                __size_of_CMDs 0020                __size_of_main 013A  
                  pnum$text3 000E                  ??_clear_LCD 0077                  ??_configADC 0073  
                ??_configLCD 0020                  ??_config_rc 0073                  ??_config_tx 0073  
                 _INTCONbits 000B          Write_USART_String@a 0075          Write_USART_String@i 0076  
                   isdigit@c 0074                     scale@scl 0047                     intlevel1 0000  
                  sprintf@ap 00A9             __tdiv_to_l_@exp1 002B             __tdiv_to_l_@cntr 002A  
                  sprintf@sp 00BB             __tdiv_to_l_@quot 0026             ___lwmod@dividend 0075  
           ___lldiv@dividend 0024                    stringcode 100A                 ??_write_char 0074  
               ?__tdiv_to_l_ 0020                     sprintf@c 00BE                     sprintf@f 0062  
           ___lldiv@quotient 0028              ___lwmod@divisor 0073              ___lwmod@counter 0020  
                   stringdir 100A                     stringtab 1000         __end_of_write_string 1122  
         __end_of_write_char 1E00                  configADC@ch 0075  
